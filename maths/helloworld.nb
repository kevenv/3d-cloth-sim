(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    623683,      12987]
NotebookOptionsPosition[    591823,      12201]
NotebookOutlinePosition[    592168,      12216]
CellTagsIndexPosition[    592125,      12213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.701286239372836*^9, 3.701286256798833*^9}, {
  3.7012862878966117`*^9, 3.7012862890656786`*^9}, {3.7012863991419744`*^9, 
  3.7012863997030067`*^9}},ExpressionUUID->"6c4e6ad4-5296-408d-98b9-\
80878fd88079"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.701286400955078*^9},ExpressionUUID->"2e529fc1-8adf-4bd6-9b42-\
fdba3527cfe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7012864061883774`*^9, 
  3.701286408838529*^9}},ExpressionUUID->"0a43853a-58ea-42ec-b543-\
69ebe7b993f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012864100135965`*^9},ExpressionUUID->"1a3e0d75-1616-405d-8f72-\
ab7ed6fa5283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012865016848392`*^9, 
  3.701286507262159*^9}},ExpressionUUID->"00658160-138f-49f5-bbce-\
fceec8971111"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "3", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "3", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.701286508491229*^9},ExpressionUUID->"d3167b53-2756-4b4b-8bf5-\
c1d8c7259745"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Input",
 CellChangeTimes->{{3.7012865802853355`*^9, 
  3.701286589908886*^9}},ExpressionUUID->"0da84099-33c7-4a63-9fe5-\
71f8e23d672e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012865910399504`*^9},ExpressionUUID->"f55ba5d6-e4f3-4a51-a4ec-\
9ea5e86d909b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.701286593024064*^9, 
  3.7012865936130977`*^9}},ExpressionUUID->"eccccb52-389c-4c04-9a4f-\
1b8f398b6469"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.701286594128127*^9},ExpressionUUID->"320e76d9-bd62-4537-b690-\
2a0657ef56e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "^", "2"}], " ", "+", " ", 
  RowBox[{"3", 
   RowBox[{"y", "^", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.7012865957932224`*^9, 
  3.7012866098370256`*^9}},ExpressionUUID->"2739d7fb-4fe4-4e94-8472-\
2c2c699bc342"],

Cell[BoxData["657"], "Output",
 CellChangeTimes->{
  3.701286611297109*^9},ExpressionUUID->"098ef718-899a-47a5-a961-\
b6973653ab28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012866194345746`*^9, 
  3.701286624876886*^9}},ExpressionUUID->"a329c4a4-4d62-4cae-b22c-\
d2e41f236f14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012866254489183`*^9},ExpressionUUID->"0ac4ce1e-77b5-44ef-9030-\
890582f72dd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"2", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012866275080366`*^9, 
  3.7012866303652*^9}},ExpressionUUID->"fb1f0b48-7473-4467-8aef-7c3037692b0e"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.701286630767223*^9},ExpressionUUID->"7cc55ad9-c6a1-4f87-b7f5-\
a449bce52f09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.701286642854914*^9, 
  3.701286647948206*^9}},ExpressionUUID->"52d874d5-083b-468d-9f35-\
5539d94d43ab"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.70128664836823*^9},ExpressionUUID->"29bacc51-9964-4e5b-9dfe-c0a9bd6f8837"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Sphere", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012866510493827`*^9, 
  3.7012866638281136`*^9}},ExpressionUUID->"f5c720ea-7897-4427-b2ad-\
0d64b3bc7065"],

Cell[BoxData[
 RowBox[{
  Graphics3DBox[SphereBox[{0, 0, 0}]], "b"}]], "Input",
 CellChangeTimes->{{3.701286687675478*^9, 
  3.701286687682478*^9}},ExpressionUUID->"df21e4b5-e50f-4e64-8884-\
1a8576ea14e0"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.701286678079929*^9},ExpressionUUID->"49f87b53-4a07-4e17-970d-\
bacebf070f60"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.701286678503953*^9},ExpressionUUID->"2b1d9c73-3611-4a19-9cf7-\
0a1d56c26333"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{
  3.7012866810280976`*^9},ExpressionUUID->"0ba657ab-a26b-4b6a-bcb2-\
44eeb08b5cb5"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{
  3.7012866813051133`*^9},ExpressionUUID->"a564112c-129c-4172-83e9-\
cbcc71a8e3d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", "3"}]], "Input",
 CellChangeTimes->{{3.7012866969860106`*^9, 
  3.701286698252083*^9}},ExpressionUUID->"f8acf390-1a5d-4475-9704-\
bd647f4ecf30"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7012866985120974`*^9},ExpressionUUID->"12dc0e6a-0f2c-430a-bfe1-\
051b7125b12b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{
  3.701286699570158*^9},ExpressionUUID->"a71bbd07-f185-4199-b761-\
d08779a12579"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.701286700073187*^9},ExpressionUUID->"ae76b686-19b3-4411-8215-\
b524281599bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"b", "*", "3"}]], "Input",
 CellChangeTimes->{{3.7012867010842447`*^9, 
  3.7012867025483284`*^9}},ExpressionUUID->"04549c8b-41c3-468e-b181-\
c48cccbe7471"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7012868341258545`*^9, 
  3.7012868429073563`*^9}},ExpressionUUID->"2ad4a373-59c5-4b76-8546-\
c711cb4f6522"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012868436273975`*^9},ExpressionUUID->"05cceafd-2e99-474a-9acc-\
b2a0a06739ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.7012868447034593`*^9, 
  3.7012868480356503`*^9}},ExpressionUUID->"65abefba-9ad1-497b-b6bb-\
d719b300e338"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\"}], \
\\\"}\\\"}]\\) does not exist.\"",2,25,1,22690021785386740422,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.701286991994884*^9},ExpressionUUID->"e2b5bcc5-eef5-4907-8f6c-\
559efee9d4f6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "5"}], "}"}], "\[LeftDoubleBracket]", 
  RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7012869942580132`*^9, 
  3.701287003449539*^9}},ExpressionUUID->"6b06187f-10c0-4888-9d42-\
d949847b3517"],

Cell[CellGroupData[{

Cell[BoxData[{"5", "\[IndentingNewLine]", "a"}], "Input",
 CellChangeTimes->{{3.7012870220976057`*^9, 
  3.7012870237617006`*^9}},ExpressionUUID->"8e062f0a-5206-44c5-ad62-\
b2597ca9385b"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.7012870241197214`*^9},ExpressionUUID->"6c9fb240-76d6-40e3-aa9d-\
01cee370286c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012870241217213`*^9},ExpressionUUID->"7febd607-2a95-4eff-9065-\
0ab6f09bf705"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"a", "+", "2"}]], "Input",
 CellChangeTimes->{{3.7012870260478315`*^9, 
  3.701287028073948*^9}},ExpressionUUID->"ee45c0a8-2d94-4536-af57-\
a9ab31fa39e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"3", ",", "6", ",", "7"}], "}"}], "*", "2"}]], "Input",
 CellChangeTimes->{{3.701287039401595*^9, 
  3.7012870413547072`*^9}},ExpressionUUID->"c3610b10-5c42-491a-9601-\
58f3c2f3154b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"6", ",", "12", ",", "14"}], "}"}], "*", 
  RowBox[{"{", 
   RowBox[{"6", ",", "12", ",", "14"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.701287046617008*^9, 3.7012870490981503`*^9}, {
  3.7012872988484344`*^9, 
  3.701287299975499*^9}},ExpressionUUID->"c475c27e-d072-4fc1-b593-\
06602807ffbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "144", ",", "196"}], "}"}]], "Input",
 CellChangeTimes->{{3.701287058040662*^9, 
  3.7012870595937505`*^9}},ExpressionUUID->"6e20499b-ef84-4ece-a36a-\
f300aad01e49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "144", ",", "196"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012870601537824`*^9},ExpressionUUID->"c7a445ce-8da4-4e90-b574-\
9b6ea5fa9218"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012870698103347`*^9, 
  3.701287081337994*^9}},ExpressionUUID->"369f8c80-3a91-4ae7-a3f1-\
01dc04aaae5c"],

Cell[BoxData[
 RowBox[{"Head", 
  RowBox[{"(", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.701287126616584*^9, 
  3.7012871303527975`*^9}},ExpressionUUID->"215ed9fd-fbca-4877-939b-\
477f19c982bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.701287136624156*^9, 
  3.7012871405693817`*^9}},ExpressionUUID->"9b7351aa-862b-483e-8074-\
fe57f9e01954"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{
  3.7012871412304196`*^9},ExpressionUUID->"81442709-900c-445a-9be1-\
7ca6458c6231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"length", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.701287143179531*^9, 
  3.701287167025895*^9}},ExpressionUUID->"64cc9c41-5918-4b70-93a3-\
e417c7b6e532"],

Cell[BoxData[
 RowBox[{"length", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "5"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7012871675869274`*^9},ExpressionUUID->"a0041cb5-51bc-4b37-a62a-\
ca65ca58f92c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.701287170304083*^9, 
  3.701287172409203*^9}},ExpressionUUID->"bdbb063e-3342-493d-b118-\
9cd9c5394c7f"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.701287172829227*^9},ExpressionUUID->"5e6d2f1d-21e1-4120-868d-\
360316478b48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701287307038903*^9, 
  3.701287328296119*^9}},ExpressionUUID->"3068dd19-602d-4672-bac9-\
2a346f91dcdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012873363635807`*^9},ExpressionUUID->"b0848cf1-aa70-4a85-a281-\
e1961ce56f84"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "5"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012871583603992`*^9, 3.7012871590244374`*^9}, {
  3.7012873027916603`*^9, 3.7012873051917973`*^9}, {3.7012874144630475`*^9, 
  3.7012874314230175`*^9}, {3.7012877093499146`*^9, 
  3.7012877524693804`*^9}},ExpressionUUID->"b9720a8b-b77d-4a0e-b012-\
e6e9f593ac43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4", ",", "20", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7012877590767584`*^9, 3.701287764612075*^9}, {
  3.70128779722094*^9, 
  3.7012878104286957`*^9}},ExpressionUUID->"08e4cbce-d488-4970-b8bb-\
267b51cf5afe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.701287811437753*^9},ExpressionUUID->"426e6605-f208-4ada-9ac7-\
c83c3d330ae9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "6", "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}], ",", 
   RowBox[{"f", "[", "12", "]"}], ",", 
   RowBox[{"f", "[", "14", "]"}], ",", 
   RowBox[{"f", "[", "16", "]"}], ",", 
   RowBox[{"f", "[", "18", "]"}], ",", 
   RowBox[{"f", "[", "20", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.701287811440754*^9},ExpressionUUID->"04f3e1f7-41fb-4550-adbc-\
de0e77441586"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "*", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "5"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012878275956774`*^9, 
  3.7012878906042814`*^9}},ExpressionUUID->"ccec01cb-ccae-48b0-b299-\
7a9c8352d1db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.701287995497281*^9},ExpressionUUID->"ee7ea613-21ff-47fd-a0ce-\
9aa042c876f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "=", " ", "now"}]], "Input",
 CellChangeTimes->{{3.701287998683463*^9, 
  3.7012880000185394`*^9}},ExpressionUUID->"a5c12ea5-5366-4625-b6c2-\
6cd43db5de0c"],

Cell[BoxData["now"], "Output",
 CellChangeTimes->{
  3.701288000783583*^9},ExpressionUUID->"6bec0f33-de83-4f4f-a2f8-\
f9a244632d40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "=", " ", "Now"}]], "Input",
 CellChangeTimes->{{3.701288002956708*^9, 
  3.7012880186186037`*^9}},ExpressionUUID->"c6e92d7a-d17a-420b-b3a8-\
f78579c90c5b"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:33:39\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "33", ",", 
           "39.4216493`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288019447651*^9},ExpressionUUID->"aa8b82f8-d46d-4def-bce4-\
ca2120c90b41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.701288020886733*^9},ExpressionUUID->"b3516106-ced9-4624-9d7e-\
30c8b78e5892"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:33:39\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "33", ",", 
           "39.4216493`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288021313758*^9},ExpressionUUID->"b8adcf07-1fb1-4128-b91d-\
bf4403c24cba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.7012880240959167`*^9},ExpressionUUID->"5a776084-accb-428a-aee2-\
c0c24b6ad748"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:33:39\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "33", ",", 
           "39.4216493`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288024522941*^9},ExpressionUUID->"3ab049d2-4e93-435c-addd-\
962e45c95a8f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"t", ":=", " ", "Now"}]], "Input",
 CellChangeTimes->{{3.7012880263650465`*^9, 
  3.701288028282156*^9}},ExpressionUUID->"69ec8560-47bf-4834-9efa-\
a3907ddaace2"],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.701288047131234*^9},ExpressionUUID->"1c9ad3d9-ed39-4fed-8767-\
cf5a01755442"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:34:07\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "34", ",", 
           "7.7812714`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288047794272*^9},ExpressionUUID->"24a6714b-ee94-494a-a01a-\
4ba3489bc004"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.7012880489413376`*^9},ExpressionUUID->"5450ecea-a206-474c-8d28-\
3042173c76ed"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:34:10\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "34", ",", 
           "10.0364004`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288050048401*^9},ExpressionUUID->"d8e8f109-1b58-41e8-9c60-\
6910c5904916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", ":=", "."}]], "Input",
 CellChangeTimes->{{3.7012879898589582`*^9, 3.7012879907540092`*^9}, {
  3.701288062210097*^9, 3.701288063562174*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"e9ab5703-9557-426a-8e7b-fd3f503ba212"],

Cell[BoxData[
 TemplateBox[{
  "Syntax","tsntxi",
   "\"\\\"\\!\\(\\*RowBox[{\\\"t\\\", \\\":=\\\", \\\".\\\"}]\\)\\\" is \
incomplete; more input is \
needed.\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\)\"",2,64,4,
   22690021785386740422,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.70128835459282*^9, 
  3.701288361328205*^9}},ExpressionUUID->"66b9b0c5-120e-4203-81cb-\
822ad593806d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.701288065255271*^9},ExpressionUUID->"e456fa07-ce44-4dee-81f5-\
3d1c2a382ba1"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:34:25\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "34", ",", 
           "25.5812895`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7012880655932903`*^9},ExpressionUUID->"47565110-c559-41e2-af48-\
54f7c019c1c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.701288066361334*^9},ExpressionUUID->"ac923ac2-d67c-4a14-bbf2-\
c2ff1c25b70e"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:34:26\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "34", ",", 
           "26.5893471`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288066603348*^9},ExpressionUUID->"092a1658-003f-4d2b-8c24-\
11d716188682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.701288067126378*^9},ExpressionUUID->"d499ee58-09b9-4a96-8133-\
ce5fe980f9ce"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sat 15 Apr 2017 19:34:27\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        RowBox[{"-", "4.`"}]}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2017", ",", "4", ",", "15", ",", "19", ",", "34", ",", 
           "27.3413902`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.701288067351391*^9},ExpressionUUID->"bd7e0476-2819-4686-abe4-\
553aa84a4773"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"t", "=."}]], "Input",
 CellChangeTimes->{{3.7012880703345613`*^9, 
  3.701288071114606*^9}},ExpressionUUID->"cad648cc-02ce-4849-8c70-\
e12ee35bec16"],

Cell[CellGroupData[{

Cell[BoxData["t"], "Input",
 CellChangeTimes->{
  3.7012880722606716`*^9, {3.7012881471949577`*^9, 
   3.7012881489940605`*^9}},ExpressionUUID->"fdd027f8-0d94-41eb-b9e6-\
e4aec99c6f23"],

Cell[BoxData["t"], "Output",
 CellChangeTimes->{
  3.7012881498791113`*^9},ExpressionUUID->"f2cc98b6-10c3-4215-9876-\
82c0192c5f13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", "4", "]"}], ",", 
     RowBox[{"f", "[", "3", "]"}]}], "}"}], ",", " ", 
   RowBox[{"f", "[", "_", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701288411993103*^9, 
  3.7012884337283463`*^9}},ExpressionUUID->"ed8c7389-6331-4410-aeab-\
90555084bca6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012884359574738`*^9},ExpressionUUID->"6e3c335e-6caa-4b26-8dc3-\
e525f3f69ac2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{
   RowBox[{"f", "[", "100", "]"}], ",", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "\[Rule]", 
    RowBox[{"x", "+", "5"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701288138761475*^9, 3.701288140265561*^9}, {
  3.7012896055513706`*^9, 
  3.7012896194151635`*^9}},ExpressionUUID->"3e97aa01-8c75-4d47-99ad-\
a50ef3410984"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.701289620999254*^9},ExpressionUUID->"0e92fed4-28ec-49ac-834f-\
61dfeb910668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["f"], "Input",
 CellChangeTimes->{
  3.7012896739602833`*^9},ExpressionUUID->"144c33ed-1bbf-4ee5-bfdc-\
7a63936d2edc"],

Cell[BoxData["f"], "Output",
 CellChangeTimes->{
  3.701289674155295*^9},ExpressionUUID->"050b84ff-4eb5-45aa-ab4c-\
0f612dc5213e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.701289676288417*^9, 
  3.7012896798626213`*^9}},ExpressionUUID->"6a09feb9-a699-4ca7-bfad-\
dd532d303719"],

Cell[BoxData[
 RowBox[{"f", "[", "100", "]"}]], "Output",
 CellChangeTimes->{
  3.7012896802116413`*^9},ExpressionUUID->"e5d1c3b6-5c9f-4eb1-b21c-\
0b05a96c3a42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], ",", 
    RowBox[{"g", "[", "2", "]"}], ",", 
    RowBox[{"f", "[", "5", "]"}], ",", 
    RowBox[{"g", "[", "3", "]"}]}], "}"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "\[Rule]", 
   RowBox[{"x", "+", "5"}]}]}]], "Input",
 CellChangeTimes->{{3.701289798066382*^9, 
  3.701289822213763*^9}},ExpressionUUID->"82e0cc49-3615-4519-9d0a-\
cb5b93713d70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", 
   RowBox[{"g", "[", "2", "]"}], ",", "8", ",", 
   RowBox[{"g", "[", "3", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012898240778694`*^9},ExpressionUUID->"7a6d5b49-1dd3-406a-aaa9-\
378a91cb2f93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"x", "+", "y"}]}]], "Input",
 CellChangeTimes->{{3.701287847275803*^9, 3.701287847451813*^9}, {
  3.7012897636474133`*^9, 3.701289794918202*^9}, {3.7012900812045765`*^9, 
  3.701290096844471*^9}},ExpressionUUID->"5851ebb1-72d3-437f-8215-\
d13f2121a7cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"4", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012901000536547`*^9, 
  3.701290102003766*^9}},ExpressionUUID->"23fff7c0-0f70-4888-a28f-\
aca8127fe758"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.701290102400789*^9},ExpressionUUID->"cdceb4b8-3e4f-4132-9cd6-\
7028225462ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.701290113118402*^9, 
  3.701290114347472*^9}},ExpressionUUID->"ea0f0780-ec29-45bb-b784-\
d5ccb1b1be34"],

Cell[BoxData["f"], "Input",
 CellChangeTimes->{
  3.7012901162305803`*^9},ExpressionUUID->"bf3c88a5-e0d5-4571-b303-\
4a4d01706fd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "1", "]"}], "=", "2"}]], "Input",
 CellChangeTimes->{{3.701290128211265*^9, 
  3.7012901306444044`*^9}},ExpressionUUID->"0faa5949-6d1d-4cae-a7c9-\
ab6f0acc6875"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.701290131160434*^9},ExpressionUUID->"9625ce57-9958-4b20-9edf-\
39844142c688"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "2", "]"}], "=", "3"}]], "Input",
 CellChangeTimes->{{3.7012901331755495`*^9, 
  3.7012901353806753`*^9}},ExpressionUUID->"0fcf1da5-32ae-44e8-b945-\
e0d08aa0bcd5"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.701290135735696*^9},ExpressionUUID->"518dd81f-66d2-430c-95e9-\
d1d6b13ef730"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7012901398089285`*^9, 
  3.7012901497234955`*^9}},ExpressionUUID->"2f67b8cd-3f5c-4766-b074-\
0c39b41743f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.701290150750554*^9},ExpressionUUID->"9d16b0b1-8655-438b-a0a3-\
f04b72c31424"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "-", "y"}], "/;", 
   RowBox[{"x", ">", "y"}]}]}]], "Input",
 CellChangeTimes->{{3.7012901785711455`*^9, 
  3.701290193387993*^9}},ExpressionUUID->"69e688b0-53aa-415b-b706-\
5c56a5e274b9"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.701290195469112*^9, 
  3.701290202483513*^9}},ExpressionUUID->"72210c80-3333-4a99-9a7d-\
ecada4a29fe7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.70129020819484*^9, 
  3.701290209162895*^9}},ExpressionUUID->"05340725-6adf-44a3-a51b-\
232943636965"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.701290210064947*^9},ExpressionUUID->"81e34afe-62ff-40bc-8ab6-\
89cd9ba5a73d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_"}], "}"}], ",", "z_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "z"}], ",", 
    RowBox[{"y", "-", "z"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7012877699323792`*^9, 3.7012877840841885`*^9}, {
  3.7012902216346087`*^9, 
  3.7012902435158606`*^9}},ExpressionUUID->"c58b6412-32d4-41fe-a8b6-\
f0c1472d0878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.701290245876995*^9, 
  3.701290251539319*^9}},ExpressionUUID->"556b2bf2-8a76-433b-ba72-\
2306c1d1d24b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"5", "+", "q"}], ",", 
   RowBox[{"6", "-", "q"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012902521603546`*^9},ExpressionUUID->"9f0d4bff-33fa-41e4-aeb4-\
b6877e237c92"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"u", "[", "x_", "]"}], "]"}], ":=", 
  RowBox[{"x", "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.7012874371323442`*^9, 3.701287474878503*^9}, {
  3.701287570653981*^9, 3.701287577989401*^9}, {3.70128761346943*^9, 
  3.7012876155095468`*^9}, {3.7012903148499403`*^9, 
  3.7012903229704046`*^9}},ExpressionUUID->"918ebe61-c8b4-4330-9245-\
a7f2db9a8cff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"v", "[", "x_", "]"}], "]"}], ":=", 
  RowBox[{"x", "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.7012903241554728`*^9, 
  3.701290336594184*^9}},ExpressionUUID->"af4eed14-e2a5-477f-b1fb-\
7d6d4cec3d41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"u", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.701290337733249*^9, 
  3.701290345058668*^9}},ExpressionUUID->"b3f03341-fd67-4802-84be-\
412000ac8d19"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.7012903458077106`*^9},ExpressionUUID->"b2c4eeeb-6aad-4089-942b-\
2484c5461f44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"v", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012903527061057`*^9, 
  3.7012903554822645`*^9}},ExpressionUUID->"526f7e4d-96e8-44fd-94ce-\
1b75840430a6"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.7012903561903048`*^9},ExpressionUUID->"0aec8b48-26dd-44d2-b784-\
3bcaa4227734"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"w", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012903576523886`*^9, 
  3.7012903643777733`*^9}},ExpressionUUID->"f0762bad-1e74-4c87-80ed-\
477648dc8a7c"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"w", "[", "3", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7012903648858023`*^9},ExpressionUUID->"585e2cb6-8ebe-47d5-995c-\
091df4d9a1ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"#", "+", "1"}], ")"}], "&"}]], "Input",
 CellChangeTimes->{{3.701286986089546*^9, 3.7012869860945463`*^9}, {
  3.7012904491226206`*^9, 
  3.7012904714168954`*^9}},ExpressionUUID->"2032eacd-e764-4ea7-9e82-\
df969b80cdef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"#1", "+", "1"}], "&"}]], "Output",
 CellChangeTimes->{
  3.701290472660967*^9},ExpressionUUID->"d3fe1db6-03d6-4ed6-b51c-\
7206c32b413c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "+", "1"}], ")"}], "&"}], "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.701290486565762*^9, 
  3.7012905178005486`*^9}},ExpressionUUID->"fa3b2841-5355-4fca-9f86-\
c62e48f7faba"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.7012905189756155`*^9},ExpressionUUID->"935f3652-7f1f-4aa3-924d-\
81b851091a10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#2", ",", 
     RowBox[{"1", "+", "#1"}], ",", 
     RowBox[{"#1", "+", "#2"}]}], "}"}], "&"}], "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012905353335514`*^9, 
  3.7012905847853794`*^9}},ExpressionUUID->"99e513d9-b5dc-4045-8430-\
1dffffe7f48d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.701290585879442*^9},ExpressionUUID->"9e24fc16-3baa-423f-9172-\
d320a68149ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"a", ":=", "."}]], "Input",
 CellChangeTimes->{{3.7012905923618135`*^9, 3.701290594256922*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"37e6be63-7710-4201-bd31-c7bdd871209f"],

Cell[BoxData[
 RowBox[{"b", ":=", "."}]], "Input",
 CellChangeTimes->{{3.701290595827011*^9, 3.7012905973771*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"19ee3ccc-ebfd-433c-8534-7ee6eb06b45d"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7012905984751625`*^9},ExpressionUUID->"efff9590-b8ee-403e-875c-\
a0fe4ce94058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012905987151766`*^9},ExpressionUUID->"b00a72ac-52e4-42be-8fa6-\
42931f35162d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{
  3.701290599389215*^9},ExpressionUUID->"0f466301-d6a9-46de-ab53-\
ec3b61c101c6"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.701290599582226*^9},ExpressionUUID->"39bbb438-50b1-4e31-90f7-\
2e27ce30af5d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.701290601681346*^9, 
  3.7012906061286*^9}},ExpressionUUID->"96819460-d17e-41bc-92aa-5a63040b1e73"],

Cell[BoxData[
 RowBox[{"Clear", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.7012906074096737`*^9, 
  3.7012906097528076`*^9}},ExpressionUUID->"b7862501-d852-460b-9aab-\
f54caf8ab5c6"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7012906111598883`*^9},ExpressionUUID->"e6fdcab0-f9dc-486a-b105-\
39f0017b2922"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{
  3.7012906113889017`*^9},ExpressionUUID->"b9a279ee-bf1d-479e-aaab-\
93bbec12a8ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["b"], "Input",
 CellChangeTimes->{
  3.701290611850928*^9},ExpressionUUID->"30cd7ec3-3c06-4e34-b2c1-\
5ba373f52ff3"],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{
  3.7012906121249437`*^9},ExpressionUUID->"8f24c9b7-e2fe-4ca0-b1aa-\
972ff5cd00d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#2", ",", 
     RowBox[{"1", "+", "#1"}], ",", 
     RowBox[{"#1", "+", "#2"}]}], "}"}], "&"}], "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012880577668424`*^9, 3.701288059329932*^9}, 
   3.70129062290456*^9},ExpressionUUID->"49b1826f-de59-419f-be68-\
deec4627588f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", 
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"a", "+", "b"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012906239266186`*^9},ExpressionUUID->"1191782a-952d-42c7-8d50-\
66f89d1739e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"1", "+", "x"}], ",", 
      RowBox[{"x", "+", "y"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.701290639270496*^9, 
  3.701290665023969*^9}},ExpressionUUID->"9a88f474-aecb-4182-bad4-\
aced670b8aee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", 
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"a", "+", "b"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012906729104204`*^9},ExpressionUUID->"c48a9e10-23af-4ed8-89d4-\
b0cd0607358d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Sphere", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012871543201685`*^9, 3.701287155096213*^9}, {
  3.7012910710541925`*^9, 
  3.701291073709345*^9}},ExpressionUUID->"d32c8b70-51c5-44d9-8f34-\
bd0510e4754f"],

Cell[BoxData[
 Graphics3DBox[SphereBox[{0, 0, 0}],
  ImageSize->{144., Automatic},
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.701291074027363*^9},ExpressionUUID->"3aa6d900-cb6e-4429-b87f-\
fcaa7aa3fc25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701291404963291*^9, 
  3.7012914159469194`*^9}},ExpressionUUID->"ae382e7f-848b-4231-9bbf-\
d4ad95a4d3a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012914164309473`*^9},ExpressionUUID->"1fd4373f-6125-4f8c-bb94-\
135fa87f597c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.70129144078434*^9, 
  3.7012914543551164`*^9}},ExpressionUUID->"f49f3d08-2c8b-4ac5-9082-\
a0c280f96d56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", "b", "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.70129145495415*^9},ExpressionUUID->"2248cd6c-93cd-4c6e-aac1-de37d610298b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#", ",", "#"}], "}"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7012914632426243`*^9, 
  3.70129148362679*^9}},ExpressionUUID->"ea5db55f-a716-4efe-ac80-\
d9e42536f786"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.701291484276828*^9},ExpressionUUID->"f67a79d0-2099-4066-b6b2-\
cb2c2d735aba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70129156053819*^9, 
  3.7012915744179835`*^9}},ExpressionUUID->"64b5dfb2-8bdb-4ca2-a8c6-\
46debf7e76c1"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7012915749110117`*^9},ExpressionUUID->"09380e2f-8707-4964-8d48-\
57f09a5f47fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nearest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
   ",", "6.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.701291972333743*^9, 
  3.701291992470895*^9}},ExpressionUUID->"46a7d7ee-9526-4ad9-9e9f-\
0bba7873634e"],

Cell[BoxData[
 RowBox[{"{", "6", "}"}]], "Output",
 CellChangeTimes->{
  3.701291994311*^9},ExpressionUUID->"47bb6330-59c5-4529-be98-e87f0c4de69f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nearest", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7012919961741066`*^9, 
  3.701291997230167*^9}},ExpressionUUID->"ecb92e7c-9f74-4179-a181-\
f70bfbe14a07"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NearestFunction", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{
                   RGBColor[1, 0, 0], 
                   PointSize[0.125], 
                   PointBox[{0.5, 0.5}]}}, {{
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   
                   PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                    0.7056740672325248, 0.6072610584092579}, {
                    0.8751907147676556, 0.43365086554091525`}, {
                    0.5311259379568558, 0.7402341039205544}, {
                    0.024850489769640216`, 0.2680094271842395}, {
                    0.8535001476389303, 0.09037709159382268}, {
                    0.18825996468471073`, 0.11580607373374763`}, {
                    0.37580999850411323`, 0.7473443767647248}, {
                    0.7179416455907517, 0.31385476481358254`}, {
                    0.6087567739228883, 0.045415361402344034`}}]}}}, {{
                  GrayLevel[0], 
                  PointSize[0.125], 
                  PointBox[{0.7056740672325248, 0.6072610584092579}], {
                   AbsoluteDashing[{1, 2}], 
                   
                   CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                    0.23196283448656893`]}}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> None, ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRangePadding -> 0.1], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{
                   RGBColor[1, 0, 0], 
                   PointSize[0.125], 
                   PointBox[{0.5, 0.5}]}}, {{
                   GrayLevel[0.5], 
                   PointSize[0.125], 
                   
                   PointBox[{{0.1795528351379172, 0.0994714438781299}, {
                    0.7056740672325248, 0.6072610584092579}, {
                    0.8751907147676556, 0.43365086554091525`}, {
                    0.5311259379568558, 0.7402341039205544}, {
                    0.024850489769640216`, 0.2680094271842395}, {
                    0.8535001476389303, 0.09037709159382268}, {
                    0.18825996468471073`, 0.11580607373374763`}, {
                    0.37580999850411323`, 0.7473443767647248}, {
                    0.7179416455907517, 0.31385476481358254`}, {
                    0.6087567739228883, 0.045415361402344034`}}]}}}, {{
                  GrayLevel[0], 
                  PointSize[0.125], 
                  PointBox[{0.7056740672325248, 0.6072610584092579}], {
                   AbsoluteDashing[{1, 2}], 
                   
                   CircleBox[{0.7056740672325248, 0.6072610584092579}, 
                    0.23196283448656893`]}}}}, AspectRatio -> 1, Axes -> 
               False, Background -> GrayLevel[0.93], Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> None, ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRangePadding -> 0.1], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"variable\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Distance function: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["Automatic", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NearestFunction[{1, <>}]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7012919980792155`*^9},ExpressionUUID->"e8b02a15-5c49-4ef1-86ff-\
9722b5ee361e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "4.3", "]"}]], "Input",
 CellChangeTimes->{{3.701292013779114*^9, 
  3.701292018214367*^9}},ExpressionUUID->"95d483dd-199b-4ead-9872-\
b987c9f06792"],

Cell[BoxData[
 RowBox[{"{", "4", "}"}]], "Output",
 CellChangeTimes->{
  3.70129201861839*^9},ExpressionUUID->"ddc38c70-9637-498e-88f8-0d4564d30810"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "3.3", "]"}]], "Input",
 CellChangeTimes->{{3.7012920256047897`*^9, 
  3.7012920285179567`*^9}},ExpressionUUID->"1b97d402-2701-4c24-a889-\
49ff63935909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "4", "}"}], "[", "3.3`", "]"}]], "Output",
 CellChangeTimes->{
  3.7012920289389806`*^9},ExpressionUUID->"63d06ab9-bc87-42f7-a1d8-\
39c29f8b93e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701286968888562*^9, 3.7012869700096264`*^9}, {
  3.7012921786535435`*^9, 
  3.701292194429446*^9}},ExpressionUUID->"f22dfe63-477f-4ca4-b61c-\
663872374fb0"],

Cell[BoxData[
 FrameBox["9",
  Background->RGBColor[0.87, 0.94, 1],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7012921954345036`*^9},ExpressionUUID->"69fd6513-c998-4980-b70f-\
9457752cea43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "Framed", "]"}]], "Input",
 CellChangeTimes->{{3.7012922028089256`*^9, 
  3.701292207469192*^9}},ExpressionUUID->"b04b7fa1-adb5-4315-939d-\
92cc6423cbfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Alignment", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"DefaultBaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"DefaultFrameStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "0"}], ",", 
   RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012922078982162`*^9},ExpressionUUID->"9b40a5c2-76a5-414b-a281-\
5f08a4b20c81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "xy", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"#3", "/", "3"}], ",", ".5"}], "]"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7012922988674192`*^9, 
  3.7012923683323927`*^9}},ExpressionUUID->"1c353b83-67eb-43ad-8487-\
81c61dea5f00"],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{368.83796303657334`, 227.98229338421515`},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 3}, {0, 3}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.465011563585612, 1.9360221847355814`, 1.274965133484397},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.701292369178441*^9, 3.7012923892435884`*^9}, 
   3.701292445346798*^9},ExpressionUUID->"a29b4155-a903-4eed-b233-\
bde8096a75be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ClearAll"], "Input",
 CellChangeTimes->{{3.7012923819691725`*^9, 
  3.7012923844573154`*^9}},ExpressionUUID->"93db6091-4bcb-4113-b1ea-\
b5559aab821d"],

Cell[BoxData["ClearAll"], "Output",
 CellChangeTimes->{
  3.7012923849203415`*^9},ExpressionUUID->"99e0d0a3-01de-4c49-a8bd-\
a5a445356f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.701292416064123*^9},ExpressionUUID->"a1d7c351-730f-4ac2-a424-\
1e30c8aa80ec"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7012924162731347`*^9},ExpressionUUID->"f0e22d3d-5592-42d0-8843-\
0e5a10a66699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{
  3.701292417426201*^9},ExpressionUUID->"e864802d-1de7-45be-aba7-\
4e7f2eec4658"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.701292417623212*^9},ExpressionUUID->"3ee81d87-7f6d-42df-93e9-\
05a0ec7b5a7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.701292419490319*^9, 
  3.701292434139157*^9}},ExpressionUUID->"e002920f-d349-4246-90d6-\
186e177e36ea"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.701292436490291*^9},ExpressionUUID->"ed8f5314-8930-4339-9605-\
f3e1c6f124a7"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{
  3.7012924368153095`*^9},ExpressionUUID->"8c5b02a0-abfe-4e59-b614-\
148fe2eac220"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{
  3.7012924380423803`*^9},ExpressionUUID->"caf6bb3d-ac98-4f5d-abf6-\
96b4ce450770"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{
  3.7012924384164014`*^9},ExpressionUUID->"c7fa9a26-5866-4174-95cc-\
8fac9f7b1329"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.701292492683505*^9},ExpressionUUID->"f91ac882-8a3a-486f-af6e-\
409fac2e7f5e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{
  3.7012924930245247`*^9},ExpressionUUID->"dc1a4b6a-3dca-45b5-897b-\
f904a1e19a53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{
  3.701292494205592*^9},ExpressionUUID->"9161b6fb-2cad-4cd5-a0ad-\
1376121354b1"],

Cell[BoxData["y"], "Output",
 CellChangeTimes->{
  3.7012924943996034`*^9},ExpressionUUID->"29780db9-7a7d-4e47-aa6a-\
72c9fb933652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "xy", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"#3", "/", "3"}], ",", ".5"}], "]"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",ExpressionUUID->"106abed2-b054-4e9d-89b4-2fd0c83267d5"],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{366.74337125090693`, 315.2240685816313},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 3}, {0, 3}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.1985282622598434`, -2.0562648953322027`, 2.405266032019918},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7012924959346914`*^9},ExpressionUUID->"6373fa5f-0b67-4885-9edc-\
d64d4898c00b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot2D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "xy", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701292536867032*^9, 
  3.7012925570031843`*^9}},ExpressionUUID->"2c01d0b7-1d0f-4de5-825c-\
9258a64c0ee1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "xy", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701292561610448*^9, 
  3.7012925620744743`*^9}},ExpressionUUID->"2e0415cd-7b41-442f-966f-\
360af3503240"],

Cell[BoxData[
 TemplateBox[{
  "Plot","nonopt",
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"y\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"3\\\"}], \
\\\"}\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"Sin\\\", \
\\\"[\\\", \\\"xy\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"y\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"3\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\). An option must be a \
rule or a list of rules.\"",2,124,13,22690021785386740422,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.701292563132535*^9},ExpressionUUID->"1e16c472-6779-4b92-9934-\
292ad2010498"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701292567450782*^9, 
  3.7012925825786467`*^9}},ExpressionUUID->"4216ad2f-ebb0-42b0-ab75-\
c287a567bd3f"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"2\\\", \\\" \\\", \\\"pi\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\
\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"pi\\\"}]}], \\\"}\\\"}]\\) is not a \
machine-sized real number.\"",2,126,14,22690021785386740422,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7012925837087116`*^9},ExpressionUUID->"cd8f8fef-936a-4776-9dd8-\
3bef201c59a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "*", "pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701292591874179*^9, 
  3.701292591880179*^9}},ExpressionUUID->"72506f9f-da42-4de2-b7b9-\
6f4b396875eb"],

Cell[BoxData[
 TemplateBox[{
  "Plot","plln",
   "\"Limiting value \\!\\(\\*RowBox[{\\\"2\\\", \\\" \\\", \\\"pi\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"0\\\", \\\",\
\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"pi\\\"}]}], \\\"}\\\"}]\\) is not a \
machine-sized real number.\"",2,127,15,22690021785386740422,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7012925930512457`*^9},ExpressionUUID->"6630bda1-78aa-417e-a7b6-\
d771bfbc24c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "*", "2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701292607682083*^9, 
  3.7012926377468023`*^9}},ExpressionUUID->"48a5342f-b087-437e-8a80-\
6d8813e51058"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwkm3k81N/3xyUVorIm+y6MZRhGJfcklfCRypIsoUVpQ6GQJIQWS1FkS7YU
2UVxKUKrkCWSfZ95I7Lze38fv7/ej/O445zX69zlfZ8eM1JOl4+cZmVhYVFm
Y2H533Mt5vzWp/VMT63i/59yIxW7xB/eRMsXD5VzkM+FXLVT7VHhKORH6YU7
5HOA/+xccVQSsm+tkLocmYR+7Q98nxb1Gm0sE0sOvv8a/TwRpZAQhdG7n4df
yfhhdOTCtl9Por6j/VkXW3vhO+LSQTjmQAOa6Lvs9UmYfJa68fTUNKCq4Vdf
+x81oOLyliKP9z+Q5c3ecYuQH2hvTfJK4tsmxNwhqvXvfBOya6ZFTGa3olPp
b24+km1FkVO2BTFRf9CQedvREtMudF8gTreSuxsFJwrQ2Wu7UGNekITWkW7k
tegEX/T+IJtR2wHxjm6k5pj19IhgN7pks9FtarwHXcz0KHjN0oMe7T4bErul
H7WGjz2N/NiL2tuPnt9k0Y9U2BaLfi73InFPZHo7th+1qUoPvqf1oYwcQf6L
0gNIdMOP+EfP+lCZRE0S0AaRXoL1wQXPfvRnjXTJkNUwqp5lqC9uHkSyidxx
tvHDyGnU29l+zyA6u3Pe90f3MBJ4YV1t4z6Iptwb9N+eG0G7bLe6SzUNIrZ+
v28PfEbR9rKH9yrDh5DSx44BraRxJMMz4fZwehhddqqty+obRz3t7QI0iRFU
uJL/UmI7A/XB2yrHgyNoNz3MjSOPgT40HldzjB9BZpk6y53vmSiQ176uQ3cU
7aox4tS/MoGw2ksRaecxtKU5/Tv94QQ6clO8kHFnDPX3skarFEygojybK8aZ
Y+gBy1uJbX8nkE6qzcm3Q2Ood5ey1oT7JKK8MbQ84TiOSozuLAxETaKqhanT
OX7j6J51H+7In0Q39To/3H06jrS8nhrVTk2iR+uDkoimcRSSv9Eh0X0KrWnq
zT6EGMiuylnuUdQUYtnbucBmzUAaDR9GQ/OnkH7AiOo+dwbqZPh4eExNodVE
vrennjOQmuJ4mIn7X2R71KJRgIWJ2HQMzfSj/qLogD+lWwWZqG1/qoBO/l+0
r0gw5pkyEwWcsk2WmfqLth592WJswUQtSV+KFtymUe3os5DJFCZ6mbPdZyJy
Gr1ZLRFSKmIi//JAGMybRoVzddLDH5lIsUP384/JaeTxKu7u32EmWhl5ElHL
M4OapgKdYJ6JGuemLcqpM+jcEfych4NAvoLZ3ZluM+jX6WQXUCDQYTmO9MTI
GXT4YLtXghaB5Gmnzz/Km0EVQSErN/YSqOGw2L+bkzMo27cqvs6OQGkO1996
8PxD53hPGWu4EMj78k//89R/SOx47jNxTwLJ3L+/0crtH1J7SoT43SPQ3NOR
BpPIf+jP3vjKyRgCfcnaF6Of9w85OjozBpMJ5Fm3LKk6+Q/lF50MtSwgkHGr
9aAMzyz6mL/udcNbAkkOFr3cRp1F5S2Z2l8+EOjT2kva69xmUUpEEHN/I4GS
eD8tLkTMous28/01bQS6KiVfNZE7i4IS+uprughkqB4QPNgwi8wkzYP29xNI
DHUZd07MonRuyzWGIwSa+m8nT+OWOaR2YELxE4NAH21jWmrV55BcsRzjyySB
np6felpuNof4H87sNJshkKu3qWOB6xwqTbNZZz5HIKNLupnsEXOocQW1flkg
/TspEXav5xBPcz3b5yUCLVkIaRd8m0OJCebBpisEajm4/gY7cw517eO1tFol
UO7u6Q923PMoH210HSDjMGovZwFlHuVGizfOkfEpuYbD7Cbz6L+pNb6RZLx7
W8UTu/PzaD55z+XXZD5B7ld/8sPmkVoIvD6yTKAJljh59qx55Cuqs8dnkezX
9J2LdvXzyNVEh6I4T6DUYY/C/OF5dO+0wnXbfwTy6zy5uIF9AclMVWkI/CWQ
VcNhfTuFBaQQEXf6KEEg9WoUmr9/Ac1XbpPcOkYgzjcqDRvOLCCp/BvuDoME
6n8pstUuaAGxr7ZfUushUEUSh31+6gJ6fn6rYmAHgZ48nE3dUL2Atj35W2z/
k0BudwbGbPsW0MlsFnX8jeyfT5NGPusiGmVNy06rJZDs5arrG6QX0dZyYWPe
SgK1WSZsyHdYRNnXbtv4vSZQvtFd0w3+i2j/DMcmv3QC3dW7Hm2bRH6+/c4J
tgQC6clbyGzoWkS2RY/c00IIJCS818V2eRHxDukHVN4g55ubmpcnuoTGP8p9
dXIn1/MMF7K1WUL0ifzq3cfJfowsBOV5L6Far5mvnv8R6Njv4S/r45ZQ0sen
n+lAIK6a6uN5bUuIw5HH7Ygsgdwf+Xqut1xGx+4wTk4MMpFJiEu5jccyWtZa
Yb3cwkTyvsfY8h4tI6chhr1XDRO1n6RF2TQto08HPI/Kk/sbNMezc81W0A7D
fe/YLJlIWOHX9DrXFSSeOf++bQ8T/RWu22UTvoIcExwrdVSYKJ01tX7dtxXU
5nT+dwIrE3E32gwcN15F76V5CtdlMtDFN6cfsMqwQMzvz5vjfo8j1YOHJdfQ
WIDW4JSzpnIcTbTr5q8asECw1Xz40LNxdHWRr2XpDAvsKq3drX5qHHnrvReb
zWKBBCn7nOreMRRcLZ49prEG9pwPve9bN4oMLTjR6N41MCRlMsX1fBRxDM40
DJuvgUZ+qozcjVF0b8PX6QHPNRC9UPCYUBtFD418dLvL1oC1EHUdS8QISm5o
/dyszwoPeN1uvN5JvnccP9g1HWWFEbPzx3g2DZPrMIf4cYoVpm78l76+Zwil
8wXzfQ9mBaHNJfU5QUMo25JmU/+JFeSj1Hs2fhpEZZ0Ro+VH1sL5Ns7xQjSA
mocPcmQ4scHNBP2Ohf4eRMRu33fbnQ1Wrkk+RLk9iNN4w60TAWzgRWev0fPp
QZBdPbc1hQ3W2Ji1X97Sg166oeGQHjbomUr8VkDvRgELtFoXh3XwybFLaHm6
E6lxSQap2q+HpEtOdtY5P1GY2j+WYmt2sGy1G7q68gZ5ex1UHnRhh1cFmw3a
fhWjczjeQtCXHU5np0s2Fhciw0N7szwT2eHkGdXe3Iu5aMPliKP0PnZIP+jt
XOGQhAJzlNLfXOCA7y/qXxvkpGA/lRPGb29ygt6Rm+otlTX4kke+x1gEJ2if
KH+V9v0jtitflyySwgkRbJGdG7tqse5/r6Z9qjnBP1yjLWS+Hi9emE/Q5dgI
/R7CuuVK3/C1Vw8nyqM2wvu1DVljOk3YTbkuujKNC+52p5c36nTg/tP9/snF
XKDYWyX3Ib8DWyazXPCv5YKsA/KHdSideKfADn0Y4QKLE44BmWK/MevqCyam
cMO/9R8rTi904ajGuwdwATcM8wie/GDSg9m4MzWSqrmBq+PqvdNBPdjzQLXY
zZ/c4HBWsKq0vAcff7f0V2+WG9J81p68qtKLpdMvJlfs3AR+AZ5eWzn6cP71
Q/PlVZugwu45957cfixbeL4/oXETlGUKh0f29eMY5p3vN/o2gVX2Z4kgwQHs
fbIybfe6zTCynD9w2GcA6/9HPVJuuBmMj75MOgeDuEmS7+W775uhfOXtruaS
IbzfRi0mvnszdEUWbyP6h/CbaONbvpObIerF14wknmFsuu69ciLHFrh47mdZ
xblhrOG9sMZeeQtsV+12/8M/ghdOns/5fWkLTHMpKG6wHMUOPH+vvfPcAhO6
X4nH10dxTYX33qd+W+CGqKHO+/hRHLEtrO3Ygy2Qq1Op1tMzihW+Z7I2Z2+B
bWdC6Dudx/A9X/Wv+UVbgC+oxT/kzhieUnzzOLKczCc4rX0hYwxXBNZSDn3d
AskLLsuTA2PYfOeg5afxLSBlN9M2YjeOy4YuSr2YJvUmqZ9s8R7HEtEzY3eW
tkCg+dFX5o/H8SjBdmsfFw/c/Fb1ge37OL6VJvOyUpkHEsRuOCjsYOCcLY6r
xS48ELdF6rX4HAPzVwzXR7vzwCbzFIVZbia+ft710VVvHtjbeHa/jQwTG3y8
qagRxgMKUkYqNSZM3OGTeDT7BQ+M+G9ZszWOiUFRXvxeHg/sK5ZlMXjFxOkt
2cMupTyg3PcCFsqZ2J1afmN7PVm/577Hmm4mZh/qyHg+zANp3heSr4gT+NKj
k+4BEzxQm0+J6KMQuGnPmK7jHA+4bLn4/ddOAifGL/wQZ+cFu+KV0/YWBGYz
Cohf3swLwtIvLUcdCewyy+HcuZUXIu+E1y9dJLDWkW1LsQq8ID8x6FsYSOC4
1eSP19R4AUU6n7YOJzBL9vZIKzovBL7TlQyMJfCXDTryAgd4odDB1M3lFYE1
ivDEX1NeOLDDoUKuiMCPnQ68bbTkhXBPd+Mz5QR2Krc0izjDCyluWRmeX8jP
FwvxbrvMC79iPXObmgjM+vpX0zMvXhDw12lL+kXgxoz4aCV/XtjDWFn91U3g
lGR7q4IQXthUdGFj0CCB3WMlt+lG8gI3vbQ7YYzA+lG9v6pjeYGrOfes3ASB
ee+mxv+XwgtFVkUPRKYJ3Hv7jH1LFi+ctqwA/1kC5/tulzxRQOq9aX356AKB
AzxGe4be8sLz3izu6CUCH7n06rlrNS84US7y7FshsLTzpdPzX3ihpXHS/eQq
gadOqCsE/OSFlzukVCbI+P2xqWHOLrK/9d67x8g46nBh1sNBXjCZ5081J2Mn
I88LogQvTB1OOEkh82ns1VFNm+UFPvtjt9zJeqy6C4QKCx8IPZJap0DqaaS9
yytm54M1GufnD5J6U1T8riAePujg1jvf8Zf0Lw9addv4wOX4DpcOgvQvwTpr
Js0HXA5R7EZkP3iFqt+0K/FBmyK/jQLZr94twd5OmnwwJy9x/QrZz3wOQ92x
XXygW5npq0r2O4CVc+WKAR/M9OwMOEbOx5HFz3jJhA/Yvf9mTn4m/U/fvxVk
wQcmo7d5Fz6Q/scP7d1kzwdKl9X73N6S/gd41j0+wwfB3t/3WOeTflujQzK9
+MCwVuCwVyLpt8HKiOrPB5bBerY5D0m/9du4ykL4QFvZJssihPRXlhD+OZb0
4xzTPXOZ9Fdw4rB5Ch+kxGfSCSfS3yspvt9ZfOC88PC1NbmeexPSYphv+SAo
vGUxQIf0E+N8zKuaD1qnrxzVVyT9hCsKs3zlA8HQq41XtpH6b2Un8HTxQVXG
1FnVOSZ2OlWUSmPhh5NLP69yvmZiDTuvM+Xs/FDl8dX95FMmZrXcsX0/Dz94
6U6LUe8wccqB8pdW0vygtrKOqWzHxL1KNfneBvwQsFwsnsXKxPkyd66u/Y8f
fNpAvGCUgQNED2rfs+CHuP8MCM1GBpbe9LU04Qw/0DdTPiYmMfDJyebKyhB+
aFg+ySNPY2AH7wirNxH88NFQ5fnvbQxsu9aE+foJOf5zrEpqdRxbCnwQScrk
h1urJmaH68ax4Y48zxt1/MBapllmbTGOVW/dp+xkF4DUtQ0NHsfHsBLnwQ/U
LQLwT3HovfKOMazwkO24opAAzOXNFHpsHcOSaT53hLYLQNTjx3m1jaOYr/5c
778DArDSyS94xWAUz23Z/6TgjgBc1Livepo8z6dj16i9DBcAokfoTML4MJ6U
Lq9JeSwAaoLB79yrh/EojfY3MkMAgtdMGMy6D+Pfx6RNXWsFINxCIfL65yH8
PnllrcoGQYh2OmT7z2UQ31MvuZweLAhB7lQoOtuHP2m0Dno8EIRqu8SmXu0+
zK41a7cvRhCaBoTlatn6cOAOukl/miBohgeuFif1Yh/9ku3SNYLAkonLDBt7
sIt5SU/C2q3Aaaz7t1upGx+4VnI02n8rfI1gpc7Zt2PWyhJ6oLcQHEvLvcXe
Wo2zuHnTlwOEIJBDkc348wd8xOYCv9ddIUjPKsqh4ff4+T/JyXPxQpAXlGy0
Jb0SG6iEZR2qEAKKbKxMe/cbHBxnKybCug3O+CXeHehKwpwea9bmh26DN+7P
54/2lqL89zZuylHbwOn7P9tXy2/R8S3Ff1LjtsGMKJf4HaEK9PKly7vHL7cB
/cSHOVP5KmTS2+Rx4+s2CIj4ez3VsgY9OJQ+bMgjDMzc0ki11K+IR8n4258n
wsCf+Xy96kgLGtyQxFOXLAzKf/kqpU+0orKBKfPcTGHISEuTfdfcik49i+vw
fyMME0ed3v+saENvhEaHpdqEIfB3i7P7g1/IfkPo2lNbRUDKW0WqdlsXetX/
UWc4WgSWnfR73V160a33wr4NCSKQm8zizJnYiyyTL+E3aSLg2s6ubP2jF7HY
Cu4PLRIB23xBs230PnS06fRRpZ8iYHkvzHnTah9aqGK7dIFfFMb9dC9L+w8g
wyT95xNRolD7t486vGcY3alr+B3wVBR2EnvXnrs0jD5O2gsJpIrCvSyejOtx
w2ifgc/9HUWisDE5W+/A5DDSHynwCmgVBY5yRW6/2BGkqylnwi8qBkf9X80W
NI0iH9uC4HRZMeCuVkpunRtFZUF7qnRUxOC5c7TrTbExtKPNTttOTwyG0qmj
x06PIe0bMZLpDmJwxnXfaSliDKnXbpihp4mBa80l0Vuj4+jyRLTap2wxSHs4
bJGwgYFytsm62BaLAc3siQFNloFULsAf/1ox6LMe1W6wYSAlnuv19SNicNj0
ysv8agY6t3MDm+2UGGwq5CiL+c1AmSej9ZgLYiBeZpMxOcNACsV5Bbxc4nC+
3dqRU46JZG1GE2xUxQGnnCt468tEJwOvtTG0xSFi1naDcSQTpWSv5/NH4hDT
O8ZimsZEUiwyIalm4sBxv80r+zMTOSjmvde2FofP29ft4+hiouQjaLnOURzc
dS9ZtRJMJJ5m485wF4cy5Zsb6nkIZPdt5NVNH3HoLzTmGJciUPys1xBPoDg8
60wW8qcSSNjoka12tDjY/DhmsGBKIOsr0o/rEsRBqMWp/Y8tya/xuT+Op5Pj
lvsvarkQaCvxZf/NEnFA1geT1G6T45HYcQSLg3Bt9ZPEByRv0vJ9j9aJw8bd
neO3YsnxltTH5Q3iMGPoeL79OTl+/XG+QjtZf2/EYGo2OS4S9jWyRxxAhEez
v5hA2yp8hxdHxEGXb07hMSb1rXUSb1gg/R46f8XqO4Hi0sx37FwrAdaMvYGn
WggkYnjAPHWjBLyMFM3v7yT9je64vIlfAhIJ9e7WXgKJ3qeEXROVgNBXlOnd
w+S4mkRar6wE4GblFkEGgcQaeSpNVCRg7763rk6TBEq8ytZRrCUBJZztuZIz
BBLfOjsjqScB14qmgw7PkeOlI1vu7peA8RSiZ3qBQBK2ncozphIwv0uslHOZ
QMkr3/afsJKAgu17WR+uEEjyWZVj/QkJULseW3x/lRzfW+ireVYC7nz49GOB
jKUG0x8nuErAOvr04V9knBISm7/hugTcSE2jU8hYWvneV7dbEvDdpydogsyf
8tVvuCNUAmIrRPUVlggk4+q2dn+UBHAP611t+N//N3hPiefGScBC/TP58X8E
ki2y3CH8XAIW7XnOeP8lx60Omge+lIBfkZ/3+BAEklvYdZlZIAHbFm5+Zo4S
KD1eNezYOwnIv39o688BAskjqbT31RLAavhll2o3Od7DV0n5KgGjNXOHF9rJ
8cD1HTE/JUCq9YDHjiZyXH5+hqVLAirY4j+MfSaQQv3YlvODEjDLdcCOp5pA
mee7lH8yJUDCnON01lsCbd/0Yz+alYA/RjwsJfkEeqRoU8HBJglnHL9FKCcR
qNm7+bMeuyQ8fcby++EjAvF/+a/9CpckBBx1O+caSqDoSzD9m18ShM4nc95x
I1BMgZxSvpwkyFkJu6jvIlALWxJ9SFES8BXac6AQSNBSaJ+oqiRIu2qNfhQl
0OM5TodgbUkQKdlZrL3ERE92T0QfPyAJVgnXrV8WMlHbg3PPw40lgatem+3q
MyYS6u7NrT4kCS/38cgU3Wei2ICfn1WPSUJL4qxoyikmiqstW7P2nCQ4b14n
Q+Vioonu3OvEBUmIqH0Rc+IfAx1YSJ/scJUEPqbWG+FuBpqmPOwpvCYJ29Ri
7HTyGcg06nzVmRBJmD80uyx8mIFY7URvfcqQhD3doVE/ro+jY56888UvJcE8
jtLwz3YcvQ5nd3v+WhKq3nr15aBxZPt+2sG3RBKeW1891L52HBUrfAXVWkm4
rEGZlbkzhs5P3WCJGpQE/l+Xni5eH0XvN1695jcqCUsiIg+CLUeRkJzLhAtT
Esxqm6ReaYyij1aW3Xv/SQL3zyGL+pERJFmuWjmzTgp2jXo52xwdQc13/ty0
lpOCDL7Z9/b8w0hXbM+q5CkpSMmK+EQ9Qr4PbJvdnc5Kgc6Cu+4uiQFk/tR5
8PkFKRDrA66BsX50ftuDr/IeUrD6kOOcWGA/ihPoeEoJloLTpWLjO3P70By3
h45OphQoDcixLc/2oMKVTLdD41Igo5i7f2tsJ1Lu3tJ/46o0hNBHeX8I1KPs
TN6zRe4y8F0n1npPVyMO/In3rPWSgdknfNZ5jk3YlvWiyGEfGZA2846u7W/C
nLa138Zvy0D5G1Oj3yPN+MxmXy3ZaBmILI/PPE+0YEnPAdaHJTIg+kDdhXPw
F360902C65IMpN6oZHuj04PPu572qmCRhcRfBz/Hufdg/QTew1zrZMGCJ/0D
5VUPnvx3gS2TWxbiTjZKHhfvxaZZUuf/iMvCui0/qspXejE7z10d0z2yMOuv
7FSb0499u+yalINl4dYNh1/UmiE8fWB3wukwWXj742IsTA3hC3mizkkPZEFx
X59bv/gwtgnsWOB9LAuefLVHhz2H8U4la+mFDFm4L5kQ/FlqBM97mLvV1ctC
5/VYaxunUez6R3MX6zdZKFdruuYUMoqHDfnW6TbKQsPWh3J/s0dxm0jjk9e/
ZOFFGjMsZ3YUv6k6VBkzJgvhZ9nyfILGsCe38ebT3HJwzd2vaih0HDM9ldoT
eeSgss/m3e7McXymm+N5m4AczMx31fF9JO+zBXXaJuJywP/FhE2PhYG1rPfb
a6rJgcLkNMuNSwz86r3c9ouacrDXNNGjJoSBZSnrptLpcsDCF80TlkLy9+qH
IGGQg7sXH88ENTPwdOqe7DWH5SDuc42LrgYTX9gk5bXLQg6Ork9bf9yQifu9
WPZ4WMvBRGik+wR5f28yws3DjnIg+vrKrmDyfm9UmJgofUYOzoRVdwWS9//3
Yn5nbV3koNG+s2shh7zfT+gufXeXgw1i+vHGzUysdFz0I4eXHAh8X8iXGyT5
4MNi+F4fOXCbOtLuMcvEUTFlMiW35SB7UFraS4jAbro6xomP5CDU/kjdzFGS
py89uhn+hBy/OVX5yIHAD5ImCvzj5UD7tsqP0gsEzmJ9IXoyVQ7e9UXciL5N
YB3ausPmmXLgqzJaafyAwB9POwbteyUHavf2uNx5QvJQ3TamQqEchIfjww9e
Eth1wUN62xuy3vP5fdaFBF5RbrTkfCcHRp+suV68I/A9O9W7i1gO3ktGB96o
JrBIeBge/yAH/j9RRAvJe1mVg39/18rB78SvvIWNZP0p/e3fP8vBqGLUpEA7
WV8mybbyuxwIBlTxLXUR2NxiMSKvSQ5uurk6nekn9QRb1aS0ysFq+6M68xFS
z5uC+YcdcjC+fr1mLYPUM7JZNeiPHATN+kaUT5J6RC44efaR+VIe/aDPEFj4
v7oY5yE5qFb7NKw1R+BMP9nPx8bkYDP1xqcSko+1c/1XDxJysPCJuFBO8nNN
T6fmrr+kvs79dftJvjbn23GWMisHchJhLUdJ/u41iI4XWyTnb2fqw34ydvWc
bNi0Kgd9P52W58h4JeO/dSxr5SHouSdfJBnfa3+xY3K9PLjYXWl9ReYT3rj+
Ui+nPCRWfTcxWSb16DqlNG2SB6PAgWuXF0k9lypaqnnlYWDnpJPgPIGrk4Q3
FgvKgwjw8u/5R/L0D0+UISwP1hFGj4kpAnezNl15Ii4PG5P85qVIfr9EU8sM
lZaHW7IeB9tGCbx0+m6nt7w8hPW3POYl+T3s8dCWC0ryUHpRdbaB5Heh+r37
7FTlyfvZkA9fB4EzFpKum2rIg7i5me6vZlIPZSkbacuD69YYM7lvpB67Y73q
O+Uh9G1t4/RHsn7lFmM+fXmQ3xkaJVVC1p+6cJNtvzz4ikRz38wh68vUF8wc
lAerpdtujmlkvTu3RNsOy0N5S9TtokgCp7/5bVZvIQ/LoZJ+CncITBvdEVRm
LQ/ozvkFcV8Cm/03xYh3lAch+XtySacI3OVnKv3gtDxEpuWobT9G4Au5WZY3
z8kDX528O92YwKF8J7GjmzxIHN14fkSNrLcP/z3iQX4+6v7de1JkPU+R7QbX
5aEkOPxNMS+B37c3RcjfkofzOzwkn/1l4oUkA6exCHn409Ez3EzyvN7s7ihq
tDzs27RZUTmeiW+Z0t97xcqDwuiz+Blyv7MvK0qzpcjDXZb0yGHyPBA4vrlX
tEAebv5tcj68lomP5bHzniwh67EeGzw6xsDx7Kz6L96S/T4yjL/+j+dLpp9p
VcvD97Sk/YrJDKzO/8vR9Kc8/FBT8LlH8vyV802Rj9rl4QrXy1hLIQYufv+l
6tdvedgZ3trydHEc73bDUs6D8vBvzP5dbOU4NvqW2nNzVh6yd/wn7W4wjk+H
XHbM26YAj2+fO8tPG8OZf85GzoopwPHjoRubNo/hcW2nqt3SCsCTES4oODaK
3QfMpT4pKUD81/R1lORR7K+/s6d3lwI0SIQqZ7GN4rglNkd+ewXw39ZUer9k
GDe4xjl4pShA9/ta7UOfBrBSxJbFq+kK0GLj7ev4dADffh0c7Z6lALcZWu/E
Lgxgbab7p4v5ClB18avIY64BnHDemHbqPfn3Efv2phzsxy5nljYc7lWAHS/v
pdQU9mI2W/vXStLboY39n1vxiy6844D0yu9n28HWanSSI/87rt+3IxPiFeHL
PL1P8cA3dK3WT/VmsiKwZ17i+GH6HW0/WF1YnqoIfCnrYmeUGlCwyaGqndmK
ULy2iU2T+gMZHD39i1ahCNKnrVwXdjShSodILsVuRfizpiDq3c5WVOIz4soj
qwR72WKXL410oTPLqrOHtiuBfVCUpYDDHyR48+qNBxQlMMBqp1Rb/qCrAauh
G7WUYLgHth9z6EYaoQLP1+1XgpHfNydtD/SgnJg9P+edleDqESf1iPV9KC0v
dkfvSyXYVXRz5Zf+IHJZtFFqe60ELRaSjlqug0h9n7jItwIlOPsaqukJg+hd
W8pS6VslMPY0/kz9N4iaVl/iyM9KwN8P/UPPh9Aa04p9e8aUoOY427Z6BsnD
j/216YQSVJ7R/HFUYATd69FXUPmrBH0DJ5R8dUeQkEct+7ZFJXh5YuL489AR
pBbf8HmCUxliCd6DuyRGkd1o7+FkJWVQOO/Nx0cfQ9K0NP0YVWXYrpcCmsfG
0PANZ817GsrQ2R6pPnxtDF3lGee/tlMZgr7aWG8qHUN3dWZaDxkpg+pWXzU9
2jgyCyip22eqDPJWZnX/Do8jwS/XS3cdUQafFmczuDyOUk6sxCkcV4Zuy4xT
gZnjqDR4g/3qOWXYUOx0vVqAgfwa6k1nLipDofdF2zk1BjIQvofG3Mj8I7x1
pQcZqCF7i1TrdWUwDxtO7/NhoKHmbf05ocrw9uSbgbpfDPRKvLM59b4yOP9n
ccp+koHczybWxEUqg168gIffBiZaWZTOCI5Vhinv0r+2GkwkIENxsX+hDKWr
DOuwACaKiLpr+SJbGVykzk0txDARJ+uY/nSeMuy3LUnqymIilp4XImFlypAu
0vZluYGJfMw42H9WKEN7LVeCTh8T/cNnpyU+KEPmuk7pgWkmGk9U+Fr0WRmC
dVW5ogQJ5LzpTilLgzKUc4Q3R8oTqPfGYJpxszKEdhiKsmoTqM02za+nUxkU
n/Vs1jxKoKNf2M5TepRBHO/X+utAoG+7Tll5DSjDmWd8X6UvEahaWEadm6kM
pstBJ78HEwiFBYgem1IG7hz/CeMoApXN97A//6cMy/HhXPQEAmmd2zPDWFCG
d75ngiIyCJTbltyjs6oMV0aslI/lEUjZkOXb7bUUuG5g+eN+GcljJSfKvm2g
wMDtaRPqB5J/Y8QfntpCAZ+529urGkmeX+938zU/BfqeV0M2yXNRHr/PLwhR
4ILLvqT1JO9xD+ge2ydGgZWsj/JfSR4MMY83iJCiwCA9+x3LGIHWVi+qd8hR
4PwP1oPPSJ7007QRk1eigOojz+IckjfnU8o43FQp4GBjN7V9lkBXeYX/vdWg
ABbMH99M8jNx63rvejoFTvELPjlJ8qzLZNu3w7socFzvx4gMyc8DDjpv4xEF
Vo0b281IHnZoeJwxtJcC6kM5TqNk3IFmH2oYUkCn5vmtCTK2fG3pf8OEAg8K
HmmfJOMf4sUX6swocPQJV6A+mc/kgYA1nwUFks/svvyArFe7fHWfvTUFHq1n
YTlA6tG/2Ex9YUfqpzbDBVJveaem+LQjBaZQt94K6UfH5CEnOkOBQxMTHMuk
34K3U/9CXSjwR/h64VmyH6rKR/qaL5F+7SOP7hkkeTcu77vEFQpEVsyuBJP9
lOHkeefiRYH32pt/7PhFoMTrrplFPhSwgD+D1iQ/C418f8TiTwGW//gchkh+
fnhM7ZZxIAU6aAv2veT8bap7cDEmhALnngSxG5P8HEpnWvfco4Cl9sFAKZKf
2TL+20+JpICalvfS6UwCLQRxSbyPpYCzrciTHQ8J5DFzfiN3IgXefhQQq79D
oIlTn2etUihw3zzCsdaHQIN7wxoYWaQe2x52HicCNa5hD9j2jgJ/W//c+qNA
IGZ2rL1ZJQXoejuu0YUIxHFcededagqMHyu2X8dOIMg3nZ7+QoF/VBlxtkEm
ynGKPtPwmwJWSkG/op8y0adNCns39FLA/+J4YdodJhooeyOhN0gBk812a1Sv
MJEoX2fbSyYFJqS17F8YMtHdD9LGd1YpwGeY+9KCwUDplwsVKtaqgNq5hlDN
nwz0XmQ/28wGFdgWe3Dq3jsGWrhyrtxpiwo08pwQLgxloLOyuWp6UiqwIn3/
ULcYeR4F7eaf0VeBIzx28yKq48iB+n1C+YAKtM0K4lHuceTz2+Grk7EKbE7K
mNZljKF8rcDghqMqULW/ZeZi1hiSHPw09/KUCty/sqGYV2IMLe0/9tspWAX8
U3sNJifJ8/rvSGlsmAr09Utmo08jSDPJJ6bhgQq4/zcfJZIyglxmEw/pPVaB
43y2KX5mI6gtY6BqW6YKbKldql+XOYyK2K+kN9SrwFC5pU2F/hAa9L3FqPiq
AlyV+5Idtg4hoclwWvYPUn8jteDF2CDybX/1PrRdBd6NVg9pPBxEBlmDXfoj
KrDR0NWK1jWAGo2Pby1iV4U/nk1j90/1o4kHe0JiD6jChw5NlTx6D6IIbHFx
qlGFdLbH1wcONCPiwT9+zRY1sF02T/V++wmPT4i/V/mlBquRy2+OFH7Go0cO
XN7epQYCkYXS5a++4H7BJ/Vig2rg/iMtdkf8N/wrcYcf+z81ELz8ZSl/5w/s
ZFXxl8mpDqfZ9YUT1v/E/zmvsatWUodQ8T8Kdrad2ORJdEEVRR0+1jWvMf7W
iY3qFTmxqjoM33vZ/BH9xobKR0pKNdRh98VuR0epLqxPpPC83qkOnC/Oukx2
/cE6XgYfY43UYQun6vxKcg+WuXNH7bKLOmwyuR8n9q0fu7fQ/JwuqIPPH+NG
x+V+XCnX+8Xikjq0KPJQLSkD2L5a10XXXR0ob87EmYQO4Lg1U6kc3upwwbC1
yxYNYl5fW+HUUHWQ86w393g6hB0/c5x7fFcd1lEU/7qQfJ4rXFISdl8dOv/0
y6wnhrBpKY+FW6Q6SIrlVSvtGcZh/z6G68WqQ0FaJodozzBmdaOua89Uh5Uy
V0eRzaP4cGXX0S9Z6mDIdF+Q1hzFyZvvpeBX6uBVXTr80XIU6+UMovRcdVgO
gMye+FHsPfbU+8obdWgzUd9tLjuGp06vn+CuU4eMT6xcWGIc7ykq0FvzSR2m
hgzeHto9jiPYHO9Pf1aHb5mOy1ePj2PV52+VOr6T/T19wN/n4Th26XY9ndmq
DubJaTUXSD7vPd7xS39IHW6KlH29U8PAXLutMhxG1CH7lVTxti6S3yWarviN
qUPw7Rctcv8YOKTvE1cZoQ7cVXF8L2WZWO1CmR51Th3GCi8ctPch79em2hsP
LZD+Y4ZzisOZOEA9v/XCkjq8Mp9VD37OxC3TL1wzWahQc8RAKbSeiX1vxKZI
cFBBmj+jWWAzyQMnBC7v3kiFV7kck2ISBP6+J3KXDTcV7uS8yohTJbD0+tDm
GB4qSIW9bJgg+cJkmO1ZIR8VNl9MxvXWBPb45H+xUYAKwM6pL+hM4LoH19Zv
EqaCzrULAhz+BJ5ynW5UFqVCYk/av5y7JB8fdU06KE4FHqnWu7UxBDbQGj/v
LEkF9m6T50eekfy09axOkDQVvoV+5TYj+fvJfB/bc1kqrIjHJWKSv993nPhR
KU8F1pVLys/KCSyQbOWypESF9yYR8aVfCawX0KQtrEKFIxXVOhMkv509dWit
jhoVDCsb4QnJd1H7P3+3oJL9qBiJyesh8LvtB+KvaFLBzuSNhO4QgQc5P5yN
1KKCR/yF9/RxAm9m6Gm9plPhzFTh2dQJkt+/l635uoMKt9ZVrtyaJrBTnva3
0V1U+GK9+0rDLMm7D/Pj2PWocO++XUk4yddFHqrO8kCFlKeNFZjk6y6rLE0D
fSpk8jbcdCB5mH2nPIuTARUaYONfN5KXNURTvtzcT4UI87d802RssyIWm2BI
BV732D+DZBzYHXv6rREVHMu7LY3IOOe9gEa7CanP2tRXnMzXlhq58s+UCs9s
pCzI9z1ec4f7M/9hKmQVCo8IkXqUzoU+1jhKhavcN/QRqdfceN0pMwsqWMdy
XWr5S2A/lVvql6yowOzc5NNF8nTm5uWlu9ZUeHzOyMdqjMCNk9fqX9hQYfz+
+tvk+xcvNk1H19pRYXiB80U8ydOyxa5OAyeo0GSXtP7cLwKbPhlXXetEzjcR
VpLeROBr3mcXJU9RoXiG75fFFwKn2PbX6p2hwhhafeBZTeAveg6PbM9SQTYi
fJ79HYFnJDsdvF2oQFsNRNwFBDYcaJovukQFbeNNay4kEfiG8gOf165UkHGY
+HwrmsD5bobLme5U2H2f31X0f+tt5R1LvCcVjgoqDHdfJXnawCsg+hoVNmbX
8G48R/YzjMoW7k2FKzfXVZfZEpgpmL4hwI8KRfJHfV/qE1jGziHUx58KAy7L
w+M0Ah97LrzRI4AKlN3+GYXyBK5SC990NpgK7Wvz5lvZCfzI8JqA6QNyv5RF
el2tZeL6BxqPD0SQ8/WtcZRZxMQrzeNCe6KocNdcMGmS3J/Ojo6itBgqCDRx
DET4MfFObyMZ4UQq8B/bvA6pMvHlSrY0vmQq5L5ZG7V2GxOnrsfy3ClUELL4
+eEIydfcDzWVWNKp8OKHnEtUCwN3vxSlDmZTIeBwrFuyFwMLTLXk/3lN7r+K
DfUf7BnYSCeS1p5H6m0Le3p1HwMXVK/T+VJEhajcg3r+PAwc/Jupl19OBcn9
GwqMUscxZXOVid9XKkTGfS/bWDSGHS18vnl9J9fjz/FanegxHPNUy8ztBxX2
8G83XLg6hlcVso6e+kkFjkr/OF3NMdwID48b/aYClc8q+0vWKL7mfvqsIIM8
H+TwSkTwCA4xZjrvJKiwkNbxb73dCH4s6+VsP0kFfMy/mF1zBBe3hJxJnyHr
XZSJyP89jP/ufHVKe4UKv1p5dhapDONLa/86WG7WAO6T2ecUSwfxyUf+1jFU
DZB/wD1cf7sPu1/ksC7T1ICMjobMo//14YD9Uce6tDSgeJfVbKBgH06ee24l
v1MDhuq+KPdm9OIu21qLYn0NsGcf/JzysQcfk9t0pOWoBvy4q6qxZ/QPNi1+
aiToqQGaJ1sODO9sw2f/Oq0KXCPrNc9+MKtuxbfVlQoFvDXgwHCv0fH/WvGb
rDdiAn4aUDOOh6zsW7B00s8JvmANUD42V0D1bcb/7mx+zBOjAc99W9PXv2jA
ida3+7iKNSCVrdTI4kUVZi65+K79pwGrcf4WvV7vkPUxY8X5WQ3YU1VSttOl
AlUXKLcw5zXgZoSJ4mbVShTrMq72a1kDEks5EmkS75FB28W+3HWaYNBjmim+
UoOeFrga2QtoQhfxw0/95Vdk6OIpVErTBPcuaZ0j5i2ooMayJkdbE6bfELm5
9S1IXIrunqqjCeKCRekleq3ob+vs53BdTdhytZntjUIbStx3/eYZA02QaAop
PTzTjqYlfQf5zDVhs0i5tvON3+hZ663CS1c0IaWym54r3IsGa9T/PPDQhHvW
q7kJR3oRpfAPx2svMt8bdQedsF5UHLH7BOGjCavSZh5uc73oy8F5DtdATahL
6rVrbehDc29dT7hFa4IXl5F1ousA0suSCIt8TObLfFI/njKAbj/5VpgXqwnd
xmu82psH0CYPCudUgiaEU8LZwuiDSEZ1uNA9XRNUs1deqc0NItPkE5xXSzRh
YyZV48fpYfTowSatR6WaEHb1xLOEyGHU7lt+ovCtJjS+ruJefDeMTlmLFE1j
Tdi9x6bhNO8Ius7besKjThPGP6ZsHCwZQamBpkWe7ZpQ5NfkNTE+ikbdl//E
dGjC53fbjTx4xpCa4yvOkt/k39tmfLupNYbKdnM6zPZoQgHXyCkZ3zH0/V8N
57VRTbh7YZv/w7XjaOHsbofri5rwLPhFwKOFcWT0Vgk8ljWBij//MBRgoKfc
QpJuq5pweGH4RZgaA+nmT/05u5YGbQXXrYucGMhvMePEsY00uL5mpvXpBwb6
9l80MuemgWVQZmDeLwaSSA6QMNtMg9onjnmHJxmo0sDuzwE+Giwa39quLsZE
ax/wnqCL0EDH4Za+7WUmMu9e1dMUo0H/1u+P3wUwUaoGQ1xNggZnMipbU6OZ
aH9rbZe8DJn/VCWxsYyJYhSLKqTlaNCZGqIT9pmJhnxSEsUVaBC09fx/4Z1M
FCJ5w15QmQZaIS4/KMtM1ObuoserQoPmNMXKai4CKdZYiW9So8GyykHvXhEC
fTqn0bVOkwZy1ZGncnQIxFUwZDezkwa7Q3evD7hAINt1P3dP6tKA2t5I179G
oGyr92IMPRqINJTeD75NINOl+N/9+jT4fZJtNu4JyYemYeXdBjT4N+ha4pJC
8nKyV0Lnfhpwyer/K39JoIh9R+yajUi92ar2zHcE6n6MdjeY0OAxkbL3czWB
qKMUsS+mNDDsUZVU/kKgAF3h5VozMjb50sJN8mbjgw2/PxyhQVyIo8kVkv+l
e6bfYXMaHBiqcrb5Q6Armr3xby1pcE4gh+djP4Gqg777lhyjwXOvZlrBCIH4
297ZFhynAb/fj3JpJoFOKWXpvralQcaE2lP+KQIV+T4WfWlPg4+a58pDZgi0
/nvgUroDDS4HDQjenCN5Xcq9M8WJBm81lp7OkvydfuXEu8RTNKiq+as/RfL5
bI1JfNwZcn6UWdkuk/xuKLTTN+YsDYybTdovknz/xEXBNsqF1Fs7XMEk4+F3
/LoPLtDAuehX/iQZ79jMKhp2iay3Kljk+b/fFzgSi0GuNPAtvlV7g8z3q6Cz
45Y72a9HTMb6ZQIpr//09sZVGiQxJFV5Fwnke6zk6XVPGiQ/+RyeNPe/32+k
+nhco8HtHxGir0k/YsuRNm7eNJDhY+0G0q9h73+lj31pEMKRqLXIINDVWo6t
FX40yJLqmpUi+5X0quZqvz8NruxR3l3UR66XyFuNnLdpUL34WLzoN4FmPHer
U4NokCraXSLVSiBJ2/n7VndosEHxrMLidwJ5yrsdTL1LA2zHu2UGE+jZRpWM
T/fJ9bC6t0mghNQ3McxGIiL4KzSx/O/7FTJvHSp3P6JBcIiRCUcsub6SRcVP
xdCggbhY332fQN5BbT5hT2jgd/vkZfkAAjUcMqO3xtPANlaHZ/ksgRZpXNHL
iTTQ9Dt564ENgeSF66ZkntFg/64Z1vD/yP70oxzXNBoMahSiLjUCZdQvbnyc
QYNvF0QCVSTJ9ZVTcq78BQ1c1tqMj28m98t1NTnOHBp07XO3KmeQ+9V+LEA9
lwYlo0Zz3zqYyH9vRrdlPg2G1y7OHa5nohZuifjnxTTI4dvjnp3CRAEpm/h2
Y/L8+HRbr9qUibLvfHI9WUUDCrfsRxcdcn9eCP4W+oH0k1OfHCTFRKr0ldCW
WhoYWRBz26YYqOMzg8W1gQbjCmGn6+8x0Pq8F/YxjTQ4uTUoVdydgTRiTr97
10wDyePsn8csGSjE4bcXRzsNRoUmawlxBqLNfGGm9NBg57W+X68yx9GJXyEm
9X3k/IpdTfweOo7CsEEWMUADFi99n0su46g79N1p3VEauHcI1UorjaP74q86
f06R54X+yW2ez8fQ4IG7n9jZtGB70HLrEb9R5GTsICm3Xgv+iZ0I0D42in6b
annuYdcC629B31Opo6jZ4o+UN5cWGOp6rpXtG0HvT2peH+PXgrIXu0QrYQQl
3OxQ+CanBTdLVPs2Dw0h8xLloIcHtECV6xf/tYF+1FDG0vH6oBZYTUlHS+f3
I+OKn+pfjLXAs8Cl19WvH+nX3OxkM9OCOpl3fksC/Ui9qUnT85gWuHzvPTwC
fYiL8Ok9dk4Lvj49vDQa3IM+yH9B4ne1INSq68Tnwg5k9OCPkeB9LeCc/lKw
ot+BGmamLDaFa0H3+q/H6hp+oa7qbRdWorRgsTM+QG6sHc05OT/pitOCyvNn
ZXVE2hAliXUyMUsLtEtX+w+6NKOYrTtSJD5pga5GIIfPs3rkwp7OJsWhDdOV
jrmGden4M2vI/b0btcn7Rr30Jq6XmLJ8TvAMtzZ53xwwPXboNSYmVba/5NGG
lORX4YKjBfhqR5GxlrA2ZEaYZ9q6vMM3cmqiDiprQ279zhSRzI84wnxA0v0/
bVAqydoX+LQJT5rWvnh0SBvkmWZuzmLN+MjBFxolh7VBuFWKYCY2YwG9iwZL
FtqQNnD9RU/yTxynMOMcbK8N4hd9pwSSW3HqAtvruMvaMKr6IqcitAOXJMvu
/hCpDdmlL/KO3OjBsqsGPlUPtaE7NFImNr8HR9idLsXR2sCra3sgdqgHnxVO
13oXqw18x2/bfDDrxcKPFFSLnmnD7V9L0xkSfdj3jpJERp42nHBWes3yuh8P
DxjZpRVog8ham00Bf/qxhcH5p8+LSD0ntgbkbh7AqmtebU0u1Yalrp4snssD
+I+3ypbYKm0o/u/3qQbFQax/SX3N3R/aoH1700rigyGc88UMhTZpg8IpSntc
6RAWUXa7ceenNmS0Xb+q0z+Ep4fy5m+3a4P5b+KApc4wTnPUnPLt0QZFW5dd
nJ3DmN1Cu+/SpDYMmqwTrN0yiq8WWEpd/KsNhFF1X5TWKO7h8TpxfoaMcw0e
/rMexWXfSjqc57UhvHLc8vazUXzecEezwxo68A+zsj9XHsPfdunWHOGhg/K3
Yd0g5XEc9sZjcT8fHViipUfmDMfxAa3X1F0CdEjYPfeY5cw4rlSVTpTZRoft
Enjvp8RxXCDF7jUtSYc6nTjhXRsZ2DVxT/awNB38Ei237pVjYIqIT1+nLB2E
RlK+dugxcDo/81DNdjoc+JjTU+7KwE82NG+PUadD1Jivw87vDGwRyH0iTIMO
StzcreUDDMy75kC0H40Ok+6m278vMvDdhdI1zjp0UCl9vDFOnon9GEm/6ECH
Yb31nHWeJE+5tG+h6NOhJH/VLy+UiWcHeQ9IGtDhs3WxrXw8E7t2BxWwG9Lh
5YzuzjzMxCebzt9rP0QHYbMcbYM1BJY0S3v/9TAdluJdEm9tIXDnl665qqN0
eNCrdsFQgsCWHw+fzrKiQ8fxSWu3XQTm3Xv3aaI1HSz8XTY1GRL4O67+EWVD
h2Tx4cPlFiS/ltL1fE7Q4c3lG++VLhF4nbbb1cuOdNDddCQq+zqB3+dnZZ08
SYcVh3TtN4EE3vVKbKuJM6ln64LFqVgCz223+g/O0aEwiStg3XMCF6ZF3Kad
p4OJ+cd+lVcEVk1aOyF6mQ5X/5Ou5isn8KjIbnkeNzpk1gDLD5KvM5542q67
Qof7tauT/CR/nxLIjZq/SocmnZQbfxpJv1EjdQxPOmT47gxVbyfw700yqz3X
yHotWUsb/hA47q6tVos3OR+1aVWn+0n/7DHnP/nSYeREzoeDIwTmC/r+rMKP
DtVRQhMFDAI3rOFoy/cn+3+NQzv1f99P8NPflBFAhyNRXsHCMwQ+uOhj8DSQ
DiJrlJsF5wi8/lqRd3gwHdaXlfPFLpD9mGbm3g6hw1zu013Plgh80237kFcY
HU4ssxqorRBYl+koduEeHT7OrlXYu0r2x+XpUYcHdAgxu9XdScbh3s833Iyg
Q9mdbT7zZCwf9vJtQhQ5P9+V9geTcUVsweV3j+jgNlS29zaZz+LFW5mOGHJ9
N1lcmyDrjb/50Dr/hA7nP3KPfSX1BNZ9viv0lA4v1vikiZB6RdqaED2B7P/L
twXt0wTOH+r4a5FEB2bMFVl20u/B2b6Mq8/osIHtC3vGOIG714/bPHxO9tvs
ytXiIQJfE5zenJ9Gxs/ib2j3Eniz/NKHhgw6iPmt6ip0Ejhdi+0a8YIOqg6t
X0N+ElhvHxdl0ys6xOzq+8/mG4EvnBJ9ZJxLh/JOyaSjFQRee1XW0CWfDqcX
bd9cLyLn6zZlKaSQ3H+3us14yPVRn6J76uMbOvz3y+Zl9GMCO+QbCA2U0SFd
yrE+4B7ZvyqTL2vL6TAvUive60/2q8eWtqeKDl9l6XvnnAlcPnFq+MQHOgiO
0ANeHyewOcvFeL8aOtQ3B7a1mxD4tsQNtnf1dJB7qvIxRI30a5fQrN1Izufn
cW4rJhN7XUwLsWimg/FFefucTibedCNb92oLuf6ZU4ven5h4d3x5ah65g+3M
es55pDJx3K/fVyl9dDhlyRs3d5iJqaMD240H6LCY+KlhrS4T180zOs8N0eGT
h7TCHTlyfwutGGSM0WHbq//qZ/8xsLmVuID0NB24N6cH33vIwGNn5OvhHx2e
/802OXWdgQM8VW+cmKPDPZHl+BJ7Bs6L1huIX6KDp/++ikYFBt7UbF+0dZ0O
RGZG5w0XjOM6syQLbkEdeHjn7gH2wjHsUj1QsUFIB3a/1tOQeTSGuXUo21mF
deASzqU2XhnDRyRKF/6J6cC6k8YuTOoY7mA0JnXL6cCQr9aKyotRzAxbP1qg
pQMHeMxaIXAER6yYHM2h68CnWKWuDrsRrOn+8F3mDh2wu5D7jI8+gq9ZS4Yn
7NaBHTxG2GZ4GLNu30m7s08H3B/4mpzYP4wFai76HbfQAQ67TahyYhC/0Skc
MrfSgZk028tu1YP4+KsFs0PWOvDeWSOk/vEgTnx4R8bATgeM/OvU3HYP4u1O
z+pUTuvAg8usdXmBA1h3tZl3jYcOrIzumXy8th877dDNyHikA2NJjz7Q67rx
OcbXmc4YHXBxj7/df7cbuz47YcAbqwMUbP8IDnXjmxy3e3wTdGBzZ1WEYNYf
HN9eL3IkXQc+sFEctpb9xi3XrSKWSnTAO8/zZRBux0Zl7tcPd5D6r6bmgtsP
fPgSW13wbx14Y5AbLDrSgI9Jxwi++6MDrK+GBtMcGrBzWGmBfL8O3F2vcvxx
wjcceJyFuTiuQ55/PGPHDn3CFQv3ndJXdICdFv9LMr4K1+RI5HWw7IDEiYvR
q7cr8RenvNUta3dAyqXJByKtFbjjU3O8z4YdIOdytefplTI8FyfSarZlB6gq
DtwYTM/Dq6bZcsG8O4Cz1Ev3wUDO/wVhAJ7/vwYDP3S7FDlAkJss1Lh8qr8U
a2IRJhk5QCUFCQ2gqaG/Gx/0X1sbOUDBiDhsD3+avyLTha6QHTlA2DZ5il2q
kb8qhxf9xR85QL5aFQmrqoG/MTupS/shOUBdMI3O4zWhvgk+KOk=
         "]]}},
      Annotation[#, "Charting`Private`Tag$5464#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 8 Pi}, {-0.9999968914310025, 0.9999975297451876}}, {{
     0, 25.132741228718345`}, {-0.9999968914310025, 0.9999975297451876}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7012926105822487`*^9, 
  3.7012926390768785`*^9}},ExpressionUUID->"272ee502-08d7-45df-bf27-\
278fded77c03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "3"}], "+", 
    RowBox[{"2", 
     RowBox[{"x", "^", "2"}]}], "+", "x", "+", "100"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012926613831544`*^9, 
  3.7012927957698407`*^9}},ExpressionUUID->"062c9d03-7b66-4203-b744-\
85c9352cc29c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
ajvIHfwPloVUFA==
         "]]}},
      Annotation[#, "Charting`Private`Tag$6082#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 20.000011428570872`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {20.000011428570872`, 279.999980408164}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7012926851605144`*^9, 
  3.701292796521884*^9}},ExpressionUUID->"684682bb-ef87-4d89-badf-\
686686f202f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"2", "x"}], "+", 
   RowBox[{"3", "x"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701293015436405*^9, 
  3.70129302321585*^9}},ExpressionUUID->"14e23027-7254-4197-90be-\
236aa0ec2b0d"],

Cell[BoxData[
 RowBox[{"5", " ", "x"}]], "Output",
 CellChangeTimes->{
  3.701293024211907*^9},ExpressionUUID->"8a8e5fc9-52b6-4583-bbc2-\
d3cb1cd6ae65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012930421229315`*^9, 
  3.7012930753598323`*^9}},ExpressionUUID->"ceedbbd6-12b2-40e8-850f-\
f891600620ed"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "3"], "+", 
  SuperscriptBox["x", "5"]}]], "Output",
 CellChangeTimes->{
  3.701293076601904*^9},ExpressionUUID->"fad7384d-1074-415a-b099-\
ac08b16b6eb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "3"}], "+", "x"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012930907197113`*^9, 
  3.701293092663822*^9}},ExpressionUUID->"1e984cbc-29b3-4813-8a73-\
3432f3f576a1"],

Cell[BoxData[
 RowBox[{"x", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.7012930944399233`*^9},ExpressionUUID->"528e9e07-f30b-4a63-8f02-\
89075aaf2c21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012931138630347`*^9, 
  3.7012931901583986`*^9}},ExpressionUUID->"24ded730-9741-4425-bdbc-\
6ab6ba581af9"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "4"], "4"]], "Output",
 CellChangeTimes->{{3.7012931245576468`*^9, 3.701293132865122*^9}, {
  3.701293177266661*^9, 
  3.7012931915524783`*^9}},ExpressionUUID->"b513e91f-c9ee-454b-88d2-\
f66971cf4388"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{"x", "^", "3"}], "-", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "^", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7012932426293993`*^9, 3.7012932566302004`*^9}, {
  3.7012933885087433`*^9, 
  3.7012934127811317`*^9}},ExpressionUUID->"3d4752b3-7c46-451d-bf04-\
cc206120decb"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "3"], "-", 
  RowBox[{"Sin", "[", 
   SuperscriptBox["x", "2"], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7012934142262144`*^9},ExpressionUUID->"64b01037-2c39-4564-8d95-\
b212170542e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7012934449689727`*^9, 
  3.701293447996146*^9}},ExpressionUUID->"561e902d-501c-4884-96f8-\
91c1611a16ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"2", " ", "x", " ", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["x", "2"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.701293448505175*^9},ExpressionUUID->"aa80d353-1642-4b9d-b440-\
69d182b6f4bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7012934526044097`*^9, 
  3.701293453604467*^9}},ExpressionUUID->"f6ceaf06-c53d-48c4-9ae3-\
a7b1ad66e646"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", "x"}], "-", 
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", 
    SuperscriptBox["x", "2"], "]"}]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Sin", "[", 
    SuperscriptBox["x", "2"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7012934540414915`*^9},ExpressionUUID->"b54aa0a8-6a69-434e-a141-\
3fde3da57af3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7012932523819575`*^9, 
  3.7012932523859577`*^9}},ExpressionUUID->"bd872ea3-7a74-41e1-8ad1-\
5892ea85f11f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"2", ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701293748155314*^9, 
  3.701293785986478*^9}},ExpressionUUID->"98e9f32e-db4a-464f-bbfe-\
bbf4c7e9e8ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.701293772862727*^9, 
  3.7012937865415096`*^9}},ExpressionUUID->"06fee888-b20f-4b1c-b310-\
c25713c0638b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.701293793556911*^9, 
  3.7012938075697126`*^9}},ExpressionUUID->"71f07508-87b4-4f1a-9da8-\
35f3b9ca4c84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012938079537344`*^9},ExpressionUUID->"cdc1823b-d8e3-4b3b-adcd-\
97506ac9ed5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.701293810638888*^9, 
  3.7012938148741302`*^9}},ExpressionUUID->"ac1d05f5-d431-4735-b2d7-\
b4c950daab1a"],

Cell[BoxData[
 SqrtBox["29"]], "Output",
 CellChangeTimes->{
  3.7012938152471514`*^9},ExpressionUUID->"8aae1cde-9129-4a55-a2d2-\
b01abfc05d2d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"bnorm", " ", "=", " ", 
  RowBox[{"Normalize", "[", "b", "]"}]}]], "Input",
 CellChangeTimes->{{3.7012938190323677`*^9, 
  3.7012938383224716`*^9}},ExpressionUUID->"73f8aecf-e669-40ed-aaf4-\
8b98fdc8345d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["29"]], ",", 
   FractionBox["3", 
    SqrtBox["29"]], ",", 
   FractionBox["4", 
    SqrtBox["29"]]}], "}"}]], "Input",
 CellChangeTimes->{
  3.7012938442018075`*^9},ExpressionUUID->"d5bc5ed4-a0f2-443f-9b21-\
1ddffb558884"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dot", "[", 
  RowBox[{"v", ",", "bnorm"}], "]"}]], "Input",
 CellChangeTimes->{{3.701293857247554*^9, 3.701293879329817*^9}, {
  3.7012939161219215`*^9, 
  3.7012939162169266`*^9}},ExpressionUUID->"dfcda216-8ec0-471c-bd54-\
cb54bfc22a9f"],

Cell[BoxData[
 FractionBox["18", 
  SqrtBox["29"]]], "Output",
 CellChangeTimes->{{3.7012938722814136`*^9, 3.701293880310873*^9}, 
   3.701293917094977*^9},ExpressionUUID->"090d9c42-0e7e-4895-af36-\
7f27d7a1d050"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"x", "^", "2"}]}], "+", "3"}], "\[Equal]", "33"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.701294199719142*^9, 
  3.7012942524231567`*^9}},ExpressionUUID->"a08b0d5e-833e-448f-b485-\
4322903779b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox["15"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox["15"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7012942185882215`*^9, 
  3.701294253306207*^9}},ExpressionUUID->"59345ea4-aca7-4099-af91-\
e770c7048e2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
   "5", ",", "6", ",", "15", ",", "7", ",", "8", ",", "1", ",", "13"}], "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.701294328274495*^9, 
  3.7012943419822793`*^9}},ExpressionUUID->"f701928e-bba7-48ff-aa60-\
ed3a91310ad6"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{1., 5.}, {2., 6.}, {3., 15.}, {4., 7.}, {5., 8.}, {6., 1.}, {
        7., 13.}}]}}}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 7.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.701294342654318*^9},ExpressionUUID->"7e475fd6-ec31-4269-a1c3-\
78c4b18ee4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"a", " ", "x"}], " ", "+", " ", "d"}], "]"}], " ", "+", " ", 
      "k"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "5"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", 
     RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012944099851685`*^9, 
  3.701294498909255*^9}},ExpressionUUID->"79bac235-4284-48df-8ff5-\
30b8101eaa6a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    2.39, $CellContext`d$$ = -2.04, $CellContext`k$$ = -0.25, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 5}, {
      Hold[$CellContext`k$$], -15, 15}, {
      Hold[$CellContext`d$$], -5, 5}}, Typeset`size$$ = {360., {103., 110.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$17364$$ = 0, $CellContext`k$17365$$ = 
    0, $CellContext`d$17366$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 
        1, $CellContext`d$$ = -5, $CellContext`k$$ = -15}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$17364$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$17365$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$17366$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[Sin[$CellContext`a$$ $CellContext`x + $CellContext`d$$] + \
$CellContext`k$$, {$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`a$$, 1, 5}, {$CellContext`k$$, -15, 
         15}, {$CellContext`d$$, -5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {177., 184.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.70129441246531*^9, {3.701294453643666*^9, 3.7012944661773825`*^9}, 
   3.70129450075036*^9},ExpressionUUID->"fcf8921f-87fe-4e3e-a09b-\
00be7e15dfb8"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","setraw",
   "\"Cannot assign to raw object \\!\\(\\*RowBox[{\\\"0.`\\\"}]\\).\"",2,1,1,
   22695759055796768674,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.702161642644559*^9},ExpressionUUID->"b019f765-059c-476c-8240-\
84d381d236b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabView", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012945512832503`*^9, 
  3.70129455809264*^9}},ExpressionUUID->"adc0951f-0287-4cb6-9156-\
d26d8474e3dd"],

Cell[BoxData[
 TabViewBox[{{1,"1"->"a"}, {2,"2"->
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}, {3,"3"->"c"}}, 1]], "Output",
 CellChangeTimes->{
  3.7012945586546717`*^9},ExpressionUUID->"690c308d-ac56-44f3-9abb-\
bb6535e192d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<do it\>\"", ",", " ", 
   RowBox[{"Speak", "[", "\"\<hello motherfucker\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7012945713884*^9, 
  3.701294602661189*^9}},ExpressionUUID->"3228228b-b762-4404-9dc4-\
e1be2b8d714e"],

Cell[BoxData[
 ButtonBox["\<\"do it\"\>",
  Appearance->Automatic,
  ButtonFunction:>Speak["hello motherfucker"],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.701294589947462*^9, 
  3.701294603527239*^9}},ExpressionUUID->"1028638c-9d00-44a5-8daf-\
c23e2ccc6fb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Slider", "[", 
  RowBox[{"Dynamic", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012946627586265`*^9, 
  3.701294667907921*^9}},ExpressionUUID->"36d082b1-62d4-40d4-aec3-\
ef70eeecab9d"],

Cell[BoxData[
 SliderBox[Dynamic[$CellContext`x]]], "Output",
 CellChangeTimes->{
  3.7012946685139556`*^9},ExpressionUUID->"62644977-9c82-4d76-88f1-\
f019f9c2196e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{
  3.7012946746473064`*^9},ExpressionUUID->"90364db0-98e3-4379-be61-\
2fb84c079030"],

Cell[BoxData["0.366`"], "Output",
 CellChangeTimes->{{3.7012946754013495`*^9, 
  3.701294682519757*^9}},ExpressionUUID->"5b7461c7-e424-4b16-a379-\
46dcc9132682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7012946926393356`*^9, 
  3.7012946958435187`*^9}},ExpressionUUID->"b444579a-0646-47c4-b953-\
ecbe58440c7f"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`x, StandardForm],
  ImageSizeCache->{14., {0., 8.}}]], "Output",
 CellChangeTimes->{
  3.701294696353548*^9},ExpressionUUID->"ec944ce7-6709-40d8-a725-\
48ce889afcb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "/", "7"}], "+", 
  RowBox[{"2", "/", "11"}]}]], "Input",
 CellChangeTimes->{{3.70129521756736*^9, 
  3.7012952204005213`*^9}},ExpressionUUID->"2c17c556-7637-46ab-92da-\
e06b1f401591"],

Cell[BoxData[
 FractionBox["47", "77"]], "Output",
 CellChangeTimes->{
  3.7012952222606277`*^9},ExpressionUUID->"a1004326-3961-41ab-9625-\
7feb1d05731e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"3", "/", "7"}], "+", 
   RowBox[{"2", "/", "11"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012952292170258`*^9, 
  3.701295230808117*^9}},ExpressionUUID->"d8e5755b-271e-4a69-9a97-\
d1de19035a0f"],

Cell[BoxData["0.6103896103896104`"], "Output",
 CellChangeTimes->{
  3.7012952314761553`*^9},ExpressionUUID->"0362236f-3ea3-46c3-8b0e-\
3a236b51ce0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "32"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012952414677267`*^9, 
  3.701295252088334*^9}},ExpressionUUID->"34b30583-c116-4441-85c6-\
f8d759a12d18"],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058151208`32.\
"], "Output",
 CellChangeTimes->{
  3.7012952525643616`*^9},ExpressionUUID->"09f64f0c-ef6e-46af-b027-\
7366cce3c9a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["I"], "Input",
 CellChangeTimes->{
  3.70129527474063*^9},ExpressionUUID->"a535813f-6eca-4c68-bfa7-dba5b7fd7743"],

Cell[BoxData["\[ImaginaryI]"], "Output",
 CellChangeTimes->{
  3.70129527543567*^9},ExpressionUUID->"e9f07fdf-dbef-4caa-8b3c-7b6902a1c93a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", "^", "2"}]], "Input",
 CellChangeTimes->{{3.701295284909211*^9, 
  3.701295288415412*^9}},ExpressionUUID->"7d82d390-ab1e-4f1b-8788-\
a38814f77967"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.701295289197457*^9},ExpressionUUID->"920b72c3-5b01-4fae-b2ce-\
4646330fefda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "wolf", Typeset`newq$$ = "wolf", 
   Typeset`chosen$$ = "Entity[\"Species\", \"Species:CanisLupus\"]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["wolf", 
               Defer[
                Entity["Species", "Species:CanisLupus"]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["wolf", 
                  Defer[
                   Entity["Species", "Species:CanisLupus"]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 TemplateBox[{"\"gray wolf\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\
\"]\"","\"species specification\""},
                  "Entity"],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 TemplateBox[{"\"gray wolf\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\
\"]\"","\"species specification\""},
                  "Entity"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    TemplateBox[{"\"gray wolf\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}], "\"Entity[\\\"Species\\\", \
\\\"Species:CanisLupus\\\"]\"", "\"species specification\""}, "Entity"]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["wolf", 
                   Defer[
                    Entity["Species", "Species:CanisLupus"]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse["wolf", 
                    Defer[
                    Entity["Species", "Species:CanisLupus"]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    TemplateBox[{"\"gray wolf\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\
\"]\"","\"species specification\""},
                    "Entity"],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    TemplateBox[{"\"gray wolf\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}],"\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\
\"]\"","\"species specification\""},
                    "Entity"],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    TemplateBox[{"\"gray wolf\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], 
                    "]"}], 
                    "\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\"]\"",
                     "\"species specification\""}, "Entity"]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"39222e6e-6dc5-49f5-98a6-81b1832fb411"],

Cell[BoxData[
 TemplateBox[{"\"gray wolf\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Species\"", ",", "\"Species:CanisLupus\""}], "]"}],
   "\"Entity[\\\"Species\\\", \\\"Species:CanisLupus\\\"]\"",
   "\"species specification\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.7012954835225716`*^9},ExpressionUUID->"44a21332-916e-45d8-b4d5-\
640cdf6fcbd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "plot a sin curve", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Plot", "Plots", 1, 2, "Input", "Plot[Sin[x], {x, -6.6, 6.6}]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    RowBox[{"sin", "(", "x", ")"}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Plot", "numsubpods" -> "2", 
     "position" -> "200", "scanner" -> "Plot", "title" -> "Plots"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[Sin[x], {x, -6.6, 6.6}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max614$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min613$$ = -0.5,
                  CalculateUtilities`GraphicsUtilities`Private`more$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max614$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$623289$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min613$\
623294$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max614$623295$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max614$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min613$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`more$623289$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min613$\
623294$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max614$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max614$\
623295$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$623020[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Sin[Global`x], {Global`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$], 
                    (
                    Piecewise[{{
                    0. + 7.052858015123397 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    7.052858015123397 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$], \
-6.5973445725385655`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max614$$]], 
                    (
                    Piecewise[{{
                    0. + 7.052858015123397 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 7.052858015123397 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min613$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max614$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min613$$ + 
                    0.013194689145077132`, 
                    CalculateUtilities`GraphicsUtilities`Private`max614$$]], 
                    6.5973445725385655`]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    Ticks -> {{{(-2) Pi, (-2) Pi}, {-Pi, -Pi}, {0, 0}, {
                    Pi, Pi}, {2 Pi, 2 Pi}}, Automatic}, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {300.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min613$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max614$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, Global`UnitNumberForm, NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[Global`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    Map[
                    Global`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = Global`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    Global`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Global`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$623020] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$623020[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$623020[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/APkPiM2Ir4hITYBmPSgJKU7/\
XiS2rh2pntbIM/Dz67SZq1qxTTAZrSD6f60jy+e+656z07klHa7/V6+\
ro1HyWn6S08PbVmV85yWQj6/ixXoDWTIr2Gz+5aE4PZA05+APW+m9Z8kGpGjD+/\
wfcJTwpODHwzjDPDQE/2FcmnLNG1Z6TYif3JhMuEcPYTnr/\
eHr4cbnkUDGVEjAEl9LAtYj5VREPaQ6Ab1uxwIr7745Py+LngPIbjAkQC+\
pH1jhWhFkYKwjGd4FuvNFH3MS9DBCWKXjpLTpw7bS/QRjGRjWGW4xsXcrXVFpeoTHtqHpTUrNOPj/\
42PpCxC8l7XM7u7PgLC+NqsXdeVP+cugGe37aFV/J0JW+Y3juOtBHDTkAvs/\
midZU8IVXLuuDnVF3SbNlojBdPmPof6ZBpsxzGdtswYHZkK7xaecvwr9rCyxxbfi7th9Z88Y4ScNVk\
qOT2SdKCz6NopjzwAm2frs6tw2Pcq/\
iO0RlSwQonsnGW3eK643EFXu8IMdZusgHpiHoCRJCDdVHH7R7LmNmdEkUSCzy/rl/\
22FjWoQTc2b72TFBmx5cnZN3ahOYgXag7Mcn06x8Vt5LLuSZD3g+\
EgQzUWtHfwfooS66gYxkYSYwXNPUazGGV1IioYNkPSpA4J4IhJPtlP+\
6bf7hYCaRqX6G6lGdx4EpzFp5EvyzwIYjMTJvbdeDoCm5bzCaSp7XqIpami9Nmc0z3m0w3bmgO9FAS\
QksSPtC7PaHbE/7inrC0A3dLQrckdEtCtyR0S8L/uyS4iPFf6TeA3LaO"]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[Sin[x], {x, -26, 26}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max616$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min615$$ = -0.5,
                  CalculateUtilities`GraphicsUtilities`Private`more$$ = False,
                  Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max616$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$623631$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min615$\
623632$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max616$623633$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max616$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min615$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$623631$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min615$\
623632$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max616$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max616$\
623633$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$623362[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Sin[Global`x], {Global`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$], 
                    (
                    Piecewise[{{
                    0. + 28.21143206049359 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    28.21143206049359 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$], \
-26.389378290154262`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max616$$]], 
                    (
                    Piecewise[{{
                    0. + 28.21143206049359 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 28.21143206049359 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min615$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max616$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min615$$ + 
                    0.052778756580308527`, 
                    CalculateUtilities`GraphicsUtilities`Private`max616$$]], 
                    26.389378290154262`]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, PlotRange -> 
                    Automatic, LabelStyle -> {}, Ticks -> Automatic, 
                    ImageSize -> {300.}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min615$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max616$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, Global`UnitNumberForm, NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[Global`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    Map[
                    Global`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = Global`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    Global`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Global`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$623362] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$623362[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$623362[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbikw3t/+ARKfkVgRfEFCbGNj0oCSlO+\
9xU5q4drBdrbBnwef3STN2lWK6QBN6YdTfWke3z333PWeHsso7fd6PX3dmg+Sk3QLT0+\
s2ZWzXBaCvD/LFdWaSZFew2d3rImp2aMcflDifTet2ZdqBsaf3+\
D7wJOCg6FfDePMMKonBwryKUt07RkpdmJ/MuEyAc5+\
0mevtofD10OPgqGMwBiqhB62RcynCjRNewh0w5odDuKbPz4uj58KzmP6vaAiofqh9Y4VEAsjBXBMJ/\
jWK03UPczLgCCgyKWz5MS50/YCbRQT2ZjOcnzjQq5etMUFlWlPzf2SmnX68dHfwgcydiF5j8vZnR1/\
YWFcLfbOi+qfUzfA89u28EqeruQN03vHkTYw7ITqZTaft66SJ6RqWRf8nKpLmi0bjfHiCVP/\
Ix0xbZbD2G4bBp0d2wqvVt4y/Mu28DLHlp9L+4E1n72jBFw1GSq5fZSk4PMomikPvEDbp6tz6/\
AYdyu+Y3SGVLDCiWycZbe47nhUgdc7Qoy1m2xAOqKeABHNqXURx+0ey5jZnYKCxALPr+\
uXPTaWdSgBd7avPROE2fHlCVm3NqE5TBfqDiaZfvmj4lZyOddkyPuhMDSjaq3ob2N9lCVXkLEMjCTG\
C5p6DeawSmoEKlj2gxIkzkEwhGS/7Md98w8XK4FUHShUl/\
IsDlxpzsKT6JcFPqIiM9Pmdh04uoLbFrOJ5Gmtuoil6eK02RzT/SbTjRuaAz2UhNCShA/0bk/o9oS/\
uCcs7cDdktAtCd2S0C0J3ZLw/y4JLmL8V/oNyEe21g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod3$$, 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Function", "word" -> "sin", "desc" -> "a math function", 
          "input" -> "*MC.sin+curve-_*Function-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "PopularCurve", "word" -> "sin curve", "desc" -> 
          "a popular curve", "input" -> 
          "*MC.sin+curve-_*PopularCurve-"}, {}]}]}]}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "Plot", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.738", 
     "parsetiming" -> "0.368", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa6571hh3ed9db55g8gg0000028930c6b3i0h8g104816387509303111210", "id" -> 
     "MSPa6581hh3ed9db55g8gg0000014380a9e6i7b19gb", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "50", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa6591hh3ed9db55g8gg000005f19d94208a758ig4816387509303111210", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "Plot", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.199", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "59", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2017, 4, 15, 21, 38, 36.226442`9.311600572625657}, "Line" -> 
    215, "SessionID" -> 22690021785386740422}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {
   "Plot", "Plots", 1, 2, "Input", "Plot[Sin[x], {x, -6.6, 6.6}]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "plot a sin curve"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{232., {46., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa6571hh3ed9db55g8gg0000028930c6b3i0h8g104816387509303111210", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"176b6fca-9093-4b88-8829-869e4742604d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]}},
      Annotation[#, "Charting`Private`Tag$30035#1"]& ]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6.6, 6.6}, {-0.9999998464014627, 0.9999985917009981}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7012955164084525`*^9},ExpressionUUID->"c3388d03-85fa-497b-a760-\
aa4227d68fd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"Donald Trump\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Person\"", ",", "\"DonaldTrump::6vv3q\""}], "]"}],
   "\"Entity[\\\"Person\\\", \\\"DonaldTrump::6vv3q\\\"]\"","\"person\""},
  "Entity"]], "Input",ExpressionUUID->"3fe19479-a38a-4d00-8fff-ec075ee2bdf1"],

Cell[BoxData[
 TemplateBox[{"\"Donald Trump\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Person\"", ",", "\"DonaldTrump::6vv3q\""}], "]"}],
   "\"Entity[\\\"Person\\\", \\\"DonaldTrump::6vv3q\\\"]\"","\"person\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.701295541479886*^9},ExpressionUUID->"cf6c91fc-38ec-4f6b-a723-\
8cd090fb01fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "age Donald Trump", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Output", 
        "Quantity[MixedMagnitude[{70, 10, 1}], MixedUnit[{\"Years\", \"Months\
\", \"Days\"}]]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TemplateBox[{"  ", "\"  \"", 
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"age\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TemplateBox[{
                    StyleBox["\"of\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \"", 
                    FormBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Donald Trump\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`PeopleData, "DonaldTrump::6vv3q"}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"politician, etc.\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], LineIndent -> 
                    0], TraditionalForm]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], "\" \"", 
                    FormBox[
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"today\"", {LineIndent -> 0, 
                    LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> GrayLevel[0.84], -1 -> 
                    GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    TraditionalForm]}, "RowDefault"]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 Global`TagBoxWrapper["Separator" -> " | "]], ""}, 
               "RowWithSeparators"], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Age", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "moutput", {}, {
        "Quantity[MixedMagnitude[{70, 10, 1}], MixedUnit[{\"Years\", \"Months\
\", \"Days\"}]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 TagBox["70", #& ], "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"years\"", {
                  FontFamily -> "Helvetica", FontSize -> Smaller, 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}], "\[InvisibleSpace]", 
               TagBox["  ", 
                Global`TagBoxWrapper["StringBoxes" -> " "]], 
               RowBox[{"\"10\"", "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"months\"", {
                  FontFamily -> "Helvetica", FontSize -> Smaller, 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}], "\[InvisibleSpace]", 
               TagBox["  ", 
                Global`TagBoxWrapper["StringBoxes" -> " "]], 
               RowBox[{"\"1\"", "\[InvisibleSpace]", " ", 
                 StyleBox[
                 "\"day\"", {
                  FontFamily -> "Helvetica", FontSize -> Smaller, 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}, StripOnInput -> False]}]}], AutoSpacing -> False], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {
              FontFamily -> "Times", "Graphics", 
               Global`GraphicsBoxOptionsDefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], 
               Global`GraphicsBoxOptionsDefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"], 
               Global`GraphicsBoxOptionsDefaultFrameStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], 
               Global`GraphicsBoxOptionsDefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, 
                 "GraphicsFrameTicks"]}}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          CellSize -> {550, Automatic}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> "Result__Show details"}, {}]}]}],
    Typeset`pod3$$, Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "SubCategory", "word" -> "Donald Trump", "template" -> 
        "Assuming ${desc1}. Use ${desc2} instead", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "DonaldTrump::6vv3q", "desc" -> "Donald Trump", "input" -> 
          "*DPClash.PersonE.Donald+Trump-_*DonaldTrump%3A%3A6vv3q-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "DonaldTrumpJr::76ws3", "desc" -> "Donald Trump, Jr.", 
          "input" -> 
          "*DPClash.PersonE.Donald+Trump-_*DonaldTrumpJr%3A%3A76ws3-"}, \
{}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/PeopleDataSourceInformationNotes.\
html", "text" -> "People data"}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "http://www.wolframalpha.com/sources/PeopleDataSourceInformationNotes.\
html", "text" -> "People data"}, {}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
     "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.984", 
     "parsetiming" -> "0.302", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa5911i4hi4017fg5d71500005295e3e4dh6c182f6426536526445626752", "id" -> 
     "MSPa5921i4hi4017fg5d7150000434fe5e13cc97ba1", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "30", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5931i4hi4017fg5d71500000d383hiad75h70i66426536526445626752", "version" -> 
     "2.6"}, {"success" -> "true", "error" -> "false", "numpods" -> "0", 
     "datatypes" -> "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
     "0.359", "parsetiming" -> "0.", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "57", "related" -> "", 
     "version" -> "2.6"}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2017, 4, 15, 21, 39, 26.1362967`9.16981896986313}, "Line" -> 
    217, "SessionID" -> 22690021785386740422}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32}, 
   Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", 
    "Quantity[MixedMagnitude[{70, 10, 1}], MixedUnit[{\"Years\", \"Months\", \
\"Days\"}]]"}, Typeset`open$$ = False, Typeset`newq$$ = "age Donald Trump"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
         Typeset`pod32$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{148., {54., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
          Typeset`pod32$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$},
          Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
         Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
         Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
         Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa5911i4hi4017fg5d71500005295e3e4dh6c182f6426536526445626752", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"908ad9f4-39e8-46ae-ac68-818130138de5"],

Cell[BoxData[
 TemplateBox[{
  "70","10","1",RowBox[{"\[ThinSpace]", "\"yr\""}],
   RowBox[{"\[ThinSpace]", "\"mo\""}],RowBox[{"\[ThinSpace]", "\"days\""}],
   "years,months,days",RowBox[{"{", 
     RowBox[{"\"Years\"", ",", "\"Months\"", ",", "\"Days\""}], "}"}]},
  "QuantityMixedUnit3"]], "Output",
 CellChangeTimes->{
  3.7012955662363024`*^9},ExpressionUUID->"26831bac-ab8b-4aa4-acfd-\
0b52c60cfa27"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "population quebec city", Typeset`newq$$ = 
   "population quebec city", Typeset`chosen$$ = 
   "Entity[\"City\", {\"Quebec\", \"Quebec\", \
\"Canada\"}][EntityProperty[\"City\", \"Population\"]]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "population quebec city", 
                  Defer[
                   Entity["City", {"Quebec", "Quebec", "Canada"}][
                    EntityProperty["City", "Population"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Quebec City\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Quebec\"", ",", "\"Quebec\"", ",", "\"Canada\""}], 
                    "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"","\"city\""},
                   "Entity"], "[", 
                  
                  TemplateBox[{
                   "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Quebec City\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Quebec\"", ",", "\"Quebec\"", ",", "\"Canada\""}], 
                    "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"","\"city\""},
                   "Entity"], "[", 
                  
                  TemplateBox[{
                   "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Quebec City\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Quebec\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"", "\"city\""}, "Entity"], "[", 
                    TemplateBox[{"\"city population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "population quebec city", 
                    Defer[
                    Entity["City", {"Quebec", "Quebec", "Canada"}][
                    EntityProperty["City", "Population"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Quebec City\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Quebec\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"","\"city\""},
                    "Entity"], "[", 
                    
                    TemplateBox[{
                    "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Quebec City\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Quebec\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"","\"city\""},
                    "Entity"], "[", 
                    
                    TemplateBox[{
                    "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Quebec City\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Quebec\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Quebec\\\", \\\"Quebec\\\", \
\\\"Canada\\\"}]\"", "\"city\""}, "Entity"], "[", 
                    TemplateBox[{"\"city population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"65ec1af1-5141-4b1b-aabb-fdb3179501b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 TemplateBox[{"516622","\"people\"","people","\"People\""},
  "Quantity"], "\[IndentingNewLine]", 
 RowBox[{"=", 
  RowBox[{"population", " ", "montreal"}]}]}], "Input",
 CellChangeTimes->{{3.70129561462107*^9, 3.701295618349283*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"27444f3c-98c6-4df8-b2a9-cadfee448fc7"],

Cell[BoxData[
 TemplateBox[{"516622","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.701295619020322*^9},ExpressionUUID->"4ea7dfdf-850d-4914-bfd0-\
3528cb7169dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "population montreal", Typeset`newq$$ = 
   "population montreal", Typeset`chosen$$ = 
   "Entity[\"City\", {\"Montreal\", \"Quebec\", \
\"Canada\"}][EntityProperty[\"City\", \"Population\"]]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              "population montreal", 
               Defer[
                Entity["City", {"Montreal", "Quebec", "Canada"}][
                 EntityProperty["City", "Population"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "population montreal", 
                  Defer[
                   Entity["City", {"Montreal", "Quebec", "Canada"}][
                    EntityProperty["City", "Population"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Montreal\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Montreal\"", ",", "\"Quebec\"", ",", "\"Canada\""}], 
                    "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"","\"city\""},
                   "Entity"], "[", 
                  
                  TemplateBox[{
                   "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Montreal\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Montreal\"", ",", "\"Quebec\"", ",", "\"Canada\""}], 
                    "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"","\"city\""},
                   "Entity"], "[", 
                  
                  TemplateBox[{
                   "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Montreal\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Montreal\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"", "\"city\""}, "Entity"], "[", 
                    TemplateBox[{"\"city population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "population montreal", 
                   Defer[
                    Entity["City", {"Montreal", "Quebec", "Canada"}][
                    EntityProperty["City", "Population"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "population montreal", 
                    Defer[
                    Entity["City", {"Montreal", "Quebec", "Canada"}][
                    EntityProperty["City", "Population"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Montreal\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Montreal\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"","\"city\""},
                    "Entity"], "[", 
                    
                    TemplateBox[{
                    "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Montreal\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Montreal\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"","\"city\""},
                    "Entity"], "[", 
                    
                    TemplateBox[{
                    "\"city population\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Montreal\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Montreal\"", ",", "\"Quebec\"", ",", 
                    "\"Canada\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Montreal\\\", \
\\\"Quebec\\\", \\\"Canada\\\"}]\"", "\"city\""}, "Entity"], "[", 
                    TemplateBox[{"\"city population\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                    "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"733ae205-7110-4a3c-9b0a-832a82ee01fb"],

Cell[BoxData[
 TemplateBox[{"1704694","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.7012956308049955`*^9},ExpressionUUID->"59ba838c-d161-404c-a6dc-\
3a190ea604ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "300$ cad in US$", Typeset`newq$$ = 
   "300$ cad in US$", Typeset`chosen$$ = 
   "UnitConvert[Quantity[300., \"CanadianDollars\"], \"USDollars\"]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "300$ cad in US$", 
                  Defer[
                   UnitConvert[
                    Quantity[300., "CanadianDollars"], "USDollars"]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"UnitConvert", "[", 
                  RowBox[{
                   TemplateBox[{InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False],RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}],
                    "Canadian dollars","\"CanadianDollars\""},
                    "QuantityPrefix"], ",", " ", "\"\<USDollars\>\""}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"UnitConvert", "[", 
                  RowBox[{
                   TemplateBox[{InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False],RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}],
                    "Canadian dollars","\"CanadianDollars\""},
                    "QuantityPrefix"], ",", " ", "\<\"USDollars\"\>"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"UnitConvert", "[", 
                    RowBox[{
                    TemplateBox[{
                    InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False], 
                    RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "Canadian dollars", "\"CanadianDollars\""}, 
                    "QuantityPrefix", SyntaxForm -> Mod], ",", " ", 
                    "\"USDollars\""}], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "300$ cad in US$", 
                    Defer[
                    UnitConvert[
                    Quantity[300., "CanadianDollars"], "USDollars"]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"UnitConvert", "[", 
                    RowBox[{
                    TemplateBox[{InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False],RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}],
                    "Canadian dollars","\"CanadianDollars\""},
                    "QuantityPrefix"], ",", " ", "\<\"USDollars\"\>"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"UnitConvert", "[", 
                    RowBox[{
                    TemplateBox[{InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False],RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}],
                    "Canadian dollars","\"CanadianDollars\""},
                    "QuantityPrefix"], ",", " ", "\<\"USDollars\"\>"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"UnitConvert", "[", 
                    RowBox[{
                    TemplateBox[{
                    InterpretationBox[
                    TagBox[
                    InterpretationBox["\"300.00\"", 300., AutoDelete -> True],
                     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 300., Selectable -> 
                    False], 
                    RowBox[{
                    FormBox["\"C$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "Canadian dollars", "\"CanadianDollars\""}, 
                    "QuantityPrefix", SyntaxForm -> Mod], ",", " ", 
                    "\"USDollars\""}], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"0e81c5c5-8fb2-49f4-9343-970eabca64f5"],

Cell[BoxData[
 TemplateBox[{InterpretationBox[
    TagBox[
     InterpretationBox["\"225.21\"", 225.21, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 225.21, Selectable -> False],RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],"US dollars",
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{
  3.7012956586065855`*^9},ExpressionUUID->"bc26cd0c-1daa-46bb-9ef8-\
a4545f1b953a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Rotate", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<hello\>\"", ",", "100"}], "]"}], ",", 
      RowBox[{"\[Theta]", " ", "\[Degree]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "360"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.701295724536357*^9, 
  3.701295724538357*^9}},ExpressionUUID->"e782f15f-758b-4d0b-9687-\
41876e19c935"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/ff25c571-2766-482a-\
b8c1-9dc730f3cb9b\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/ff25c571-2766-482a-\
b8c1-9dc730f3cb9b\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/ff25c571-2766-482a-b8c1-\
9dc730f3cb9b"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/ff25c571-2766-482a-b8c1-\
9dc730f3cb9b"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/ff25c571-2766-482a-b8c1-\
9dc730f3cb9b", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/ff25c571-2766-482a-b8c1-9dc730f3cb9b"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7012957455475583`*^9},ExpressionUUID->"713c5d08-e1ea-4b45-9a84-\
ae400ffc73aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.wolfram.com/language/fast-introduction-for-programmers/en/\
external-connections/\>\"", ",", "\"\<Images\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.701296073304305*^9, 
  3.7012960892102146`*^9}},ExpressionUUID->"fb76c8eb-4140-4995-ac14-\
eb1fe24bfda6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
kDUWr3cH9RuHv0egOp+VfffzW4XfAF0lBNU=
      "], {{0, 96}, {98, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{98, 96},
    PlotRange->{{0, 98}, {0, 96}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztXSGMHckRXSeRLsRSgKFJtCgyMcyxH2SFrS4bYvTvdPYpxCv5IkWGZoYL
jRYuX7jsQ8MDZmZmhiaHTnqZ2pmxZme6u96r7v+jdeZJ49PZM10187urq19V
V//5h7Pvnv/u6Ojo5z92f3z3/X/+9vLl96/+8afuf/754ud//fTi2Y9/f/Hv
Zz89e/nXH37f/eVf7Lp3dPSH7r8AtuT18EhAd/9Tos0HSptDu49JfeW2h/Yf
dNdpd73pruvu+tBdn3Ebv3bXx+7adddFdz3vrkcReRkdTsh3fNJK5kT2E6FP
1FzfZuS3lGHfcdNdx911r/W3KnxDpu/Pr28OoJeiz3GFnI0oq2hbhrHG4EzQ
8WHrNidtX5Ft0za1u/cb9P3KbM5vZPspmD17jaB9nOjzCylvVyMnI3tX8f4K
LjLy9wWbV96h/33C44/4ft8G9Tvdl06DXseiPm8rZLE2ZcRzpz12zNM6o7eN
DHaB9/9AtPuJbOseetukflMPZufOu+u++n6DXquN2j8uIa4NyO/3NqjPVWtd
ZnqdivrYmJB9T/TrHBVF29L9+yuynXeCnpeCfrTP0d17n2zT/b3Rr+muBT0j
+NRdG/b9JrqtNuowsDV8s/Uyen98zguwsHmtuc2c6PYmoNPjgJzXATlF24Ke
f2BgvrJrV9H7Jp8E/Yp+3qxt1o9+5bTzCO19pxys70lrWqw26pCw36eJnULv
k9eg2G8rdYv8rq8Dct4F5JhtyfJx6P0JFu46Hv34V0D7uOi5aQbZPjfop9jQ
VlD4vNVGHRbWH6o4xEH3Wr/ceIzm3D56v+HXgD6/iHJYHjqFos8G3qdweb3u
njNRN/t2FG8Dfq2fbA+9PWb4rH3hhHzP1UYdHueV361mfE6RjHdW6hbhiEYo
sSd17E+xddpmeXPX9xPamoKKaYAbPx8Kzys82RxjvkGND0bN11ht1P8CxiOF
4//geV0Pye9SA/DrjxQULqbGj/R4c5bnKq7L0HOGEZ/yknh/81cZPjLZFnje
bQqzKdb3buXXoPfHjHuIrL2Zd70LNsre/XHFlZyfSdmGy0lbxlNaTo7lQ50N
/xbphyEfBn3fZPxzJq+FXlcI+kVjjQaKi0Efz6rJ2/F48xOynY9OO5ugfu4c
Bj6/Y8H7oO9Dqj0xf7Do8wzt2phQf5tivifuho1qLnuQz6K4NkM/ZtSx+TSo
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
yrnStuW/7ht3lQ==
      "], {{0, 41}, {297, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{297, 41},
    PlotRange->{{0, 297}, {0, 41}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
a2bh7PL7X1bsuJO0idGGKct/1UNAyA==
      "], {{0, 12}, {292, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{292, 12},
    PlotRange->{{0, 292}, {0, 12}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
L3Pt8+8y4rHCk1oLMg/3m7n3fFt4CwEezkQfu2FjrGAsR/uHSuxf4U/0Mgvu
4dEoa+TasLt4ht8KFPfIn5F26XsyR2XC72iPuug2Ijre1RV27vNxMV84VqLm
xUu8qGkS+v1WWBDYREctPxWPJl5bVd65iMUcJuxdvXDwWprANY8ufg9H0i7O
bj44mCA4n089GglbNhucudFoeNv7WluKZ9D2DBvCM+72v96kgej4ilfC8QwP
Ny+FI8sC8/edxiveGuPGzHtY7coC28kd22IE7VYtzx4iwt0e9i6uOPiklj73
sTkPy+b5wMLRD0duC/p80s7vgxuLheDIuK7f3zcVYDnFM2zdCM94LCQTxTNY
TBccSxBst4qiUtT3iNnpeF2FaH/SP+zZ2JFazOu/pdgQNgcWbA9sOy+4Zqnw
7nnMtmXCfeGRrt8/VKZgrjeRx8kH0T0428f6AmwM8ISZUwiO3ufylebaEuzb
sBrLl4dj94OCftteDDHE+PdCbm4uZGRkaH2+hTEIFMf4hWe7+LXL5sC1N1Dn
bjO+pvNfzA4MRM9j9foN9FpVap3r5IFce8SiRQtx9sIFKAwZgsf0ehWuH+YX
gbpHdvlRfqbjQLg+lGLCS+RIHV9/+y3i4+PxJZ63tctv0h/PcAbL1h2Xnwqv
M83Yuwh2TBYiLvJ4RkU2dgXbw4bomZPPhGMFXyVcxVyWFbyXHuvzGVIPknpt
bBBwgqurcuIPwM7CCouvcsf+vPhYeJN5ofPSE/Tfzy6eQiDTEn4hW+m8H9Rv
xSfWwoNtDedFm5FXLRyDWJ9xDp7OjrBhz8dDnh+95sFVLHO0IjxjJZ69F+QZ
yec30+tNAqIF15tQNp9jc7j6avWZT4sRLc/Pxt2rV7BvpR8cbVlYdvomGnm6
ujrxEhY5WMEzOBwvevC07MRYeFqz4Om/BOU9zj1NuQQPGyacQvai4Y1wzEEn
qPUmNzfx/CZ3+7ZniMLL4jw8uH4dhyKD4UT07rx9Z/GyjXu/hoy7iHCxBsd7
IfJ7rNf5WF2IY8u9YOPggsNPuTzjh+o0rAhyh/WshYgpEIyLrb5xBqF21ghY
cLjr93dN+TTPsLPz6J1nsAjPuJ0mdK4TH940oigzFbfOncS6EDew7R26eMbH
lqfYtMwPVq4B2JchyK2aHyZglbMVXGZt7+JVLy9sgy/bErMid6CsVZjbxS8L
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
yKpQaBC9pyJP+I28EoynmcFxYSSu5/zj92lMS0vD8OHDMWjAAEh+9RWOH6Vj
Xb7ocf/+fXz77beQkOByjYCB3DykPfdn7b5HK7Xfyo+8vFxPGd/Se60NHDSI
jv34rc+YTXiGvJIqdDXVoUjaXUGhO+Tw9VfSCDsuOPdvit+GiZqyGG7ihFOP
m7rOFV85ihnyclDWG4+jRaJtga11xdi9mAOLacZQU5DBSClpqGiOgqbWZMzd
cAIl9b3bgTuaXmE3HZ8h//n2jFCOaHtGWwN2Un4TSQXozTpDn/vLqxT4mOrS
696YS7aj5n0rqPnexVWfaM+g/CYjO+0ZffGMZEwzHgsNDU3o6E2Esf5kjBs3
BUbGxhhD5mI66ioYScZ3lbG2OPKAPya0Pz5H84yvFA0Ruiez3/Zoa8iHn74e
FGSlBXnGu0I6DpSKz/Duw57xsTEfUbOnYrisCnT8+L7N5xciMLrLntFXHOgJ
nt/EGgfyuDyDsvdeWO8COQV5fG21AdW/MRa5J6ov7+T7TSr7sGdQPGONaJ6R
tM0HKsrykJi8DPkv++cZKYc30TxD09AEcc/5/Z6Kz1BRkgZjYiiSS9+jva0F
MRFuUJQmZY2sEc/LlUGvN1GXhQIdn/Fp9gxlFTX6m1US8c1+M0QSC/Zw+3DH
m5c4NN+CcBsyl+Ds/aS2PblgNtTIuGfo4IFH3XyGN6j1JkTna2rrwUDfBBP1
TGBoPBUTJ4zHaD1dqCrI4jtFTdjM2oxnfaxv7+p3lN9kgg6kFSZgXlg0bhCO
dPnyZVy9dB4HNizCpIljoK5IxggFFQxdfhT13WwoLU/joK+rDS0tHejqG8JY
bxIMJkwl34wRxpJvRktVifRTWeiYeODyE36fbLm3G1P0lTFInfCMuP5t5k0l
yTyeoYAVnTyjMg0h9hMwVEYLrJUJAnVQ/er8jnXwdPdEwJw5CAwMJAjAbP9F
uFfNjyuk15uQerW0daCvZwwjIv94IyK/kSEt/ygypxhO9N94i2Dcfyk4JnY0
lmK792TyfMqYsYkfE9TeWot1M00gKykJp03CcTiV6ScI75WGut8aFL5uRc6h
YHw7dAS8d5+ky7a/e4F9C63w3TB17MqtRevjW5hlwLNnCK032Uh4xkiMX839
dmLC7TFkmDSWX+HOUz42ZGIBxxCyZA50ua4V9eS7NFcjPMNUhN9k+zxIySrS
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
jA==
      "], {{0, 51}, {538, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJy1lgdUk1kWx9/3pTdaAOmE3pFOACmhBxSQDqISkhBCiSE0QcXGoAJjQUUE
FEWHquCoFBkLIggqg4AC9gEZBNR1sCAqKvshC86e3Tl79pzdm3Nffrl5+X83
r5zzV4ta5x8NAwCS8Mjgz0pjiESs9AAJ5EOQIInPE3A5TEEyl8cV0aMgpNhJ
RgZA7mQJhfEwMitBkCzy93CmhYaF03C/ARhIAArQABCLnSRk+PktB/8+EKn3
A3MjAHeM5rT+Yt5fhSSHm8RGZPwQjuIksRMQPo8kzBaKkgGAm5B6T1qyEGHU
ToSlRUiDCJfMMW+ez8xx1Dy3fZsT6O+C8D0A8GQWS8QDgPQ7UqelsnmIDhmN
sImAwxcgbIGwAzuGxUEY+Q4YJiSsm+NjCOtG/UmH90+aUYuaLBZvkef/y7fA
u/KThPGs9P9yOf5zJMSnLDxDCkmyIN5nbm8UkBznsFy9F1gY77dY5wqCAhZY
EOXju8DRInf/xfnJzn9iv8AFzohx8VnUSXJb1IllefktsCjFP2iBk1ID3L7/
NjBksTeu62I9mu/OXGB+MnPxWXHrvBd7AMGAAcyQlyUwBTQQANyAP2AiI9JB
Mnf93F4Bl3XCdBGfF5NMYyAnj2tIYwrYxoY0MxNTy//5uv8/Y+7OzdPbe9/u
EiSL/16L7QHAFtlLaPf3GmcDAI1dyLkb+17TyQWAMg5AexM7RZQ6X5s76gAD
iEAcSAN5oILcaF1ghKyqFbADTshqegFfEAjCwBrABjEgAYhAGtgItoJskAv2
goOgCJSCE6ASnAZnQSO4CK6C6+AW6AH94CEYAqPgBZgE78EMBEE4iAJRIXlI
FdKCDCAziA45QG7QcsgfCoMiIR4kgFKgjdB2KBfKh4qg41AV9DN0AboK3YB6
ofvQMDQBvYE+wSiYDEvDyrA2vBSmwwzYGw6EV8M8OBHOgLPg3XAhXAafghvg
q/AtuB8egl/AUyiAIqFkUWooIxQd5YLyRYWjolEiVCYqB1WAKkPVoppRHag7
qCHUS9RHNBZNRdPQRmg7tCc6CM1GJ6Iz0XnoInQlugHdhr6DHkZPor9iKBgl
jAHGFsPEhGJ4mDRMNqYAU46px7Rj+jGjmPdYLFYWq4O1xnpiw7Cx2A3YPOwR
bB22BduLHcFO4XA4eZwBzh7ni2PhknHZuMO4U7gruD7cKO4DnoRXxZvh3fHh
eAF+G74AX42/jO/Dj+FnCBIELYItwZfAIaQT9hBOEpoJtwmjhBmiJFGHaE8M
JMYStxILibXEduIj4lsSiaROsiGtJPFJW0iFpDOkTtIw6SNZiqxPdiFHkFPI
u8kV5BbyffJbCoWiTXGihFOSKbspVZRrlCeUD2JUMWMxphhHbLNYsViDWJ/Y
K3GCuJY4Q3yNeIZ4gfg58dviLyUIEtoSLhIsiUyJYokLEoMSU5JUSVNJX8kE
yTzJaskbkuNSOCltKTcpjlSW1Ampa1IjVBRVg+pCZVO3U09S26mj0lhpHWmm
dKx0rvRp6W7pSRkpGQuZYJn1MsUyl2SGZFGy2rJM2XjZPbJnZQdkPy1RXsJY
wl2ya0ntkr4l03KKck5yXLkcuTq5frlP8jR5N/k4+X3yjfKPFdAK+gorFdIU
jiq0K7xUlFa0U2Qr5iieVXygBCvpK/krbVA6odSlNKWsouyhLFQ+rHxN+aWK
rIqTSqzKAZXLKhOqVFUHVb7qAdUrqs9pMjQGLZ5WSGujTaopqXmqpagdV+tW
m1HXUQ9S36Zep/5Yg6hB14jWOKDRqjGpqaq5QnOjZo3mAy2CFl0rRuuQVofW
tLaOdoj2Du1G7XEdOR2mToZOjc4jXYquo26ibpnuXT2sHl0vTu+IXo8+rG+p
H6NfrH/bADawMuAbHDHoNcQY2hgKDMsMB43IRgyjVKMao2FjWePlxtuMG41f
LdVcGr5039KOpV9NLE3iTU6aPDSVMvUy3WbabPrGTN+MbVZsdtecYu5uvtm8
yfy1hYEF1+KoxT1LquUKyx2WrZZfrKytRFa1VhPWmtaR1iXWg3Rpuh89j95p
g7Fxttlsc9Hmo62VbbLtWds/7Izs4uyq7caX6SzjLju5bMRe3Z5lf9x+yIHm
EOlwzGHIUc2R5Vjm+NRJw4njVO40xtBjxDJOMV45mziLnOudp11sXTa5tLii
XD1cc1y73aTcgtyK3J64q7vz3GvcJz0sPTZ4tHhiPL0993kOMpWZbGYVc9LL
2muTV5s32TvAu8j76XL95aLlzSvgFV4r9q945KPlI/Bp9AW+TN/9vo/9dPwS
/X5ZiV3pt7J45TN/U/+N/h0B1IC1AdUB7wOdA/cEPgzSDUoJag0WD44Irgqe
DnENyQ8ZCl0auin0VphCGD+sKRwXHhxeHj61ym3VwVWjEZYR2REDq3VWr199
Y43Cmvg1l9aKr2WtPReJiQyJrI78zPJllbGmophRJVGTbBf2IfYLjhPnAGeC
a8/N545F20fnR4/z7Hn7eRMxjjEFMS/5Lvwi/utYz9jS2Ok437iKuNn4kPi6
BHxCZMIFgZQgTtC2TmXd+nW9QgNhtnAo0TbxYOKkyFtUngQlrU5qSpZGzE1X
im7KDynDqQ6pxakf0oLTzq2XXC9Y35Wun74rfSzDPeOnDegN7A2tG9U2bt04
vImx6XgmlBmV2bpZY3PW5tEtHlsqtxK3xm39dZvJtvxt77aHbG/OUs7akjXy
g8cPNdli2aLswR12O0p3onfyd3bvMt91eNfXHE7OzVyT3ILcz3nsvJs/mv5Y
+OPs7ujd3Xus9hzdi90r2Duwz3FfZb5kfkb+yP4V+xsO0A7kHHh3cO3BGwUW
BaWHiIdSDg0VLi9sOqx5eO/hz0UxRf3FzsV1JUolu0qmj3CO9B11Olpbqlya
W/rpGP/YveMexxvKtMsKTmBPpJ54djL4ZMdP9J+qyhXKc8u/VAgqhir9K9uq
rKuqqpWq99TANSk1E6ciTvWcdj3dVGtUe7xOti73DDiTcub5z5E/D5z1Ptt6
jn6u9rzW+ZJ6an1OA9SQ3jDZGNM41BTW1HvB60Jrs11z/S/Gv1RcVLtYfEnm
0p7LxMtZl2evZFyZahG2vLzKuzrSurb14bXQa3fbVrZ1t3u3d153v36tg9Fx
pdO+8+IN2xsXbtJvNt6yutXQZdlV/6vlr/XdVt0Nt61vN/XY9DT3Luu93OfY
d/WO653rd5l3b/X79PcOBA3cG4wYHLrHuTd+P/7+6wepD2YebnmEeZTzWOJx
wROlJ2W/6f1WN2Q1dGnYdbjracDThyPskRe/J/3+eTTrGeVZwZjqWNW42fjF
CfeJnuerno++EL6YeZn9N8m/lbzSfXX+D6c/uiZDJ0dfi17Pvsl7K/+24p3F
u9Ypv6kn7xPez0znfJD/UPmR/rHjU8insZm0z7jPhV/0vjR/9f76aDZhdlbI
ErG+WQEUknB0NABvKhCfEAYAFfEVRLF5T/wtoHkf/43AX/G8b/4WVgCUbQEA
sd3A3wlh5F27BdFG2A/JQCcAm5sv5j8iKdrcbF6L1IhYk4LZ2beIR8TpAfBl
cHZ2pnF29ks50uwDAFrez3vxuQhHPK+kwRx1qWT+i3/6O/tS89w=
        "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "DublinCoreSchema" -> Association["Format" -> "image/png"], 
          "PhotoshopSchema" -> 
          Association["ColorMode" -> 3, "ICCProfile" -> "Display"], 
          "BasicSchema" -> 
          Association[
           "CreateDate" -> 
            DateObject[{2015, 2, 23, 10, 42, 13.}, "Instant", 
              "Gregorian", -4.], "CreatorTool" -> 
            "Adobe Photoshop CC (Macintosh)", "MetadataDate" -> 
            DateObject[{2015, 2, 23, 10, 42, 13.}, "Instant", 
              "Gregorian", -4.], "ModifyDate" -> 
            DateObject[{2015, 2, 23, 10, 42, 13.}, "Instant", 
              "Gregorian", -4.]], "MediaManagementSchema" -> 
          Association[
           "DocumentID" -> "xmp.did:1f2c01e7-def2-4c74-bc82-165fb67a4faa", 
            "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "created", "InstanceID" -> 
                "xmp.iid:1f2c01e7-def2-4c74-bc82-165fb67a4faa", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)"], "History[2]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]], 
            "InstanceID" -> "xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21", 
            "OriginalDocumentID" -> 
            "xmp.did:1f2c01e7-def2-4c74-bc82-165fb67a4faa"], 
          "RightsManagementSchema" -> 
          Association[
           "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "created", "InstanceID" -> 
                "xmp.iid:1f2c01e7-def2-4c74-bc82-165fb67a4faa", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)"], "History[2]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]]], 
          "PagedTextSchema" -> 
          Association[
           "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "created", "InstanceID" -> 
                "xmp.iid:1f2c01e7-def2-4c74-bc82-165fb67a4faa", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)"], "History[2]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21", "When" -> 
                DateObject[{2015, 2, 23, 10, 42, 13}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]]]], 
        "Comments" -> 
        Association[
         "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?><x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.5-c021 79.154911, \
2013/10/29-11:47:16> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:xmp=http://ns.adobe.com/xap/1.0/xmlns:xmpMM=http://ns.adobe.\
com/xap/1.0/mm/xmlns:stEvt=http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\
xmlns:dc=http://purl.org/dc/elements/1.1/xmlns:photoshop=http://ns.adobe.com/\
photoshop/1.0/xmlns:tiff=http://ns.adobe.com/tiff/1.0/xmlns:exif=http://ns.\
adobe.com/exif/1.0/> <xmp:CreatorTool>Adobe Photoshop CC \
(Macintosh)</xmp:CreatorTool> \
<xmp:CreateDate>2015-02-23T10:42:13-06:00</xmp:CreateDate> \
<xmp:MetadataDate>2015-02-23T10:42:13-06:00</xmp:MetadataDate> \
<xmp:ModifyDate>2015-02-23T10:42:13-06:00</xmp:ModifyDate> \
<xmpMM:InstanceID>xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21</xmpMM:\
InstanceID> \
<xmpMM:DocumentID>xmp.did:1f2c01e7-def2-4c74-bc82-165fb67a4faa</xmpMM:\
DocumentID> \
<xmpMM:OriginalDocumentID>xmp.did:1f2c01e7-def2-4c74-bc82-165fb67a4faa</xmpMM:\
OriginalDocumentID> <xmpMM:History><rdf:Seq> <rdf:li \
rdf:parseType=Resource><stEvt:action>created</stEvt:action><stEvt:instanceID>\
xmp.iid:1f2c01e7-def2-4c74-bc82-165fb67a4faa</stEvt:instanceID><stEvt:when>\
2015-02-23T10:42:13-06:00</stEvt:when><stEvt:softwareAgent>Adobe Photoshop CC \
(Macintosh)</stEvt:softwareAgent> </rdf:li> <rdf:li \
rdf:parseType=Resource><stEvt:action>saved</stEvt:action><stEvt:instanceID>\
xmp.iid:5e68628a-a4cb-4184-b57a-6f3b3d1a6b21</stEvt:instanceID><stEvt:when>\
2015-02-23T10:42:13-06:00</stEvt:when><stEvt:softwareAgent>Adobe Photoshop CC \
(Macintosh)</stEvt:softwareAgent><stEvt:changed>/</stEvt:changed> \
</rdf:li></rdf:Seq> </xmpMM:History> <dc:format>image/png</dc:format> \
<photoshop:ColorMode>3</photoshop:ColorMode> \
<photoshop:ICCProfile>Display</photoshop:ICCProfile> \
<tiff:Orientation>1</tiff:Orientation> \
<tiff:XResolution>720000/10000</tiff:XResolution> \
<tiff:YResolution>720000/10000</tiff:YResolution> \
<tiff:ResolutionUnit>2</tiff:ResolutionUnit> \
<exif:ColorSpace>65535</exif:ColorSpace> \
<exif:PixelXDimension>538</exif:PixelXDimension> \
<exif:PixelYDimension>51</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta><?xpacket end=w?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{538, 51},
    PlotRange->{{0, 538}, {0, 51}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztXb+LVUkWfjObTLj/wiTmm206nW06w4Kp89YdhgGH7hlYNlBEaBDFRFiT
boMGJxFFTJrOFEShzVpNpDEQNOigmw4angjt3W/ux/s4XVW3br0f/e57ej7w
Uve8U6dOnar67ql699nf/vjr9//+utfr/fYNLt+f+893Kyvn/vvDX3Hzzwu/
/fzThfP/+seF38//dH7l7z/+BcK/4d//vur1/ixXDofDMTHevn17eHjYtRcO
h2MxALq4evXq3t5e1478iZWVlcePH3fthcPhWBhsb29/+PDhVJsALyGzKlGb
AX2hifX19dNuxeFwzAAgFtIXC8jEXr9+rY9EbriSgvApGMDu8iCHZGdnRzQI
IzQFIfTBS7AT5HhQgBAVJbf0BfsoQ4ENqXVcpQ/jUMgYZI9oitVRfvDgwc2b
N0vo1OFwzDmUGqGAtOTixYvYTv5RAwXcMleBDhSuDgE5iQVsoIqgBTIYbiGH
2tbWFoRQwBVlNQo1NWQdIH2xLRhBLaiRuyhh0zRLyzQLZ5IG1SOUoQPGs51y
OBwLDbvYsfaZNYkWsN5RroaUQnoh+TDPYWYlIctkHiV18eaR5KYy2q0MfaEu
JQDUYJNGrEu4ogwJiajJID79UENVfPPocHw2iJMfKyRvVBELgQFAESI3CckM
uMpUkr6YR1GfBesAszV+Sp60RuRSZbgob9CWnb4cjs8G49EX6AVJziT0BfZ7
OwRPqyx9kbIIbPpK6CtjsHL6cjg+R4xEX9x/cc+IMohFm0e7kYzpK/hKEZs+
HmpV9a6TBbt5FMPwhK2VvmAQSVeTweokfengzuFwLDRGoi8dg4NhqIkqvA2O
7i1f4SNbpaoZRlXEiqA+SKqaCdmQjtxb6SswyC9Pk/TFjFEHZQ6HY3FhX5xQ
TiKhfWOBBMJ3IawFsA1P163EpjcoBwoE7NjXLShhAcLXNXQbu0TL9n2MwGDQ
I5WpNmKcHA7HoiJ5hOVwOBzzD6cvh8PhcDgcDofD4XA4HA6HoxVPnjy5fPly
1144HA7HyHD6cjgcCwqnL4fDsaBw+nI4HIuFw8PD4+Pj6iR9HRwcdOqUw+Fw
tGN/f39tbQ1X0tenT5+ePXv28OHDrv1yOByOdoC+VldXb9++Dfra2NjAdXd3
t2unHA6Hox3b29uXDa5fv87tpMPhcMw5jo6Orly5Ivra3Nzs2iOHw+EoxZ07
d0Rf796969odh8PhKMWLFy/IXfZ/L3Q4HI75x8ePH1dXV0Ffjx496toXh8Ph
GA33798Hfe3v73ftiMPhcIyG3d3dtbW1rr1wOByOkXF8fPzq1auuvXA4HA6H
w+FwfLk4Ojr6pcbZs2dRfvPmzd27d1HY29tDAVcq8A/JnRLQ6KVLlwaDAcq4
Xrt2LfjrnPMJuHrr1q2NjQ3dory8vKy+zKzpsXVmiXkY2Uliolkar5Em/RK1
2SN2bGdnB8t/jGW+vr7e6/WePn16Sq7GgLdoVMFEL3pDoAz/6Q8LW1tbVDhz
5kxs6uXLl5ubm3apPn/+fIz5ienU7/dZfv/+PcqI8FidmynQcbgKvuIte0HM
gL5s02PrzBLzMLKTxESzNF4jSf2kGghwBtMjj9ixGzdukAGSy7zE1Cm5GgNt
2RbJTmJd+gM2Zo+glqEvDqgdCy7eUV3CdMJzmWXwYefjW4hgLXBmzmZ5LiJ9
zcPIThITzdJ4jST1k2ow0nkQko5llnmrKVoADSIvwvxHFre0tEQhmkBex7/o
XdW5EyRsGnJcZQoOUIjqWkT8u+G45UfIFfEpWsQVEsgD+mKPaAoFbh7ZL/hz
tgaNI9HiWNy7d485GAqkLxTw6cHBAQpQxhXjjiubgCYyNDyLdYsqytku1WBd
ZHdUQFkKaAu3qJ5XgHCzBoX4lMKqThpBvHKgtS3WgvBaDXTNes61AKH6DlO4
RV1Yhj63KvQnsEA1eIIdDXpNHxgu+7s2qEEhiKFdhlB+XgM60OR/BiUdmGW7
NuaxMwFgBJ7Tfy23OAhU43DIQ3li1ylHNrDDLnMIFPZ7NVg37jsVXtagEWgy
hihr5udjIlOBJ5oDrCVrdpbGayQZwKSapa+SXjRFQJpcffEszXQn6djk9IW6
vWaQwZg7WYDoqpN7QII2A31yl6C9oeiL+hCqEFumvH8SHF8BsUIAAx3OXrGc
RgdlO7swHKxLfTFDdXJJ5hXkz6AGyxxTpkn6D99aTaGM7gS9CxSCTzlLm4ID
cPkHagHIYPRWYAJgm46Ns3dJuY1G4IxFMHZsNBmEeJQtRBQa2dgOn3QsY1Vy
CDgcmb5n0NR3yeVV7Ek8KGLR/nDOxGskubSTaqKvkl40RQAsFOvzWK+kO0nH
pkVfPELHldbgKs/HyDBsEXIeuJFMUCAvsS71rYcA8i7mWrSsY/mAvnALa0FB
/IkqLMOU4o8yQ82oIlycJ5zYvFXAUcADoj+cn5pCdtVgDst4Zc6UIKcC84G8
AuQYa7bIU5d+nRpV0Q631ZScf19DHQk4hPOEcs0Z6DM4SvC4h+LapxqfvPQW
ElShDnvB9JWPZs3AJH1huqLMCc8qlDMPlD9NzsQBoRGMF8+rk0EQfaFMa/06
S5G+Ml7WpZyjT6/YC86K5Rr94eLN9J39kpz5FfuOtvIxYYtJT+xkgFDEbmdp
vEaSSKrF9JXpRVMEOEuZClK5KbDJ7iQdmxZ9kQzttlSUpbLYhlwEIesq5wzo
C+SWbLGKzr6So2D7RZ5MbuSDR5tlkmpIJtosqJbVsWf4GhdRATeA/ZNJVEaB
K4JbSCqgCqdBsGDzplgInOSitv210RCV2VZQRQ9T1gq2EvJczM+KsMPoBUvY
0lcc9mSmoT1F7Ixg57zQFAQ7ypmAaGRpBx9xh2j15Y/dJeX73hTDkpg0eaK2
7P7d9n0SBPSV70VTBBhMchE/0tFNYXdiTJe+rLycvrQNl6lAv5qYvmz1selL
4GNCwvgMn1cOBzf1arFVgcYpxNLgoFMz2C7lTQUrV7et9BVEhsp0I6YvymP6
0o5AmeF49CX7Tc4I8QFRFdGXbgvpSyOrowP5oDxci1S039r3phiW01fsifIf
tRjM0klQQl92JiQjoIyXtUbtTtKxWdKXsiltHlkXW8KqPq4Psi/LTszrdOZ/
2vSlPEczc1CfG3OKMkEaDN/46htiUbbcr/MizW3N9laFymz8uV2SPvcmes0j
b4rnHuLVYIdSQl/2eM3WaqWvIBFKTv5klpWhryZnNC5qVAeSmSCU0Jcd2cCO
EJyhVVESONLCL4lJkyfqtfpoZ2kSPOFpOgSzGKMXcQS4T+RpvHKq8u4kHZsl
fZHBqB/LVaiibC3QBO9NQl9c5kxsKjPfGFVNSB1lB48JWtAI2tNRwk5mbQDt
zqJVQQ+vIOuohrmZ5kzGlCoyi1MtycmBrfTFxN76UJJ9UZ8vxCabVhm+iXh1
fthEX7EzwbioXY5gUxBK6Cv+dobeskUuQAr5XW3/5Cllsu+FCz8Zkzhu8oQP
MkhQ1imcnaVJcEFhK5TRCbwtzL6SEaC3GBT0An6yL+XdSTo2Hn3ZM66lpaVy
+iJ4hk9TSL0kV3oW0xfs6ytOPjLGpi/7xLSR75svB4Xl+gy/GmZcfPr3DdvY
01Er4QPFHheXK8gHyyoB2fKjvCl7LMbTdcq5NOw5PK3FbydqyeuIPlBroi9L
MlZfTasjAum0ib6anLHjMhh+lUCQYZJBKKGvYGStHXprv0HQY4VvU8R9H4m+
gpgEQxZ7Emy12K/+yWdiDC6KkrU/Kn0lI6Dvxy0G9fF+SXeSGI++RgXpiFu/
+IUT/hCgJImVGt3Gg4OZ2Kj+8GTArlNJOLE57gHn228qRRH58J4GOIvK9Q9q
xMJCI+WaARjSJoN2IUzoTNBKPLhVQxDySI5soZ2mvrfWysQkkMSe2I4HszQJ
LiL7BdkUEUdAeRQRpPr57jT5z+RnNvQ1xV8gBj8ampbZKjq6j8EnC6PKhGcq
p6NfGoLn+Lyhk5GdYkzsLE1CK2hmv4daHr4urq/F8x62gtkjMUU/Y/BdL/uy
/eTYG2KKNqvhYyuTdfN9MJZ5IDldB74QDOrXzOIz2zlBJyM7xZjYWdoErMdZ
/iI7fql4wj+6zV3baZCAw+FwxGjdEjocDocjxv8BSnI5Aw==
      "], {{0, 49}, {405, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CC 2015 (Macintosh)"],
           "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
, "DocumentID" -> "xmp.did:D4E95EE3316611E5A7F3ED8805C0270F", "InstanceID" -> 
            "xmp.iid:D4E95EE2316611E5A7F3ED8805C0270F", "OriginalDocumentID" -> 
            "xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
], "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmpMM:OriginalDocumentID=xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c \
xmpMM:DocumentID=xmp.did:D4E95EE3316611E5A7F3ED8805C0270F \
xmpMM:InstanceID=xmp.iid:D4E95EE2316611E5A7F3ED8805C0270F \
xmp:CreatorTool=Adobe Photoshop CC 2015 (Macintosh)> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d \
stRef:documentID=adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{405, 49},
    PlotRange->{{0, 405}, {0, 49}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
DBmbJnpuJrr2kyTWdUgR+yp254ayNVNlN3VRkh6q0EIp3yHK0G7RCUJGp5S9
3msWZaFF278QhbkjmhfB88KJQwLumqZXxt0nTSSHZ6Jd49GGb9CaP6Fzq1DX
EJuICWAZJerwhugVs0VPdyDacVy2F0O2cBc/tHR+d5LhRGFhe0J0g/wZzL6Y
qOlnJHP8u8TY3L7P/vfDJmZ5SWdyQgOD8Zt4ARaDyXwZFvYmMREsRgmV2tTZ
+QmfbYf7/0YKxcra2mLlymPnzwfFxqYVFWUWF4s+TwNpU1PTkSNHli1b5ujo
CHYGiOPt7X369Gn4umHDhpUrVy5RCMgCn+bm5sAXExMTfX39yZMnT5w4cebM
mfAVQGNra7tp0yYHBwdnZ+fk5OQhDcsfurCYbX/4w6InvQwDm0Z7Y26ZPE2/
YK5ZnenquiW23t+P2v+Xb+pMlrENV3ToL6s3XJExa36mnnm67qLkOaZxiw0Z
rmubN9jyH1/jnD3M2LGJab2a33MkQM2E6QCalk3bVDe2ObmRHqd24jTV7XyF
QxGVDX7jTYbsRRlyy2+BMqJHjuIAVxI04oDeJEUKymjeL4MUlIHUYBnykTzQ
E97XlcapOQbNxae3x683o2yaQdyfg7Jno+op8mHMrKahpiPDJZXxtwMdDTLX
zmG6mRLRzqj1DCE+hSMXGW6FMhcgHx10YhTa8RfCaTqerNHQiF6S8Dk5t4+/
XKLd4mOPKk7gYrAzdgTxzz7hDJMheh1Y3lDDABYMiozGHk9lvtOEMgo7w6yv
ZuZlNWdlUGWyLzysTiaTPfLzu3rvXn5NDR/DWFJpaXMz7ZMaDaii32Zm2m3a
tGHbNud9+9yPHbt1715rW9sn3AUpsMyhoaEGBgZAmW3btoETiYiIiIyMvHbt
mqWlJcmXxYsXm5qazp8/f968edra2lOnTgW+gIsB0GhpaY0bNw42GhoaWllZ
ubmB/Trx4MGDlpbPO1qDm//wq6++OpSspqOn/OWrHO0FbQvtaBb2TZYbKlfY
e/34U62BOUt/WYvB8pr5VpmzTbL1LTL0FqfOXRhpPK9m6UL+c1+gDP/eZcHN
c/S11rKejV1yoPTppgfT0bJ5m9zOfNujgavryjXVzhpwQM2btslHi620AYOj
2oym8DIfkxWVVdCvXCPdDfgjcvwAuR0SgX0hhbGCpCBBZTrK9Nud3FQTh1iM
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
fezVq1eVk6T9ag0n54cnmYwoKmqLlz/pP3invyp6CnIb7t15Ef4muTCvMdA/
MjI8/c6tZxUlrQPPltmDXIoVoIyQL+9Z5nElFeUdHPan6QpR5OG/aJKHAIuz
K5a7/uVrv8kT07WmVc/WZi8xk6y3o+rNrZgzi6qn26Y3l6U/l6OrE2Rnu+/Q
IajbL1y4AOzw8/Mje0CcnZ3BsHh4eIBVOXnyJOAGAoB5ARB4enoCbsCzgBMB
mrx48QJoMmXKlF9++UVHRwcIEhoaSloMoVBIo9EyMzOfP38OUWxtbRctWjR7
9uzp06dPmzZNT09v+fLl69evB9AAkh4/fgzO6MCBA5B+Vz/vxJTPaVZZucHB
YaW1NVDmcVBQUU2NUONOfPBo1TU1B44f97h+Xf7CGhaLI5E0MRitTCY2iCfS
NOdVRb4rc+B5zPzNLR6MnfhgDCw/X/rbWPs/j3GfOP6RuWnN0uX5s3Vb58xp
0ZEvNVramuyx0dRC9akZpd7joycv2B8GDDAUY8PINi7VBis5Kb7tYUDknfgK
29J54uPzm8pgyvFjIHFZBdkgRk6tKX/+RXEAtROnwUGKyiqUvUXKo4WDJCde
o1rZ4B+mvSKDKUY1lCtbtCRpD5UoIUVOzsxXPP8iCnCDr/LHNhWtWwAI8rlL
5cBjcC6QlDQvSD5s4Kq5spFN2ZuvpJjcOimGFgBZ5M91KkYykw/diANcyWdw
BPKvBuTDO79SRW/uJS4Yhx2dijJm4rL5GJqreBPZIJJJJbUJvi1xGxADXIwv
jjwwtIagaxEvR+EJ99SEx6XlcXcit0yvXzla6vIDCp2MKOBo9DG0RCK7Mejw
ZkImY1EbUy7sqvB1IiqfEcKLGLEOF5pCcR/GKXd2dgYGBmo+hue3IyZTFBzY
T6d//0YGUFJV1h4TkZGaXJQYlxcV/jY57l1CTI7SDfVKalAvgxSzQHe0cysr
uv7+swH4X7q09v/9+7kxo/wn/xw/fWruTK2y2dohUydd/elHv4njwqZOTtWa
lq4757Cjo4urK9TtBw8ehE+wIWZmZps3bz58+DA42YiICPi8du0aEAdwc+nS
pf379wMX7Ozs4A6ktLQUU7xWhs/nwz1JfHw8lJY+r9j7KKlUCvYEQvr7+8+f
Px+oBO7G0tIS3NCWLVsOHToExwDEefjwYX8pwO6y8/JW29gsWrp0z4EDjwMD
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
bIQaifwJ/JHaS1vDnFeb+MCCf1RrKyvQv6S6vKOuqrO2st+lpqJjCEtlR015
e1xMNiwN1YxBw/faV0NtF5sl6Hv8sEEsltBozJLiVlghA/TK//6q4k9bejXJ
25cvXxoZGYG/2LZtG4DG3d397t27NTU1MkUbV68iNDzBocJnbGyssbHx8uXL
V61atXXrVldX1/Pnz5Ovqjl58iTs99ixYxcuXvQPCCipqqqn0TrodDDYUOoY
TGZZVVVReXmj4kZo0JMaNE/U4ma4FcmIRtSvNLwGQeA7pJi0Ou5l8t4Vmaun
V60ZH7RKq/LqZrz0koh/XyDdLmbMFkavliSel6SeFGeckGYelWa6STMPSLP2
i99uFqZvEKauF6bYC1PWCRPXCePXiaLtRdHyT0nYZkmIoyR4tzTERfJqt9R/
u+T5NvHTzeKnNuJHy8V3TMXeumIvLcmFSZLDP4od/8iz/ZZ9cr2wMFOCkERR
2ysFV3GvlV7qe+1jH268oT6RiCVVFVWpKanwtT8ekdev6mcvaZjzfZMduI6C
37lcYVBgaX4OFRBTXd6udqnpZ/tAASo6qsraIsNSnj99U19F/7i9rG3QlKvK
2uuqO1lMnmqGqx4zny+squqoqmz/AJleJ6U+ez956R0wY6Xggj08PFasWAGI
gWofqvoTJ04cPXr0zJkzxcXFWM8yNgyRJ9Xa2hocHHz48GHwTQAU8E22trbw
eeDAASDarVu3yNk1wdF4XLz48s2bvNrazIqK9OLitMLC2IyMW48f3/H3j8rM
zKqqKmtqorNYA5cYTbJl2KV3RCPSXJrUbx8rECi6uEwoFlEK01OPWQetmN58
Y7u04rKQ68uX2nJqpvJOzxWdWSjytJRcXyu5YSd+sFEOi8dbxE+3iZ4AOLbD
p0ixLnoMi6Po0WbRk03ix+vFt9aKr1qKri0TeZmLL84XHZ8lcp8hcp8m3D9J
tGuMaPN3grV/Zpn/W8fybzpPbOTmZwqlmAiTCXtKNETBCUGsrq6u+gb5y6cq
KiqioqLgYletWAbOFrVXroY5rz6H+xecXkxMVVJ8DSAG6nb5Utr2fqW/pbSt
sv+lugyMSWeVHBYd1WXtsZGZiXF5NZVdvYKpJqJ2L3A8TAZvgExms3lFRc3U
pm6Fuxmc+5rn4dBKbz+CAEFBQeAvoM7fvXv31atXwc/ev3/fy8sLWHDp0iU6
nU4QBLkjCE+eV9+yJ1G4FWV1TZ47eQBUKvXVq1fAl3379gFErioEX1euXAk7
3bJlC+zXycnJwcHBysoKtuzYtev248exmZnJ+fk5lZW5VVV+oaHuFy4ERkXV
tLR0crn1XV1VNBqbyx343D5f6R3RiDSXJtdj36pDiuO12fEPF0/t9N4gKT3L
51/kSVd2pP1SYPpTleVoivW4lk1T6Jt/YeyYznCeydk3i+MyR7BfV7B/Dt9N
l39gjvDAPL7bHIHbPPkWF22+i5bAaQpv50S243jWxjHda37qXvk3uvlf6Iv+
3Db/69b5f6Ra/LFp04Q2f++uwiyBBBNKcUE/gutddX1giRWUKS8vP3PuDMDl
9r3br1+/Dg8PLywshKxQVpJDvX41zPmBc7iX4HAy0hvDQ8rqqjoGAEdFSSu5
qK6rXSpL2grzGl69jE2Ky8tKL4uLyoqNygx5nQDb1cctJmO19toLLDWVHd10
Tt+KV5X7nZ3sd+8o7W2sD/naA0N98/azlt4+EGRv3rxZX18fqvddu3b5+PhA
MYiNjfXz8wMigNF4+PBhdnZ2bW0t3JAoW2KVJYQ8TUgHUAJ3KUAoYFZWVhYE
5vP5VVVVz549O3jw4P79+8EZAVw8PT3PnTtHvq3M1NTU3Nx81apVNgotWrRI
W1tbS0vLwMjIYedOsFJnvbyu3b3r++TJsfPnXY8de/TqVXZpaSuD0cJkFtTV
0draBj69z1d6RzQizaX5Vdmj9hBLqlOj7+mNa76wQlx8gM87yRGvoBboRuxd
mLR3cdqGuRFG/xNj+HWKwf9kLvoud/EPeQt/KDT7sWjRD6WLvq9Y9LfqRd9X
L/hrjek3NSZf183/usrwj6Vz/rNozn8VaP/Xu+n/VjDj/+bp/EfuvD8Xm/6l
1vGnDt/x7clTeLRTfAwJxFK+BuqPQX2RBOfL4XDgPhNAQw7sQYp2mAHMUX9X
rvLi1TDnB85hVUF9VlBAffWiqLq8vbJUlRTqCVJe0lJR0lI+4AIBAC6+Pk9f
voiMi84K9I+ICk/z9XlSkFdfUdr6MWRxs3xRE125r9aaijY6naPKd3WgF7Q2
M3JzG7u7OVDEBrafwyO15qVXJWPl9/NFRUWrV69evnw5+AjAjbOzs7u7+5Mn
T8iXlx05csTNzQ08CNnM5e3t/fTp05iYGDC8zc3NYHNEiiFVoaGhENfOzs7R
0XHv3r2urq5ggq5fvw5wgfWzZ88CX65cuQKgId8mA2SZPXv2zz//DJ96enqG
hoaLFy+GxN++fQvpnzhxYrezs93mzatsba3s7Gxgxc5uy65dF318wNSkwxHX
1ibm5NRSKAMUm89aekc0Is018M1e/wVYXJ+fdt9kWvVBE1HKVh7LlSOy5PL3
80WILxJ1tzdVpQfXpoU2JAanXtgU4bwgefuiFMdFqbBsXZi2dcHbrQsytxpn
bjHM3GKQ7SBfcjbr520xeHd2a2t8CC32+VtXo5fGE6q2awmezeKXzhI0G/CY
uTy+mKeZNCERCSO44UxNSb175y5ULNXV1UO9ZtVethrm/MA5rKyo4f9TWkzz
e5ZfCXU71P/q6vweC8mFAZcKxWdZES3nbWVednVORlV2ZmVsZEZiXB6ATBlA
vhTR+knk/e7KipvllOliw6EOgnu+oKmpKyebwmQOYnw0z8PhlV75njCMLRIV
lZWBTwGOHD582MPDY/v27dbW1lu3bnVyclLM5nIXyLJ7924XFxdwNIcOHYJg
4EGAGkAK+Dx69Oj58+dv374NQLGwsFizZs3OnTsh2KlTp8h3a0J04MW1a9eA
L7AR0lm/fv2mTZuAPjk5OTdv3rS0tJw3b96CBQt27NgRFhZGjl0BkQ6riUrN
zcsLfvPG49KltevWmS1bttvV1eP69VvPn9978SIwIqJV8aKcfrD+eUvviEak
uTS5MNUaAR6PE+Rok2s3QxS2gte2jS2w5vAt+bxaPl8MhV0kwYWwSHG+UMQT
CnhCIf/jIuBBdKFiEQi4Hxb5ulgskOJdrc1Bm5Zn2M1geBnxkgy5VbO4FTrc
1rdcvpjbv4ZHn47Ojuzs7Lq6Org1LS8vV3uyml+2Q7pOB81hBWKEleUtfo/f
lRQ2V5a1DpUm5UVylPReCqnvV4pplQpTUym3JM2hwUl+T99UlbaTv5b3ilVM
q1BHq7Ki5qryVnona1C+K8oMv64OMpzCkoOm37bNoZK6v9Ir/3/guAiXCXEo
ipgAAkAgHGezWC3p6XnuRz0cHfcfOgSMuK0Q4GbZsmU2NjYAAqj2gS8ODg5L
liwBmwMEsbe3h6/btm0DswMOhYQOCJzL/PnzwYmsW7cOOALYAmvs7+8P5gUQ
AwGAOBAGbM6GDRtu3LhRWVmp+M/KW2u7u7uh7JFDl+HQIJdUyyoZTKIYMJmW
ng7xjc3MrDdt2u7ict7TMy8/H1IY1Lx/ptI7ohFprmHwhSzYXC775V7LOIsp
gvsm/AprFt+OxTPm8Dx5PExtDT8AIFRRwWGz857fj1w9reWqOSfRhl29mNsw
k1u2jsto53L5GiWiMXrIy1O1Pb+/C1Zt5vR3tWqY84PmsEgsrChrfvGsoLiA
JkdMb4LQBgeKuqU3PuTpAHpoYSHJwa/iKkvaBk/kA6fkEXtSZlCsw8b6uo7c
7EYGo1/QaJ6HA5ReCYaz6fS6iPCqa16U69e7khK5DAazq6vxVWD5enuq7hyW
7hyazdqnPtd9bt0CSwLgALgYGxubm5uvXLly7dq14GsAOgYGBjo6OjNmzNDS
0tLX1yffgEn22m/cuBGgA3DR1dVdtGgR4GnPnj0AlwcPHoSGht65c+fYsWPg
esgXDdy6dYvkCxwbWTiVjwAr+KvmAlHNRvisra19+vz5FS+vgFevauvqBIOa
x89Zekc0Is01VLioFui8wNvPTMbQj83lp1qwWGtZfAs2bxmXV8vjDWQ6lJcY
+akquLBqctLebJtPu7qKk7CHW7Od3WrKqZjGyT/O4Uk4A+rXcGeA2+9hXLAa
5vwAOQyr8E94964REFNSSKss7eNcFEzpy4u+SykQoZBaOsjSVFJAjQxLi4vO
qihu7S9Yf7uoLGvpbGco68lBc5gETWZmfUcHUyQW9c3hoZK6b+kFC1OfmRG+
Ylna1En106Z2aWvR9XRbHTZWr7NtnjmDbaQnsrIU2K0VrlwR6bhll4sLIAOY
AhCZMGGCtra2np4ewAU+HR0d3717V1hYGBIS4unpuWvXLuCLkZER2Uc/a9Ys
Q0NDiAUMMjExsbKyAppAGHd3dz8/v0ePHoHfAeMD/gUAQR7YsEsvySNlGSPB
9AVL74hGpLmGiRioK/j87o6W11uXlq3TEjyay240ZwlWsHmmbN4ZoAeXK+gP
Lv1zgtfR3JTm5dxw2ZqfdozTepFN38hqmc15a8ihFnF4ooEpM6TLVnPWDONS
1TDn+8th+A/A4SclVr18UShvlVI0jlUo+0pUPUvfmp/EgZILql8LmtSzAz6L
5L++CUp8/Og1eJnBkKQCHcVnL8polMM8flNTV2ZGHXwqjEiPrPg1lJEjRiqt
y8/3nakdNXFM7ZzZHNP5goUmQuP5vHlzunRmclYuF9rb8FeuYJrOr9XWujVr
pu369T43bpSVlcXHx4M3MVVo/fr1YEaoVCrZtEVaXUicTqdXVVUlJSWRVgWC
AY8mTZo0b948MEGAKjA4AJpTp06dPn3aSaGSkhJykMnvqfSOaESaazh8+SAo
sgVvnkQsn8I8PJMbMY9FX8LkmzO5RizuaeAJjysenCwfxOMLO5opibeda+5a
crJPsdoeMHjHmAxTdv5Udoo7mydiq2hIF+wA1+ygt9xDvVqHRxnVncJdamsr
43VQcXhoaVVZa0WJ+gax8j6GpTc4BlxKCpp6LOBl8pvC36SEBidVFLf0xyPY
rjblyrLmvpQZNIfhvNvamFkZ9aWlVB6Xr1r6hkcZ5T8GlrsbNlz79tuUGdOo
RvpClz38/c78HY78RQtYBro0YyP6AqOS6dNCJ4x7sXhh+M2bNfX1og8DkuHA
mpubKRQKg8EgW1D7liXFncD7/zWUxpSUFB0dnSlTpgBuFi9ebGZmZmdnt3v3
7r179wJxwM5AghDr71x6h8GaEcqM6DNp2IghSzW9o/WN86pC++n8S9rsdEMm
eyGDt5jJNWFyTnazajgcuIUbiDKKi47L/v/Zew+/No79XfgvuO+973vPOXFO
Tk7KSeIk7r3EiR0n7r3FveOKG9jYuBsbMN0U0zGi945AdNFBIIREk5BQ7xIq
SAh1zTuLbIxpBhsn55fo+Xy9nh2tZlezy/fZZ75TFOoeQmNT0k1a5lEV2UPR
GytX+fTKdyvJs/pK9imlYmWfSvk2vPNf6+g/2Pf8U51kzY+oYejn4IU04RgJ
sU01WBqlgz+GeBkVYXmr4hjOJm0jyGUYyxAHWSY3u6KDwB37mEHqGa6ShtKd
JI5IKJvS6/cQ0cjlfUQiq66uRypVImGagXdkmdcMpdPx6QznubP9v/yiaO5s
8opliu1b+o8e7r9+rX/LRsWq5S3z56V/+3Xijm01cbFiPl8zGFsffqn9Lzsq
qN/6RFmfOqhu3NzcPv300zlz5iDdkletsjt7NjAiApWa+sDFJTc3F5b253t6
bbBh8hiPYibml+HPNKW6MPfEGsbZ+erA+X3NqxSQaFQbZMqfhb3blMp8pVKu
6hv5Qjjsj0slFvMITbHFiVu4uNN9LG9Fb4K871mv4oCSukCZt1RJKBwhZD7Q
H+wk3wwn86c6yZofXiyUMHS6OC2VkJ1BamvlkIdi/eNQzHjipX0sciHhmRNw
TdtLLcPMSCuJjkrtJPLHY5nhdDPchljmnWuYzZbW1/VQKAIoage1yGTrcPTT
q9PrGV1dF7/5+tG/P02b9V39gnndixf2/rq23/68Yusm3tLFVat/bEhO6pVK
BwyGfs0Y7bqTIZcRzxuPx7t3797MmTO/+vrr1WvWOD9+HJuVVdzYiG1u5gmF
qlFf+RM8vTbYMHlMIGGGntXRz/Ab734Duo6C1NJdCyT2s1QRc5WkVXLlWkg0
8r4NUuUajuSsUNqmUvYrX82uP/xPikquKso70o7bo+BfV0r85YpEmdJLKj8g
61mgQH+vaElXqPWKCfE+f7bv9mb41tfCSdb80Ps8REFBR0hQTVM9A5EwpLeT
S/solplQszCJeMRIgzaUJjYziC93Wa3NDKhlCvJr4VmIww4bTI8krBHlj2aZ
qdawBol3KOpqe7DYbh6vd/J1OMa90GqhQrm0aOGVGR+Ff/tN2qxvMfNmM5Yt
6f3xB+bKZS3z59aesVNbu81PmlwmeLqGFoyQyWR5eXn79+//dcMG+xs3nkVF
ZVdUlDU3d/b0KP+MT68NNthggw022GCDDTbYYIMNNthggw022GCDDTbYYIMN
Nthggw022GCDDTbYYIMNNthggw022GCDDTbYYIMNNthggw022GCDDTbYYIMN
Nthggw022GCDDTbYYIMNNthggw022GCDDTbYYIMNNthggw02/BUglUjFIrHF
YpnqtyRiyVS/ZYVkEJM/Xm8wkMlknU5n3YWn5EiBczy4FmWsJ0+2kAE9kCin
eqX/k2A0AqUScDiAQgU4HCgsAHEx4Jk/iIoE2Rmgvh6IxYN1N00wm4Fej5wR
FstkAhoNkMmgpQVUVoHSYpCbA1KTAQoFQkOA3zMQ4A9eRIH4eJCSMtnyP5p5
5KPvjv9z9rEZs078fZbdx/MufDTrwt/nXPho0fWPl978f7/b9a95a4NQKVR2
N4NDv3Dr9sdzt/99rv3HP939ZK3bjF+eztjg+ckG7883+ny+0fOLjV5fbvWB
9vV2v5k7nn27K+D73YHf7Q6ctef5vL1hc/YEzzsQMv9w6KJDYfP3By84FLbo
UOjiYyGLT4QuOBG88HjYgtOoBXaxi8/GLj2HWnoWteQEatnZ2PnnUIuPu606
+GjWuYTN14OfPr759P51XFWhSsrsIlanJYbmJYY3lKYTW0rbSZUYTEp01LPG
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
t3fBUvv7kd4CkBGsA/mLigG6AKGSinJQNUgcUBNBBcRmAYEQEUFqNaJiIMdN
b4Dmo6U3/+9Cx4+W3vh4ufMnK+/9c8W9j3+8P2PV/Y/XPP7sV/fPVjn/ff75
v31/9N8LDu87eb2ktjo9P9ftWXhMekZORZXD06SZ29z/s8ln5rZn3+8KnLX7
+Vfb/GfueIaM8T/4fOH+oIW/+XiEJuBqsgsKc257eMWlZ/L4HBqzMzs/Mzkz
feu+Iz9uO7p+/7H1O3fs2Lzp0K/r9/y8dteeA5fcnjlFZnlmYg/eC5y76/Im
B/9dzsFbLjw6e+NBU3WJj4fLiuWLf/hh2cIF80pLMXq9RioVsmjtwc88HC7Y
XbY78cD5mutjJ6hQ7I7/dv/WlZSYoObqnA5ccX1VXnNjBZXS1tPT1dlFaCU1
4psr8Q3luNoSXHXRi7CAhfMXzJ077/0xnbfnLwm9giNtirdYRrldvQp0pwHs
VVPJ+X70GS3mPKi4ghBNtRNQccYsCnKWnJguKHXRieqBkY6EYEaYjvyHx2Wg
N0CVguo2nc7wXn/bo1lG1gcUygGocYQCodXj8WSg7z1CAZBiBNBtTRqQOrUT
+kZrXwVYbFO7qACPxFrUOkBl94mEY0T34a/T6U1NyHQBZgmdRMEmaCT0Kf6C
KaO/v188acDKqW+oNxgMkGLa2tqs9AHz29vb4cWz2WwajWa9RzBHJBTBm9JK
aB3qcdHb2wsZqrdXPtUBstYpYqRSQO1GmrMgfRRiQEHhy8a01hZApQEu7+XY
md8f/1rm/M+lt/610vlfK+/8e9X9f6168PGqB5/89ODTX1z/tcH73xv9v9zo
//VGr09X3Phi0W9XHniccnBOKanC4hsT0+IcHvqtOe658Df/efv8oX75fnfA
vP2h8w+FLzoWtfBQ6OLjUQtOvth6KaACW5eXl04gt5A62qITcgOjEyJQMY5O
N35at2nFip3/+WrBF59+8e+//e2b7+btPnzquJOrR0GDf22nd1nr4Seo5cdc
fr7mu/7W8023g5wCYqsw2XdvOUCKWb5iyZbNm/g8llwq5DGpWckvDu7dfOi3
7aeO7Tt1dF95Kaa7jZgXE1yW/qIkOw5bktVOae1TybQqGY9N7aY0kzsbyV04
aidOyGwTMEgCFolDwV++YDd71uyFCxYM2YL584e2I/KHMkekF9pazKYDSiq2
j4Z9I0tOBjgPpJWs6po4/TjlxV55zhlQcQ1gr4HyS6A1CJhGxoO10h5+mYeC
GGvR0YC+ewyKGTLjHzRgZxA6nZ7YKSPTRSwWWzPw7n2qoa8es2sZdGUCvoDJ
YON79LcTQTZuos7GY8Iap+7u7oY+8J0vbwIYjUalQs5mMchUvl+u8QbK1EI1
mkxG+P4vkUigNxYKhXwen8Vk9zD4sZi+xJik6pxoBpNe26F9UfYhrug1mpua
W1paSJNDC6GFw0EiMhD4FnxfH0IfJCIJKheYo9VpYVGQeiBz4fF463gZHo9n
pR74GysrK1uJrTSoXiYE5K6BAaTFjNyFtF9BHsEUIfPDYCuQbslkCqJ9lEqE
d94N1tAMvDqdHplVBp5L048UCMVOby8ijuCprTZJfL7i9mcr73y26t4XPz6A
9uVPDz776dGnPz74fO2Tz3598tlGny82+3+1yefrXx7+4+vtn8z8Zfay/Xef
xZTjm0kdhNv37iflVcTm1Z5x8lu88eKSrTe22QdtsI9Ydipy8fEXP9sF/3zu
xQ/nQ07eeFxeUcxgkVW9nLz88ujk3PCYsJ27t8z8z3fffPrNzM+/+XklVCaL
5i1du2rvsdW7T9k9Cboekbbpiuvy/TfW2z3ees1n67XHG8/dOePkXlGYfe3y
uVU/rlyyZNGdOze1GiWbTmupLr9qf2Ltz8u3b1u7b+/GlPhoy2DrQ08XKTX6
eVNjlVqtMOo1ShlXLu5RyphKBQtan5Ldr+TolFxVL1Mh6laIKSXotOXLlk08
88ziUROg2WaY+SCwmKQ4lF452IXJoAH0PFDlhCiXyuug1oked7AjYo+u9Ioi
77ym6BKoug4qLgPW60FiFrNJ3p4nKHfXieuBiQm05AmN8seyDPQzqj7EC0Gn
Cl/soV99h8le4Pszl8Od4IsMvtYBZXZPB0zJZNtDBp2/ksflQf5iMVnvOVz9
rYAXJejVP0oxX4605NXKOGyWSCCCjlo1CEhzUN4qeN0dFYmCbrxer5fK1fmN
OpfUD3pRgNxJ1r+Tv+ZyuT20Hnj9ROLrNrGOjg4oWOg0+lD3AFg4gUDQ6XSQ
oUZ3b7YG4mUyZNwliQQaGkFpGdJ5rLQYIRRCC2AypjweE9IHPB5SBpcLuik6
eHUteKS3c3U1KC9HIjIlJYiVliDjaMoGzTqIpqICYbSSUuRIq00SM9c++mr1
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
GhuRAfgCAfLpZHolwKIg+8DjuwenoIHlVFVZiovEMajCJpyxowNZHUAkBHLZ
y/EyUP7AU0MhMx0P5kusORyw+pD/T4eerTr47KfD/quPBa07HvLz0eBfj4f+
fDxkzYnwtXZRa+xe/HImet0F1Prz0dC22MduuRK36Wr8pisx2y5Gb7N7/tN+
l2Xbrx44d5fOZPB4lLq6ClRsjLefd019NZXalZyWdMTutPOdG7X1mISMtFve
MXvsHE/ddvOJzXILiD9/x+2Qw727gTF2l2+v/unnDT+v2vTzqh+XrV63/dA1
j+D1h+1WLf/hp0Ur1yxdtXXdr+kxofn56ei8VEg0BblpmPz0ooJMbEk+tZPA
6G5LTYi843T56rnjl04duXT68C3HizHRYXXVZXQ6hdrdXlWSVVWUWVWU01xd
TiE1w6+0ExuJhHpSawOlA8+gtQn51D45l9qGO3Lo4JYtW7Zt27Z9FKyZQx+N
ecy03Zu/FMwmIMSD1oBB7vB4bXgvffV9UcrBgfKbMA2aPJFMqHSgNT1VFzmI
Sx/rJHhg4gE9A6GV18YYJz2W/QEsYxHw+dq3TYM/SdAEIKXmjQknIVNoNBq9
7g03NKAZgEQjk8nGU08iIV/dN+lJ5AYBS4J80cJEpsdUTcOSdJaBPhkLX0rD
YTR9L2eYgeTSp+gTCAQ8Lg9e/MD0rXwH6wEWKJfJJyDWHlrPcJaB9C0SiQwf
ckYwlQqRFZBQcE0ILzAYSFwe+v9J9nQbWiyA2g3wLUg5dfXIqEwoW6x6R6cz
s5jMhPh4meyD9EsfjfUng9edCF5/PGjdyefrYPpk8Ca78C1nIreeidx8NmrD
OWioDRdiNl6I33I5butl1LYrsbscE3c7Jux0jN/hmLDvZvo+58zf7uTsd045
6xJfWduEb6zq7ia1Emup5GZqO17MoaQkoK5ddwoJCWqjUZ6i0m/4xZ91uPfI
K8gflY7KqXRDZbujsnxRmTv2Hl239tfNG1Zv3Lhqzeqf1v66ZfOm7Rt/Xf/L
zxtW/bRu1cpfD+8/iM5OKUZnF6KzCtHZ+blp+TmpBfmpJejMgsxEVIjf9ctn
zpw8aHfsN6fLZyJDA5pwNZTuzo6utrb2Vhqts5dPYZMba0szU+NCIkO8/P0e
e7nfdXvs7Pb4tqfHg0B/94T4UGxZLrm9wdfHfffuPXuQf+Ni9/if/j437k+F
gV7Qkw2avRHD+yCzk8Fti5+l2Vtd6qQqdlQWXjXWuwKC3+BHvvAjY/2T3gJH
RVuaWccBRs4gj0BjvkpY08wJM4d9apqaa31PQD/QQjVQ2f3GqaxrOQG0BmSs
/STLGs9DKtSghSwzGKd2SdI+gGcAMgd4Z4OwEsDvNSG9di3I/PxTndvGqNfy
yThaPZpOoyfUgiaapU+hEAlEXC5XIVeMbraCzDD16XPeAKyKzMzMIkyRSCiC
0nJM8mX0MIazjEKhqK+vb21tFYvFH6jrHaw/+FunVLbegEgbyEfW6WLq6pDQ
DKQVmWzs6Ila3YdrqFf1vY77w5PC58JqkKSsBi/DGoWx7g4dAA0eP3mxs+V0
yFa7sG12oVugnQvfejZs2/nI7eejdl6M3n0pdseVmK32MduuJG67nLT9WsIu
x/hdjnF7HBP33Ejafyv1wK3U/c5px+5nH3uQffxh1snHWQ+D0tDlVVVNDTQm
oburmdpGqijO9PRwdb7vUl5Vim1ouhsc7xyQ6BOdHhif6R+TnlRSH5JVcvW+
x/Vb97fv3LNj07Zt6zdt27nz8AWH/edu7j1uD3c2rNuyfv2WdWvXnTl5oqgg
Nz0tqbioABqmIBODzkDnphSiEVETHeznYG/n5Gj/Iiq4CVfb3d3Z3kHENTc0
4upxuHp8c2NNZWlFUV5lWWFlZVEltqikOD87OyUGFeHn99Tlye3bdxzu3b72
8P51X+8nCfHhdmfs9u/ff+AVDg5iKDGUHtoOT0zh4bDBYkJmjGmLRDilJQAQ
Xpql5ZkcfUWBcdTWPAatQaqy28YGD0TptAbCrab8rrTSSychALMAGFhAP5aN
lz/8AMOrxO/OMjgqskjlNJHM9KC8DQQWvLHOy2QA/bzOCAh04J0DgjGWjh6F
WCQUi6VptcY2utpomNT7t8VslLA6qfX54h6i2WSUqACqApS3DvT3qcZrrdLo
QBEBWRnnfSAUCtFoNGQNAoHA4/HGVDRMOnMEy9DpdKiAOjs6IX7Pbt5DgCe0
tqcxmUhUBYdD1EpTExKvEYuRfsgTXJHRiBwgEplratra2/qQoEwr0nMA1/CS
nuC2oQGZsgwWC8u0Gkw3DB4ADeoseFhjA5I/Seyxj9pr/2KPfQRM7LkCE1G7
7V/svhS97wrqgEP8Psf4/U4pex1T9jim/nYz9dCdlIO3kg7dSobbI3fTj93L
OP4g88TDzFOPcu1c0HbuZaddc+8EZHih0rMKcrAV5XWV2MT4ED9/r9PnrsYl
J4W+iH8UkuQTmxeaWvg8KTcgLjs0CR1bgH3o5Qtd9N5dey7YX7/g4OLoEnTN
PejETddjV5z3HDm796jj0YuPDp+8vn//sStXLp8/f/7OHeew8BBIE8WYnCJM
ZiE6vQCNNKOVlaLx+Ho8vq4RV1tbV1VfX11Vg8VWllVWlpWUFNJoFIvFZDYZ
jIaBgQGVQiHmcZmQjJqb6zGYnJjYCD9ft8cud+7dvX7r1tXTp08dPXr0+LFj
72DT8iD9JWA2AHY5ID4HxGBJmbus2kvT4AdIodD09Z6cpCMD1Y9Bezgghagr
7htxvqAtzNjkJy99oOzItCAShgf07Okx07v08PmTQaIEndyXy2NB4qAIkAUu
JykWoFtr7VZJlS+9NBKd11gUfUgPOrFIrO5/KROs3s9isIhahJ0Zncxy5oBC
2yfhM1tK+Z0Nes1rrtdPOJWWdcrN7EYwxeXaRkLTr4GsAZmira2tr69vTL5g
MVnDR2Uqlcoeeo91lKhEImlva4ek827DNicJ6+wxfX3IiP7ubmRsJvT50GCC
2v1y0piJZQXUIyLhYHyHgHyxpQW0t5lqaihdXb29vUgD3cAAcgpIQFaFAqth
RE1Yc6xzAlhVj1XpTBIHrkYfuoY67Ig65Bh76EbcoeuxBx3hNv6wY/wRp4TD
t5JO3Ms8ejfryJ2sY/cyjz9IO34v9fjd1JMP0k8+zDh5P+PM4xw7l+yzrjkX
3NGXPNEuwflBcSV+EekoFConPycnJzMg6Omdew/PX3JIyUjxCQoJTitIzC9P
RZehq3HJmOqodExYRkFIXOrpk2eO7j14/vqdsBysKyrf0T347G2XMw5Ox89c
Pnzx8SXPdEefjMPn70Dnf/r06ZMnT0GuefrUDVuOKSvOKS7KKirIyMlKasLV
EQj4sjJMeXlhSVlBcUlBASYHjc5C52dlZaU2NtaZTAb9gHqgT9EnEyskPBGf
wefQWHQKrYtEIjRgK4vTMxNDQv0ePbpz7ty506ftzpw5Y2eHbN+K4Ye948P0
FwR8cAWNSI/ltojunAfKumdmmG6PRAzJRPIRa49UV7sa8QEDdR6y2gCtlAhM
ImCADpEzbWZjmTfBEchzS4nNhE7NwKT8uEpjEQiQRn6tAcje1IXQA4slYqFQ
VEfW5eGBesAkaORhH2KxjyoqXbDlkaS8KolSiXwHPg7iPtAx9ox0IzGgR5r4
pgsTxGU4LM5wEoFkxGAwIMv0D0Kj0UARBHWNQCAwv/+Ep4OAbhw6fy4H4ZT2
doQU8C3I+Be4C4kG0s1k3Dv8QZA+oNiBUgWKjo4OIOAjQRlrH2qLxcxiMqTS
3ykuc/JWwqlbCSdvxZ90Tjx9J+nk7cSTzknQTt9OOX035cTdlDMuWWdc8s65
5p93yzvvmnX+CbScC645559kw/RF9zx797xLnvkX3LNdIwt5Ap5CLe8kd5PJ
bXwph0YnR72I9PZ5/tj9aV19NSopIauqPqe0urimoY3Bxncz86sbiwkdeZW4
m04P7Q6fvnL7YWB2aXBeVUAm9mFk2pUHnqfPO5w+d/Py3aAr94NOX7x1yf7i
JXt7aBcvXrx27WpUREh1Baa0OK8Ik1WMya6qLC3G5MfFRIaF+YcG+QT5PvX1
fBwfE56aEh+fgMrPz9Lp1HotwjJqmbhPKpCLuVIRSyJgiLk0PovCYHRSyK2N
jZWZmUk3rjvCU1jPNVX7fW7cnwQmHWAVqXHBnFIvTUv4AD5M0xxqaI3U4MNl
tYGW9mjQgQJdsepqN1n5kz5ynkXHAyYBMPCm2Uz/LSMQ/xtgMplLS0ulUrFc
LtdptRwO4velUincZTKZFAqFRqNZXokcgwnUd4MYLCBzkJwONsiof6MfwsvD
jOZGqjmnycIVKjvzO6ufVtd61dR4VVcFtmBbDBoDUGgAXQz4UlMzdQr6xGR5
y2yc7w8uhzuCZZgsplqthvwyRDRwy2QwyWSydb6y9zwj1CadncjISqhTkB5f
k17CEh5mnd8M8hGBAAityPwzYzagIYuW8nhcDs86/gUeo+pDBmwqFEhPM5kM
SQzNAwDNGp2BEsaqd6b6Ey8+SLnwIAVu7R+m2T9C7MKDtPMP0i4+Sr/wKOPC
42x7t7wLbnn2Twsuu+dd8yy44om2f5p3+WneVc/8q155Dl75Dt55jr4YaH6o
YkjodBqpjUSsb25oacXxeazUlOSHLo+eBQbk5mSGRb9IzC9GVzcRephtDFYB
tjYVg22kMaoIbQHPI8+ePnfniWdILjY4s9w7rexpIsbtRfpD3+BLV27Z2V09
e+rSFftrjtcdHR0coMH/r1y54ufrXVtZUlVRVFGWjy1HY7GYpLhI10f3nrjc
ffrkvqfrg0Af9zhUGAoVHhkZCrcymdhs0um06v4+mVomUkj4EgFLyO0R8GlC
fo8UmpAh4NHaiY0uLg+vXr06dC5rYszd0R9N7QbYMNCrbo3tw4UBSpK45jmv
IoBT9kzeEMYs8bZ0JQBygrb5ubjcfYCPA+ZeYIQUw3/TRudM3cx/xEy1/62Q
qiyNTa2N9XVMJl0q15ZVIGsnd3R2dHd3FxUVQbppaGgQCgRcGRIcgewQX4X0
o67pAkQmYA6uKTPcCyGj/F694xvNFrWE311eV/+svs63tsGvnlpANRsRxyxT
A2LPgEat0kx6fCIkOk4vyGmcmsvT6XSQC0aIF6VSOaAZe+ASj8sbzjJQxbDZ
bCvLWGHlmoGBAVgI5F86nd4/8WDIaQW8NGtHZWQOGRKylhlMQCk0ZhveYEQG
0OmATLY0NUvr6jhtHaC9C3SQQScFkKmgm/bSKNC6QRcFdHYhRiKB9g5EWMEE
iQja20AXGeGySeKaa4bVHN0yka17loNbloN7toN71jX3HAePAgdPjIN3yTXP
IgdvzA3f4hu+Jde8MNd9Cm4+K7rlj3H2L7odWOQcVHI3qNwjsgBbg+vuIXd0
draTSVIJt6W+JjYm2sXTwzMgoKYOm1eADo/PyMM2EWis4tqG9ILyVHRVfjWu
pAGXUVjocMPhgYdPeE5VUCbWN6nEK6HAJ6XAOy79uvOdSxftr9lfvnHt+u1B
OA/i1q1bDx8+KC1G19VWVFcVV1UWl5cXlRcjWiYi/Hn0i7AYVHhaUmxWRlJG
Rkp6ekp6RnJnB9Fs1JmNep1GqZaL5VK+VMAWsHt4bCqP3S3gdEOuEQsZbAbZ
19vLyckJnuX2MDi/wojMEQdM4yP0V4GMAqhpgJKqakEpml7IcFH9rXHK5mhj
eyyUOSoqpp9ZYVJTgVE0yCmTM6NwCsf8jiwDPZlx+kYifAiYB6cUVmv0BSV1
yRh2QXEjGJzmkUKl1Tc0Qt9OJlM4HDa7FwncqLUgDw/QTQaO1EBgANGocLxy
AFCEwGIyqqVcPqVJSG0ZUPSK2yWdORRKOcegfilFkE7FvVK1Sj2lUfCQKwa0
U6tN+Cbc3t4+PKAPGYfaTYXcMeYkDAK+YHivPHh5HC7HSiuaNwFztFqtTCaj
UWlQKXyI3s7WXsoqFSJYmEwk3N/WhgyfYTAmGj6jNyDjbiBNQE6hM4Cs16xR
D0h50M+RLAom8tfX2w6kRCBpRbZSEpB1ADkFKGlAzQYDfDAgAnoFMA5YjAYk
rG2wwAKhhOyfdFzmlleOs1fOLa/c2965d3zynL1znb3zbvnk3/ZB3/ZF33pW
eDug5HZgmXNA6d2gsruBZXcCSu4Flt4NLL0XVHr/eemD4FKXsHKXiCqX8Erf
mOL8skqemE9qJ1N66FAgqHpZre3t/qicwKgkGoNCIuHjUrKT0ZV55XWZRRVZ
mMq8sobSOkJFE7Gmte1ZQJC7p/+LbGxgcsGzF2m+YTFPA8LvuD27e9/t9s3b
152cn3j4PXzwcMgePHjg5u5WXlbSUF9TV1dZU4utqcESiXh0YV56ZmpObha6
IK+wML8AsTwMBl1eUVJWnE9sqpcKeAN9Mq1a1q+QysQ8EZfJZ/VwmVQuuxsa
j0NlMbqeBwbcv39/+OlG26OHY+dP0wP1V4LZiIz3p2aAniykS/OgGdpilYR4
nbQDWOQD3BqTigpMEoRoPoSZp20IBvwxcgGPzebKB8b2fvCdv6h15Av/7wzo
JZTj90RCvC61u5VExtbghWJVfUMTpJjq6moGk91CIFBFgNDeM7SQGZQzfDmQ
9ek4wrGZ2mQ0yuG7HLlZyuw0aF8eA6mKIQK15Ne9CyDL9Mp6oQ9/DyHwlpoH
g90SoP8XiUTD5QzUIL3SXmTIqlY7Ws4IBcIRLANLsHLKeIDlwFPQe+i9vb3v
M+rWZHopVaRSZKnlnh6EUDo6BtcdY7/spTxx8fBThF/aAYdr0SnkyJA0ajZo
CrbUuKsqPOiloaD4Jii+AYqG2/WX22InUHITlNwCpbdB5SNQ7QbqvAEuCBCi
QWcaoKIBc2jRBVjzXDabN17NuwQWPgosgOYShIH2KKAA2kOYfl70CO4GFz+B
JBJa/jC0zCW8/ElExaOw8sfh5a4Rla6R2CeRWNcoJOERXesVXROPxnN6JUwu
s7q2qbIWT6F0ynoZnV0dyTnlyTlF+NZmAZ+VkZ0D08l5ZVnFNXkVdcW1TfWt
nU2dPXgKKzun0MPDz/f5iyd+IQ/dvFwfu7o8dHviERQUmvDgnsudey6PPZ+5
u7k9dXeHBhMQz58H1dZUNTbU1SNEU9XYWFtXX52dnZGekZqVnZGTk5WXnw0t
H50DuaakFFNSlIPOTa+pqqBTyVIhV6WQalUKZa9IyGVwWVQOZBkOlcehsRiU
8NBgt2HnsiaG24hMuDtkk6x5G96AXgXYZcgM/wy0mZqlJsT207FmvQiYeoFJ
OsCrN6l7YAIYxW+aZFTOmDb6sDdzppFldNwXdxFQx3GWDVRQ3mbuVU8Py5jM
U+5nZTKZegRGbLtleERDoQFUwWuXBf0qfFU3mZBQsVQqgZ4T+meL2YwMhjEj
61SqtIgigyVYW8MoPIDBm+V9WvhFeCRUQ1DUqPsNfYIeUXdLn4hpGtWlecRU
ZoiWkcvUqnG7Lr8dsObv3Zug5iGQMZhyOTyFUCi0zsaPLL4jEOj1epVKJZVK
TaOmaJGIJcMzYVXA70KWgVRiJRQrRhANPAXcwpKZTOZ4vdfG/R06pFGruxvp
FUajARYLCfrLZUh7F6S7SZak6R/g8fpJJAOHazbBr7GxoPopKLsPSu+Bsnug
/J629AkPE2qpuAcq7r+ye8Ps/hvpcviV+8gXh6x00IZq/u7de/fujVfzHqEl
T8NKPMJLPMNLPWAirORpOLL7NKLUI6LMI7z0aWSFV3S1F6raO6baJ6baI6bK
M6bKG9mt8Yip9oyp9oqr8YmtexZfh8pp6Oawm/HN0OO3k6Fm5Pf0dKVnpfs9
fxEYnpKQgqZQmNDpp2PKsstxGeWNGByR0MPuYvFbuplEOr+uheQXEOTp5evt
HQjNy8vPOyA0u7jaLzD8iYv7ExdXdzcP32Hw8fFJiI/DN+NwuIbGxjpIMU1N
DUVFBckpCanpSRmZaVDOIPyCySvE5GOKCkvLMJiC7PzslJyslOrKMh6P2a/u
UyvlAyqFRtkrFrC4bCrkGgGHwaZ3v4iM9Pb29n0nDK/5iZ95G96AmgfYpfqu
dFVHpl4GX3Plg7QihUSjFeBMaibCOEbpBzHztE1UpeU1ubq6xteP21NKrzeo
VP3TNciinQNKSaB3wuE+SN8tJejTmLUDWoVcgUDZL+rV9Gte+3O1FnCGrTsz
/OKGZs58nWnUmlVSs0ZuMb4kKqRrmRpotbo+lQo6VR5XVEwwNhJ4PFo7PFkX
F9AbhMxyxoBsXDZHQjPyPol0asNPkJa9/pctbLDmnzx5MkHNw4MhQViDLJA7
NIPLRsItFDLmQQx9KlfIoRgRiUVisZhGo8F861KYEomEzWbT6XT4LcgjUHZ1
dXW1t7fDn6wdC/AYq/aBmPxkaEYj0iYGL+Stk5LBXwTfBEyQRQza/n4VJFCJ
RMrnichkfnUVsaqytrOTotUNAK0c1PkBrCuiR6qfgGpXUOMKMl0tYW6DaTck
v2YwXe02jrkOM7fX5byq+YmfeX9UhT8KO7gdssHdGKx/bOUzuI2rDkyo84+r
DUpqCEysC0is80+sC0ysD0puRCylMXAwEZzWGJ5eG5NRnFuEzcrLy8fktRBa
GnC4lJziiKSSyHRcVBY+tbi5rKWtnsJs7ObmNxCLmkhEJq+bL8bi25pp7C6+
KCEt09cnwM87MMA/zOd5RE5pdXJmvqeHj5+vv6+X3zM//+evEBQUFBERASmm
paWJQGi2GpHYkpeXjUK9SEqKT01NzhwkGnRBbmERGlp5RUkzrq6itBCdn5Gd
mZybk9HUWCsW8bT9Cm2/ckAll4q5PE4Pj01n9XTHolDwFEMne70dnhiBV4dN
suZtGAGLUafpKdOwas1aETArgLH3pZlkWlGLqZ8NTPLXmdNr08cyvKY0H59U
7vjlIS/Ar2bIRGI077SKB3y7hl6rT6nsYBlqugBfolEqlYMLXoxRnFYPqrtA
G1Ov7tcMzQZMF4GaLkSSQDEyenpkpeb1Ci8IG8GSzUCDOGCzUYQ3M+LNrEFj
ppt7X8eALWaTRi6SMjukbKpEptMiw/8tWp2BxtB1ZJI70tp5eC4sSm8wssSg
nf3Gec0WQOXpW+ljUAxUWJAlR09fY50zc4hl3lrzkAuGJpOBBAF1DUxD/TLw
ag0wyKfwGJPZxBfwobQZkzigJ+fz+Va1AnetEZkxjxwiGshcsFgulwt5aswb
9M4Qi6VkMotEZONw3Ba8sKtLLBJK4W9UqdRymQwS/sv2OmT6plaAjwJ1vqB2
0JCEH6j2A/W+oN4HNPgh9joxmIls/UCdD2IwbU1Atqq1bv2Qcl7VvK9vGm/8
mg9PqglLqgmFljiYSBxMJ9eEJdeGJNeEJNeGJteGJdeHp9RHpOHC0xoj0nFh
6biI9KaI9OaIDHx4elP4YCIiqzkyB+bXRqVhMwuwTQRSF43WRGgldtIqcO3x
hfhodDsK3VJO6K4hdWNqm/Ox9eiqxkp8Ww2eVFLbXNZIqsF3ZOYUBAeFhIVG
RryIi4pPi03KiHwR8zwoJDA4IiwCFRwcFhkZGR4O6SUiPj6+vq62tRUPDfIL
3JLaWzs62rAVZdmQQpITUlIS0zNScnIyIe8UFOQVFOY343EGo07aK6JQ2uvr
KosLc7MzU/Jy0xrrq7gsWp9cDEWNXCIQcFkMKjk+Pg6eJSoqCp7Ruh2eGLEb
NYih/Fc1nz5xzdswHAa1pJ/TrFfQkemRIZsMN7NSJ203D/AR6hnx0XSZebqm
QzRQS4NTmgUTHGFtUbGyTL8OWbnyrZ0BRErQzQfqgcEJljVIXyZVnwo6N6Rt
yowsDGsxm2Eaek7oG+GnULOMmFte2Atfvt9w4JxeQGAgo05kKmSG5KFuYNYu
YcMP1WoHdC+nDrOYxc1mTgKQZwNFDmLyLDM3xSyjGvRapYgpZZH7JFyjftRD
b7H0UqT8Zr5OibQsyRSaOrKlrA0Ihi1sAt1hGxuI5GPUBeSX6k5AZJitWst6
bdB7Q4oZFjF5e82zmKyh5jgrvyBCZljoBFIAzITqA9LNePEUSBzwGCt9TAmQ
axCG4vFh4e+mZK3rZvb1IQP8+Twk+s9kmnk8s3SSszEbBoCcCXgNgFoIOlIB
MQYQIkFzOGgOA00hgxY8aCGgORQxfBjAh4OWSEB4AUhxoCMFdGUBSj6glwJO
LRDggdi63M/bax6V0YBKr4fbmMxGq6GGWXRmAyoLN5iJi81pjs1ticsjQIvN
JcTk4GNyW1A5MEGIyyfGFRDjCkmJ6Na8chK+jd7U0l7f0NSIbyG0E8k91Dpi
T2pRW1IhKaOooaCiobC8DoOtL65uqGoiVjYQqnBEbCMRposrauJQibGxiai4
5ISk9KSkDFRMQkRkbFxSRnpOYWwiZI3svLxcSCXNTQ1dnW0d7a3t7URoJBIB
bqurKzEYdGlpcXl5SUkJBo3Ozc3NHmSZfGhUGsUC38QM8C9GLZUKqd2djQ3V
JUXovJwMTEFuC75BLOAiolMqolE6k5IS494Vk6x5G6ywmI1aCXVASDJrJZBQ
gEnxhpmV5gGBsgut4TcDc9/IT6fLpo1l3g5IEEO+0QLePrgeersONqjsADSu
pm9wxpWJA8pWmdOvRhhnQKPp15qoAsAUjrEcmtXVwcKGL0wJBQvvzVWt+jQm
tmTwCJ3MzM0CykKgGGZ9hQZmnoJLGVDJLJOLdFtb8Kg8w4iIksFo6VOpR7cs
GU0WhkAvVejhpz1CUycX9Cr1kFKnGlgfwR2wfgQCQb/mjdZLKDqgVJmgdQt+
1CvrtbLGCBIZnrZiNNHALeQ1a2RngktFbooBGfwyxCkcDrIos0CAzHipUCAx
mlFr1EwJJmDSIsFQrQxoxEAtBGo+sqgTNLUAmRodZg5IgU4BDCpg7B/8A4HP
wMvaswyOVBq9nul4SM5rTs5rSs5vTkG3JOfjEUNbrSUJjU/KH7TBBMxJxRBT
CluTC4mpGFIykmhNxbQhVkRKK2lPLe7IryD28ETt5M5WIrG1raOhpb26samF
SOhmsItq27LLOjNLW/OxzWX1+NKa5vKG5jpCW30zqZHQ0UDoqCF0VDcRc7ML
k5PTU1IzUpLSkhJT4xJSklOzk1KyYhLS0EWl5I42SC5dHSRyZxu5g0SBW3JH
F7kD7tbV1aAhmxSiy8pLK7BllZXlNTWV1dVYyDjFRYUYTIFIJICK3mTQG3UD
2n6VUibhc5ntHZCbKoox6AJ0Dkxw2D3qPjm5qz0lJSXtFVJTU4dvRydGHPY+
9/6vBuOAYkDYblCyEAZBSEQ50sx9Zq1Y1pqm4eKART32McMOnmzmCLN84GV9
h0Emm3K/I6UG8GRAoULaZ+CbtlWqmExmmRpoxqdHeBajwcDv1Td0I/Ox6Cft
E0a8aA/oLCK5ARn/KONYxAWgrwz0lQ9urVZulhRbNLLR5Wj1QNE/drQaebUY
GMPNInEWZCyKbvg6y1C+6Qc1CLwSPB3An8OVTkOPGsj1o8P9Y2YOh3W4zXAq
mSoGe1YMwLNAutGPNc+bTo90DIOEAvnFOgMMJL0xx0IqlQpYW5AZx/+NyHdh
CdaxlnALGUqpRHL6NWBAC7Q65HQjDGZqtMgBKjVQKJFvwcuQSpHrEQqRC0OM
D151M3w7Motas4qhEbNLrEbKKiHBbWYJMeulkbJKX1kJKaOYlF3WDi2nvD27
vCO3gpxb3okksOQ8LKWgsh3fQRVKJXQmE/JLZQOptpnYSemEOY0d9Nyq7vz/
v70rYUub2cL//5/c+9z7bf1a69dqrYooi4KAEHYQEEjIvq/cc2ZCCAQRtbXt
c3mf1ziZTCYhy3nnzJaz1oez4vHV9VmumC6UMsVy5rqUK5ZvyvVMqZEvMUdH
J//9/ffffvv9t//8Bvzzz3fv3h/+579//uvfv//zz1GdqdSqpdpdmamV68xd
g7mrN2qNBlNnqkdHn0BiPh4eHH85Oj0DffmaSp2B9Fxl0tnsVTp9Loo8NpPZ
pmMatq7qiigK3Hg8aDSqV1fnxP05QKG571bKpT/++OOvP0P8tTNp4l0v/f83
QPFt4d5kGd/i576K81Um6dOlqrZPHak7D7TNyTbu9SwG33kAeQxiYkjg7gAj
TLTDBTMlq+Zd3++xUHLa5g65HlZMTXj7xS0CoGiObcEZO+IomB3P1fO5cjZX
zgnPYDXgTwN9ltxxLKAXlizxev6clVzV2FwWB1s6Edz6KBgJ8z4biIpjLqb6
h02sPO+MXdsN87FfVZ5/CUBfREmkYvEa4Gc0dR20RpKk5POwo1M4HA4Fnpfl
sHsG7fmsaSgoLFGEyWTOzcKx/KBFsoQSEx/jT+UjzhmHkbyACSRxqUp0BoBo
Nmbff0YnyY9fKx++lD+cVD5+vTsIWfkAPA1XPywI8QcQeVpdEMOHZ8zHM+bg
rPrxgjlINQ5TjXSx07oft/v9h+mUafUGoweem7DcpFBtH56XD7/eHHy6+Pwl
lb9lClXmplwtlqvXxXI2X0xd5b+m0ocHh+/+fv/u74O/3x28f//x/QFEfPrr
3Yd3f70/PjpuNZlmo9ZsMK0G02zWQV/K5dvr61yxeJPJXH3+/M/RETgyxykQ
l6t0JnOZyV7lctnra2y7mXET3/ccy7AM1dQVQ5VURRTE2WQyarcb+XwWJObk
5CidTlXvKiA5hx8/Hr4IOz+w/7/wLMXiWi64575GqG5joDlix7dmT6d8Md9Q
ZWaS4z9VTQZewC7VEVDg102H9qfdLiIgRZJigk/03KnyA9KCI8i2Kc+kUdfn
zudaZq5mlkst4/OFwNrQkxL7Km/yEeHX1YYbxm8uzxaERvRL/aDUm3fX59cP
SCMRxsHPGW1wob4vaFP+KyUmrjWaiv0QFFmxTIt2GNhx7k244aAwHKvc33PN
1rjVYsHXAOEAUQCh2aWL2pvh+IJBppkvl/XjNPIIA8wxLCnTTHwVk102CMnq
VfPLZfPkqnGcaZ5kWyfZ9tl1i+mN+w8jXphxPDubsaYmKwJbb7SOvl4cHZ+e
HJ+Dt3GeylzflnPXN6AE5+nL04vLi6vM2fnF0aejz5+OPn3+8unzccTPn4/B
kUmdX/S7rR6y3e91Wq1G5a58eXmRSp3nc9lyuZTLZc7OTs/OTy8uUiAuNzfX
hcI1CNDtbRE2gTaBJ0N0RtNVSZNFRRZkWQAfh+Mm3W6rUMhfXqbA/YHdT05O
vuwAmmxt+aNv6U8NKIw7ysQWur4t4Yj7UGWeYOAqgafumPglfEOVUXRvu6mH
rWA8RW33+ZADMFZ0yEbyg/IRODlojZ8xuAbulGsZusjdj4TJZGbriu14ntAI
5Oxcv5nrBbK8CeRbX75/1uAfnG7L3ta5LiA9q5nhvDaAS0HncUa3hZafp6JP
50nDWYLffGQrSIOiKFQgXi8x9MYJvCBLcnyszfoFCUI/xTBQRGgVFlAU0Mvg
eW3GS7Ks/sBxvtuRyrXOCVN5YDvkNfJiwVSSN53UdYeEcXlx0wGmgYVu6qZX
qN6zoqwbuqxIDw8jTZPBnbm7q6TTl+mLq9T55cX5ZSp1mckX8oXbq2z2MpvN
5PKZbC6VSp+dp87OUqdnF7DE8Pk5BiDmNAWJBv1eo14rlW7LpdtWs1Eo3KQh
x6vLYrEAMbXqHSgLrIILk8/nQFzKlVKlUi6ViuDLwHI24zwPng1L0xRZBldV
lCTwNwVF5PkZ2+t1SuUinEsaMn0xUqkffUt/XviOYYsDVyOjIJH6bown3n2v
LbklIoO3q3lRFTV4yjhihcnjScDGbjTRvudDMRisFo6gXFgc3/Es2XI0sGq+
ZrhPGiLq7xsyr2GvS94xddPAzmyh6fNdX+4GcilQgeVAqfvokH77qwfnCUID
Uqvp2NsBq9Ek1CYISJrPyf7uTc/fFnAdVU11Xw3wPalbpKrqmh8Kv5G2p6jq
snYLKMvopNBZ+l8wZeUrQZUOSjFAKKvQaTZ3RO62ly32sre9XKmfK/Vy5X4W
AuV+vtwnMch8+T5Xvs+TTXTrgvck5X2+gsQwBh6uy/1KrS0piqbrLMdO2QnI
TbPZBI9uOByVa/Vc4S5fqOUK1ZvbapVpFG9LhULxOpfPZnPZXC59lbm6ymYy
OZCVDAaQl1eZcrnS7XbzgOs8U6uOhoNarQZqcn1zDY5MrVYFNpsNCBMv5gbE
6K56V68z1VoFJAYUpNttozuDM2YamhoKjSwJCvo1kiDww+F95a6SJ8gR5GOI
r8a3rqX8nrf6VwWWt3XBkR/Ak5kH1kI4kjTXYgLf8BwV6Lua7+oQCB7d94ms
tjB4Q5V5snZrjr2t5rIRFtRBUFQy0D7sEkbaJhRj2/wwYAlBFBzXsTVb6kl8
k+dbvDyU3Ec8GRzc59i2oeoyr8szSxVBaUCVVGtOS+xzYl3D7zsH88BWA0NA
2o+07n87wLWiAhd99ATOCOTyG82y/2zQ9pRX6otLup2Dvjib5jqjozJDQXGW
33x5MaJPw0DO8e9dglpRsTBMPBadfhmOC+oGhHMAYmsOIehdFIZ4SLC1l9wK
SrUhsFwflZgRhhkSqEfLYRigMXEuYsr1hwVpeFSq9oolptXuTqasoioP4/GU
4yAgqzI4DxNu1h9Oq0ynXGZub8GoVwF3VTLHZrlye1tqtVrtVqt0C77IbZEQ
NOjmpthstvr9Hngm4J70e93J+GFw3y8jSuAogb4AW61mt9thmFqlAvlVQGJA
O8bjUbNVrzFViIdV/ECj50AJTVFkRQFPE6mqUKiQRVFoNBql1+HlT8OvgGCB
eDiOtTRzLP/ajsp6phCA5Q8sWK4R+0n6VhRexgeWa6uGMgM6lmLpIjDwQHo2
ZLIz1/fFowdvVzKmpmb7iAkwodZiLhHTxt7FujV3PHpJA88PcELLeRDPZO2a
o6w7rjJWxJ4o9kVcdkVbtSMXCfwDywYxMS1NNlXB0iTH0k3LjfoS4Mez3ADK
21G2ruM6sT7YIYOVo68+CZSbt8ZPdXt3iEjpSOK5aXnOy8ayvgLLi+Bi1wvv
FcB+5ppGL+w8cXGiA65c40ev7Qpx8JQXuHjXAtMMNC1QVaSiIFUFwxAJ1HUg
KguQfnaZMADRId9fDlCG3JWG/uSnzXYH054wrTEuO5NoWWuTcMTOdMn2Ihmu
hunrnWm9O61DoDWq1nu1Otj5Vq3WqDda98PRYDjieF7RVBzzbJm6jt47y07B
E2FqDYZpAuvNTrPdaXe69BvfiqKoqjKdjJuNRp1Ml9pogHx0IcAwTL1eB0cG
P/w6mbSaTZASiOl02qBBlMPhoN1uQfyMn8EbqRv6lJ32el3QIIiHnLHO2XEM
7BcKB8JZMVRNgTVwbUBl8BC7cWPKb/JU/5x4zFw8ZkNg6Vmqq/PghkAJOPCf
R9jFdXTHVICurVs6lMa1Z+Zj7ZTmDVWG2H8n2O2NxQoindYUrZuXcHXzlcfM
fc/XWE0ZKcpIVh4UeSTromk7oCwWuC2mJhsaXFgd3gR4HaLDxW8fKXS785iN
pa0J8x2eBJoE+zns8JCQZoqNMyKHAIGjDiCILyuFU32+WZXR6jXx6BwLL4BD
+jDD7sEmfdlyJZMMghVBMYxA00MRAQUhegFXFdP4/pas3gide26Fg1l3MKPh
Ni5xFWMIu3HehzFkE9fpT9vdYavdB7Y7990uEgK9/pAXJZAYMtUCzsqAnrdl
yoo0Go16mGwA2tLu9EFDOp1Ovwcy0R8MhqALYPPZ6XTGzURR5FhuMh6DfHS7
HZCb8fhhxrH8bAaZQAzu2O89PIwWBP8JFg9wLBffFAekjeM42B2SDQb3hqFj
/bNtGbqma6pGCJEcx0JW3QUeC2/Hm927t8GO70LCeOBk764p+7ZK9AJMmZMw
705i1VkNEJJ9fQ/8GsNzjEU+zmoymv+C8fBaZLDKcJO3ZmC/K2zHfbKbGb3y
tIC6PLGF9Y6W6/eH7AiukEO+aGzJljbVQGtwOdUMxbBN07Ut33OJshAx8pPF
aVxqYLssN5k9rfOZb30wcLogL5B1zOTJJ4j+WNP2FcN/7OIHpIcDuDyqgROm
QUrdChRjxx6/T1zk5H2HMBR0WZaVZXnNz6LtKZFw+GTWBZ/OI/oIaBo6MJPm
9sQVWS1LRB4KqAZoB9UUoGlgmPgdeLWj5+QxVYru7Ja78J0wGAujiQgcjoXh
mAbWSRJIwFiMFC4h/UQcjPnBaDocPgwHowHyYTgaD0eTwXDCzkRNN0wQF9ex
bQvNPgZMCINhH40eRqPxeDKdstwMRylx/IwDfRgOR8MRbpySCetw3rrxBG76
mAjNcDjk2Kko8CL88TwkhBj8wvh0AjIBXhJwMhkrsozHIkeE44LQ8PwMNoD6
QDJQOrCCFnbM0SkhAeRPc4tjtEC0Gi3jMRG+6/16ezz5Rmx4Q0j/JPBiwJPx
XXNh292FbY8H3Niqsxqf3MVNBJI7bsnffZz+m6kMmAswj2AkdxCaDVYC7Ilh
h/uGFWvxHfDSQ2HbVXQsRNmGbimmKZmmaDrmSjUdhG0XK98sB5dx0DW6NXn/
58TSet7KFUs+AnCekh6QaW2efF6WIrLlWsBPhtxkfQ6EczZtz7S/wb3CBiyC
eF6maYLZAWswmUzAQPgxUJckWqUt+PTkHwNaH3s5XunJtwd+KX7DxUZNQVkh
y1BN3BX3ZHutWjLnrVwHLdTQGjM4d0ra+h+16eyI6UxhgbwSBQhVupxGm0iY
MgovEpDEnDhlZ+yUA8EAyZhOuQmEOWGGngx2A4C7SSqk4QbhJKLUvwCNEEVJ
VlSw8pZtk5sFRQVLEHgiLpPFTKjg06BTw1EVmU5BX1QobWDDCs7XHSZiWYFI
D8oVx4GXAi4/qAxKG95oC46IbhECSikSibexk7plwj9QJZo5zW0aQzw+vomG
2QVo5Guf+18Ka+YCY3zPdwwUlwBKwl7g2QtnIWJk272tln+NycReLPBszlf4
dm3JYJ9NeEmxNsOnBd1wLrLVFz0g7f7JNm6fzOxBLTxaMBdz8fHzUpbrWCAt
SFiNGyM/WPRqWzpBEGdYKCVJW+R4VMUebRGAfcHgO+5GDVq2xYAKPKZTK7+I
mO5kfPKH6xZ+Ocu0w5+/y15PIpIAqgg0Qxx6KYo8wVpbP5WkSEGiZpqN+kIl
KTrPp5Vg4W6sqUmwm6BsEZEoCVWNSDgi1VgjiAgwHuM6YWL6UWbaZLMjBEkP
KSNFwmRgI5dbJU0QFUGQBEFcIUSK2LhukDkxcMAsqgy2XmKHQFWFeDK1KRKE
h1SpWagKlilJtFEev3wKYkK7ZJBZywUg6Evog8BWBae8BuCM5gQidlEWSbWY
T1osUdSIDwVCo8uKTPowS/QLGuQpwwNDDM1kI6THNiTwysf+l0bgueDFgCeD
dpsQwhhDLTnapzVT78fj44FkZDx+Lat45HwlsColy8Aa366Oev2KBVjst+HN
TdgoKLHTFn8UiaXlcoGoI/AqAckqvlO+l7Tha8Ll4xTQYZIg9FnmUaVc/JTi
VjEuHFG8gwq4UgZebEIRhJ+zqMN54rfT37TjtSI1gcs86e6vFBp6aakcRL0y
YAnaQQyUsXZ6kbptBxWguA7GA0FCdOLxjwhEsJpgHgtEOc8f05GlQMRkImrc
jxgEK/xWUDVT1SykvkKNcC2GJqPxmrGIh4BmahrOsBSBfAobYnRNMyCgk/Fi
tNhA7ykZsIyCgurjOCbxW+HlsYnvAcbfwPm0DSeszyTfCTLNKHP6fQcQB5ts
ozF0YJoWQqW1oD5twnRdLyyK2FEaOoqNbHesWOZrPyQe2Lh1Lc03uze/FvDV
ckN9wd6ufkxoNhr2jQx2TvlN+YYtoWh8Q3pR2A9XPaoXvhcjiSebfFK15SfV
ZNdDv8h0PGsXdLVc5C69wF7wQ0LZWwrNCz+dsPFM1jV607lF0rZdYl4vf1vP
dsm4RiSF45vrxcsA1j2k7b6cmAP4H1acZtje79BWf1r/GXmddLo5ovZeaOiJ
a4kv1qIyc61ZLWpBW+wb+q90DjpacqCr0eFocSrWDEfzcaLZUkkNnu+t5rzL
PN5b0v/gO/pDEKoDKX0lPPdgacl/Wr7xtQqbNFasQPCDzudxhHYsOsHddkH7
tsOo/JcKZbCW+es7ALzgHLZsenEZ4PE8n+ZPDtfzI3r+emBjfHIrxqCvENIL
3Qe06/H4tQTE7JOi3KbyQLymNO6ERiObIu2JHNioLpSmCYsTi02LQqC/UK4w
k7gMRTmvHSg+nGptdFUSP/qW7rHHHnvssccee+yxxx577LHHHnvssccee+yx
xx577LHHHnvssccevzz+BxlPpP4=
      "], {{0, 121}, {546, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CC 2015 (Macintosh)"],
           "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
, "DocumentID" -> "xmp.did:D4E95EE7316611E5A7F3ED8805C0270F", "InstanceID" -> 
            "xmp.iid:D4E95EE6316611E5A7F3ED8805C0270F", "OriginalDocumentID" -> 
            "xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
], "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmpMM:OriginalDocumentID=xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c \
xmpMM:DocumentID=xmp.did:D4E95EE7316611E5A7F3ED8805C0270F \
xmpMM:InstanceID=xmp.iid:D4E95EE6316611E5A7F3ED8805C0270F \
xmp:CreatorTool=Adobe Photoshop CC 2015 (Macintosh)> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d \
stRef:documentID=adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{546, 121},
    PlotRange->{{0, 546}, {0, 121}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
M3Xz1gmUXtOPNvlxEX/xDydh04UR8SUMCg4nsTjlJOshrK3k7/sN63yUxc+J
N0ScQy4OS7h8dwxHqlbpn2Hg1wcUTyhbszwSvd2hdD0fSESHQoJt2fcmaMt9
RWEXiJx5sHMJFz+dpvT90qYBGwT+c7joPdtuZ3PiUi4nAhLDwmHDBUfueZ/3
wM/fbN32QQibE43nUTEpVuggzXUWRbHprP8GiQZFxpFJc+0XKwR8bqGbcpDR
nB1pIHpwao7uYUUbaR8SUzgkkij0MUKil9bnxWTeGmY8Nn0+yoOoXHePGUvX
Arp/d/jBwMC4DWzhrpPGZ9f3MG5GL4tkIwZjQFos29DMheqZAUML7kCnewwP
eqdYn8Tu93WGLE8mk0pl95EvzemVWSWGIZfH9b0qzedIZiUqrr5IvtY5Tj/R
37lrpr2W2whQSUWAe1dfTZRItP2bWpfXcSsRudCxa3XjlLX5Cvpq+5la13PL
JSwrs9Y8M92twKBOq4OmaYQ33nXZPw6IjowUZ3w/1nURl9BqM5tbHf36+Yos
TDMDL0zGOZFonSuTnSda45oNKFpeOzTUZ6FoNg5ARragOLAzuRjUZHrvEDUZ
vDwYP3BG3Ts2VJWxD55zW23e5xYFZn6mwkhRI/cuHRVxSbBffSRyz5lGLcZp
dov3eS9U3/uwbXuK0bSM8jbYy77Kc/Cs6KBnJpE1IHdXdQ2OjFNeVzcgaFdU
LqDGdDUGwUqc0MZ4nTqEyvNNE2SduyUZTUPU08eVcbjaabLOMV03CQzzGzuG
hsafY013JFcPPEIr2R0tH+AiEhj2wQuGJQVh6Poczo+YR2XnfUcQob8/1T1r
g3oDxX8Lfj9rQu3Pe9taLPpNKAelT/L3w6mHniJkI5thvYyl8YbswNbwNSsE
LI68FOnsdBg70IUJ9mTfydoc+v7+8tJUwZLVhTfOcznRlr8GfbVdfrPsZtnV
E38hqBkpk/iTptcJRZFgabiv1gUksoo4nzTdlB/Y+tc1ywW+PNiJkyBehh+J
HCuvY0CvTIvf/gnWfClGlrMtYgnX9bDk7msuzYgWfhq2nEUxyYlkDQsR534+
umQksz1P2jQF0oyEg/s4JFJlGCOVo3O+r4cqEU73ZCjrNDV1NWqotSDSTpM+
UZxgYlgRx8GN40poh+m4GIVf0p54sHtIClpJ1wadGjvejdxj37VWkhN9C/uq
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
ui7602/DwlaHrfj1nqJ3OfEdvaP/I/Q/P3Gs7A==
      "], {{0, 15}, {302, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CC 2015 (Macintosh)"],
           "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
, "DocumentID" -> "xmp.did:D52530E8316611E5A7F3ED8805C0270F", "InstanceID" -> 
            "xmp.iid:D52530E7316611E5A7F3ED8805C0270F", "OriginalDocumentID" -> 
            "xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
], "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmpMM:OriginalDocumentID=xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c \
xmpMM:DocumentID=xmp.did:D52530E8316611E5A7F3ED8805C0270F \
xmpMM:InstanceID=xmp.iid:D52530E7316611E5A7F3ED8805C0270F \
xmp:CreatorTool=Adobe Photoshop CC 2015 (Macintosh)> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d \
stRef:documentID=adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{302, 15},
    PlotRange->{{0, 302}, {0, 15}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
IXvb1nLq/+1mrDHSv53ptzM9JzchNzcz9lbuq6+kM2myP/6hQpibF7I31VOg
Z9OVLEfZwX2KE8eLGZQermMXj97MeCTle8/lx8SkvrixaF/ILBkgI0q/5+cX
7y+DRrvw3/P/0aRaCRSi6vipU0XPKgDtxuUXz5+k1tfmL5NJJqBhAk3jNUH8
rvQvwqpzuGLwCmPgK1AdRQcOHApOCRtBYNJOeorf9Ys/MterYTgOWFq6Pzba
3dtjvX9/NZ7+zRV4dJvN5s7OTjBD/lyEF+ZeWcI+xQePKA+/ODnUs7hEkAUI
TMKlBwQH311Y6O3pKS0rE0mluUlJwo3PaejfUTqvFW1+L/vttyzO3+7j0TVM
SjKXmfzTH8cHB2c8/USd87d7efQqFiXO4d9VLpQsLuP6T19NCNitMRo1QmGu
j1sbi9LNpRex6envvZv5zIZap+8UUf5Nty/kzuLSnbt3F+7dM6emSJ99Qr9r
+0zvx+1NsGJuRR39lFm3TCZ9YXc+4C+4AgZ9coHwcGenFckRc8NWlAFs6YDc
B/gFxBE1F83NAFv0at4mZZYU9Gci8OHJZrN31lRXDg2NwF5kBjVs2OKiX7ka
5dPeov8i7umq/I8QmCft7e0tLS0TE5ODA319LTWfHXN/aUkfE6zb+ojyyA+G
utvn7izgTMMHPpEfBdtzc/ZSY0Nurq2tzdrcbDQaRYWFqXuDNc5rRwROPcy1
kvU+mdu3F/i4SZ3XKJiUFjatgUlJcKZqWdR+Pt3OdwJIilwcmrn0Shb12vp1
CT94MflHL+dcvHBry4dJrk4ZTMeCPYHC9PTsDY+2OH+nwuFf5Tu3Tdy5Ozg2
ZjUYRD7uVuq/qv/9nyvDzuGPWmmxvkwyI5zkg6omel1AUQRLDX57R8fHbN7f
PwhoQmsOE55xMELq9uxMT4+5p7fLZrMD5aEnE+gP3SlgQd67d5+8GIRgjhyw
HgyoqanFwih4xPX3DzQ0VF2/8Nz1iz6WBtkXfX9X5Ssr8HwGg6WltW14aKjo
0vuSnfyKlINLn4kjz4wPZUUFaUTpwDHopkCFaoXyTGfPij24cq6L6Kc/rioq
qjSZikpKcs+HFXJdWriONcy1WRsezUtJSbpyJfrJx+vYtEE+vZnnmOFCkTBp
fYBNPr1H4JTLoJSxqGImtZbl0M5ca3V+JIvHzPbxULLpqSynrLAwiVabcuhA
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
M8M3T46Fzge9EEIIqSr/Aq3Y4gE=
      "], {{0, 220}, {297, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CC 2015 (Macintosh)"],
           "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
, "DocumentID" -> "xmp.did:D52530EC316611E5A7F3ED8805C0270F", "InstanceID" -> 
            "xmp.iid:D52530EB316611E5A7F3ED8805C0270F", "OriginalDocumentID" -> 
            "xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
], "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d",
                 "DocumentID" -> 
                "adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d"]]\
]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmpMM:OriginalDocumentID=xmp.did:314c4f7d-ab72-4acf-89d1-98eed331076c \
xmpMM:DocumentID=xmp.did:D52530EC316611E5A7F3ED8805C0270F \
xmpMM:InstanceID=xmp.iid:D52530EB316611E5A7F3ED8805C0270F \
xmp:CreatorTool=Adobe Photoshop CC 2015 (Macintosh)> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:c1f609eb-50dc-4a88-8870-1b65d79d491d \
stRef:documentID=adobe:docid:photoshop:7f43f764-6d3f-1178-a06e-fc6e090b8b4d/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{297, 220},
    PlotRange->{{0, 297}, {0, 220}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
If0H9AR0UA==
      "], {{0, 17}, {269, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CS6 (Windows)"], 
          "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A788F8E711E38213851217285565", 
                "DocumentID" -> "xmp.did:5004A789F8E711E38213851217285565"]], 
            "DocumentID" -> "xmp.did:5004A78BF8E711E38213851217285565", 
            "InstanceID" -> "xmp.iid:5004A78AF8E711E38213851217285565"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A788F8E711E38213851217285565", 
                "DocumentID" -> "xmp.did:5004A789F8E711E38213851217285565"]]],
           "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A788F8E711E38213851217285565", 
                "DocumentID" -> 
                "xmp.did:5004A789F8E711E38213851217285565"]]]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS6 (Windows) \
xmpMM:InstanceID=xmp.iid:5004A78AF8E711E38213851217285565 \
xmpMM:DocumentID=xmp.did:5004A78BF8E711E38213851217285565> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:5004A788F8E711E38213851217285565 \
stRef:documentID=xmp.did:5004A789F8E711E38213851217285565/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{269, 17},
    PlotRange->{{0, 269}, {0, 17}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJztXf9XE+ean+7+sj/uv7B77rlnq9j+enerWO1PvVXb3j3bamv3nPql3l2x
d+utvbe7tYRKuEqohoJKcvcCWhElVECqeIDWEGsggSRgAomQxASTYAZmCBPM
cBd62Od938lkEhKIyBeF+ZxTO5l55p33eef5vM/zfnmGf9j3u9989DcURf3+
7+Cf33z4h21Hj374+b/+Pfz4t49//x+HPj544PWPPz146ODRX+37Wzj5Evz3
+gsUhY5nZciQIeO5QiQScbvd9+7ds9lsfTJkrCGASYNhg3mDka82z1YaoPLA
wMD9+/d9Pl8wGByRIWMNAUwaDBvMG4x8vbHb6/UODQ2Fw2FQfGJiguO46BOC
w5Dvku96Bu8CkwbDBvMGIwdTX222rSigN4OeDVrg8ePHMRlrGuvzFYPWYN5g
5GDqq822FQXoC33a5OTkar8BGTKWC2DeYOTrjdowDBkbG1vttl8Y69PjyFgq
gJGDqa8221YUzwu1Zch4GsjUXquQnf6zhhV+IzK1ZawNPHdd2XJXeB1Qm2dp
ASw3M7s81G5eOjAMs7R1WzTmtT0O2jPMcE9ZLB0MwltJK8biF7aI8pcZHLak
aMrJ0VAoY2VZOkSz2T8gO8UZKHRiXgmR2jNcggH8arNxKcEZt1NxKMyzy0Zt
Jo6RkREoX/zJsiyTNTJRm59wlivyFcm45hhuVBTU2emnr7/rRsnWjdBAu/Q0
4V1Yu4uSYE+H5CE8a9wJ53I2wT+bj19H1eVpzc4keX1Y0i3wdPW74qWdpCh+
3HZ8C0W9kIMKKelMrk7wct4GIp1X1S29YCjZQe3UhvGxrWKfWKjKGFqs4qpc
pPhOvaBgWJuiSLLiqFVychKKx2JRX+vuuPSJm56U8j1tJeTSxmM6esFq86Ga
w4Lih6vMpD7VYulQSdyqIXNljnDmiDnzyxepbS5O6HO6J7rahFw6THW/TVGf
NdrpoC/ITs0uM7V9Pl9ZWdnDhw+zp3M21AZEIkwkEg3Z6hSK2kAkCr+i0WjA
6x2J8E9ff4+xta29KofKJZYMjpX2uxA8fqMGaPllsskyfh+WczdS6BZkb6NY
3pleni7fRP2nzkaHfH5/iDiw62Dgx1uwc2JDoSSnRutPUFSRH1WrEWy40SO4
MNpUgawzt5xQu7tkM3W43k+H/H4/neLlos4ShdKRRcskFI/3RaPDccUr3kmj
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
      "], {{0, 46}, {329, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CS6 (Windows)"], 
          "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A78CF8E711E38213851217285565", 
                "DocumentID" -> "xmp.did:5004A78DF8E711E38213851217285565"]], 
            "DocumentID" -> "xmp.did:5004A78FF8E711E38213851217285565", 
            "InstanceID" -> "xmp.iid:5004A78EF8E711E38213851217285565"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A78CF8E711E38213851217285565", 
                "DocumentID" -> "xmp.did:5004A78DF8E711E38213851217285565"]]],
           "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:5004A78CF8E711E38213851217285565", 
                "DocumentID" -> 
                "xmp.did:5004A78DF8E711E38213851217285565"]]]], "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmp:CreatorTool=Adobe Photoshop CS6 (Windows) \
xmpMM:InstanceID=xmp.iid:5004A78EF8E711E38213851217285565 \
xmpMM:DocumentID=xmp.did:5004A78FF8E711E38213851217285565> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:5004A78CF8E711E38213851217285565 \
stRef:documentID=xmp.did:5004A78DF8E711E38213851217285565/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{329, 46},
    PlotRange->{{0, 329}, {0, 46}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
8XvG/wEMYWKD
      "], {{0, 21}, {449, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "DublinCoreSchema" -> Association["Format" -> "image/png"], 
          "PhotoshopSchema" -> Association["ColorMode" -> 3], "BasicSchema" -> 
          Association[
           "CreateDate" -> 
            DateObject[{2014, 6, 21, 14, 31, 42.}, "Instant", 
              "Gregorian", -4.], "CreatorTool" -> 
            "Adobe Photoshop CC (Macintosh)", "MetadataDate" -> 
            DateObject[{2014, 6, 21, 14, 32, 5.}, "Instant", 
              "Gregorian", -4.], "ModifyDate" -> 
            DateObject[{2014, 6, 21, 14, 32, 5.}, "Instant", 
              "Gregorian", -4.]], "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:7447da8e-460a-46ef-bfa0-9cbe2f4af6ec",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]], 
            "DocumentID" -> "xmp.did:45EE4C8EF8E511E389A4C603292D00A8", 
            "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42", "When" -> 
                DateObject[{2014, 6, 21, 14, 32, 5}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]], 
            "InstanceID" -> "xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42", 
            "OriginalDocumentID" -> 
            "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:7447da8e-460a-46ef-bfa0-9cbe2f4af6ec",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]], "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42", "When" -> 
                DateObject[{2014, 6, 21, 14, 32, 5}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]]], 
          "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:7447da8e-460a-46ef-bfa0-9cbe2f4af6ec",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]], "History" -> 
            Association[
             "History[1]" -> 
              Association[
               "Action" -> "saved", "InstanceID" -> 
                "xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42", "When" -> 
                DateObject[{2014, 6, 21, 14, 32, 5}, "Instant", 
                  "Gregorian", -4.], "SoftwareAgent" -> 
                "Adobe Photoshop CC (Macintosh)", "Changed" -> "/"]]]], 
        "Comments" -> 
        Association[
         "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?><x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.5-c021 79.154911, \
2013/10/29-11:47:16> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/xmlns:stRef=http://ns.\
adobe.com/xap/1.0/sType/ResourceRef#xmlns:stEvt=http://ns.adobe.com/xap/1.0/\
sType/ResourceEvent#xmlns:xmp=http://ns.adobe.com/xap/1.0/xmlns:dc=http://\
purl.org/dc/elements/1.1/xmlns:photoshop=http://ns.adobe.com/photoshop/1.0/\
xmlns:tiff=http://ns.adobe.com/tiff/1.0/xmlns:exif=http://ns.adobe.com/exif/1.\
0/> <xmpMM:OriginalDocumentID>xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8</\
xmpMM:OriginalDocumentID> \
<xmpMM:DocumentID>xmp.did:45EE4C8EF8E511E389A4C603292D00A8</xmpMM:DocumentID> \
<xmpMM:InstanceID>xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42</xmpMM:\
InstanceID> <xmpMM:DerivedFrom \
rdf:parseType=Resource><stRef:instanceID>xmp.iid:7447da8e-460a-46ef-bfa0-\
9cbe2f4af6ec</stRef:instanceID><stRef:documentID>xmp.did:93354278-eca8-4cb2-\
8e47-ef2010a719e8</stRef:documentID> </xmpMM:DerivedFrom> \
<xmpMM:History><rdf:Seq> <rdf:li \
rdf:parseType=Resource><stEvt:action>saved</stEvt:action><stEvt:instanceID>\
xmp.iid:61b7760f-fa88-476e-aad3-3917174bed42</stEvt:instanceID><stEvt:when>\
2014-06-21T14:32:05-05:00</stEvt:when><stEvt:softwareAgent>Adobe Photoshop CC \
(Macintosh)</stEvt:softwareAgent><stEvt:changed>/</stEvt:changed> \
</rdf:li></rdf:Seq> </xmpMM:History> <xmp:CreatorTool>Adobe Photoshop CC \
(Macintosh)</xmp:CreatorTool> \
<xmp:CreateDate>2014-06-21T14:31:42-05:00</xmp:CreateDate> \
<xmp:ModifyDate>2014-06-21T14:32:05-05:00</xmp:ModifyDate> \
<xmp:MetadataDate>2014-06-21T14:32:05-05:00</xmp:MetadataDate> \
<dc:format>image/png</dc:format> <photoshop:ColorMode>3</photoshop:ColorMode> \
<tiff:Orientation>1</tiff:Orientation> \
<tiff:XResolution>720000/10000</tiff:XResolution> \
<tiff:YResolution>720000/10000</tiff:YResolution> \
<tiff:ResolutionUnit>2</tiff:ResolutionUnit> \
<exif:ColorSpace>65535</exif:ColorSpace> \
<exif:PixelXDimension>449</exif:PixelXDimension> \
<exif:PixelYDimension>21</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta><?xpacket end=w?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{449, 21},
    PlotRange->{{0, 449}, {0, 21}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
/0FYKBYnh6E4vnPODPXSfqbp51t6smmvZfknTs62HnfYZXhAg6RTQ43ObKym
mBosFKcnTx4b2g/dAfXrTww7syd7iWhw25F1su6VAj3/C+F1lgwRuCiOzVsD
3f0TszBVbPj85+lQXAjn1XDuTZBj6sAEWJsp8gkhQWK/yYbm/HCil66rnYM9
A9nzo4mB4/Bm+jicpzAGE/2jU0XuQQn18TgJRU1M8nVgA5Z+TrI7PtA7OkMu
gjCVODMNF8ru/uHJ5no2FX2m2FoxuIods5i8zC9Xg84bu1CEvupODJ0pOsdB
JcgAcY5Dw0hngt7Bzizb+Qk2BOpLHlqZ6ZmTGnRFVPT88P7hWVL6UP2+inWs
v+dgNKiLRZayXj0YtqAt5B200AGxAjWYhB1IATB7r983CEfcrNbTSwatuT9B
3jqsuFlaHNc5C5HqMjVo6cmmvVryp+lbj/uZ4izbpakzubMQ9nVgcXJwojBj
7qej/uTB3gTMrM7Ms+032PZiAW9Urov1fadQmIK5af/gYG9P76hVOHNssH//
QKJXmy4uTB0/CHO//QMDo1PRhckZA6EYOjlNl9LRlWihYGr9if79+wcOnqlf
wZwJMjwH+gePnXEmhhPwcX9iYBiO8swQZNHb29vTA1NoSDZAyzg4OsX2o2vk
xH5I3T8E5yVfB3Y3rzhzsj/ROzDQ27t/dJbUaLC7H+RlHq7WI1ahpZ7NRbdU
7Kvj+xM9JKee3oNmm7uInTd2oTja303SLEzBZIZq1fzoILlh2NvTb04XwmwL
EzSHxm1JmEvDpHqgvwdmQGf/zm6f1tWAv8vqjMCkvHdgcH8vTMYvhblZWi9t
W+/BKVjAnIQOSPT3wp9hqCsMJejlftLw6JZsOFoXJoehjr1k8UMv5U3FcUdt
/gwcCKi8M9zbD6O7uSdn21QyzH+epac93WYXWM1pTA1oV0TtO95/cAzWKdAR
cDxgwWQVyboBpoQOXdzVt3/9N60HVwrrYf3fMBZnndn6zcIC/0vdQmG+RYpX
EOfisoQsaduP55tuBEX3/jigDtyb5VkX5wtr3Uqq17NNzRoVY2lWvNyso7Ft
KLT9zfOyEup/18ptdvkNNP77ypZMVvkqc9VvORud09r6DpvdnNlauxSOD4Ia
9mj0i63wG8pimwPWdjuyJvh7A2QrgT9SeJqgGiAIwkA1QBCEgWqAIAgD1QBB
EAaqAYIgDFQDBEEY61KDcQRBtjgbqAb/jiDIlgXVAEEQBqoBgiAMVAMEQRio
BgiCMFANEARhoBogCMJANUAQhIFqgLxouK578uTJYy8S0F5o9Zo980zUoHLn
mvX1V8CUdbFw11s97fhH7/wpfa3DnBFkTVKpFAyN2osEtBdavWbPbLoaPJz6
ZPAPhDfeeUcm/358cdX03l/f+MMbo5c7PNAIsiZwrXzw4MH/9yIB7YVWr9kz
m6wGP14cJULwp/FKuOFhxXsI/9y5/PVfRz8Z/Wv6cjH85MdrU3/9ZHR8auoT
+Q9yqAbe5a8+/+STT9Jff//wCU8EBCFq8OOLx3OoBpdH3wE1+Pxa0+qg8NWf
YKP8p4//RCcL6WsVrzDOpg+HSPI/vEPUwPv6I5Lqk1Hyz5++Lj752YC82KAa
rMQmq8H3f4Xh/c7lJjGo/BVE4I2P78DLH6fgJcwEqGi88TXdNPoGnRtULr9D
deH7axbRjsH06rcbEGQlUA1W4lmowR8+se5y26gavPM5Gd0Pvx+kasBEg64H
Kk1q8MY7H3300ccff/xJ+iKqAfJkwLi4/+LxHKrBv9+deoPO/ccvFyuVyp1r
F7+2rn91iIzzrwqV4tcf08v+tWufkzuNn3x12fr8ULhSeFggU4I3Pvr+rvfQ
u1u4dgdvHSBPBqrBSmz+N4w/fv/VIFUExjt//R42ffxO+Fb+KE3mDd61j2X2
8Z8Oyey+wb9Xrn012Njt88paBSFIW1ANVuJZ/frIq5C1DPtCIdziVfi3NE2b
1QBJ5eG8AHlyYFyUXzyeZzVAkGfF6mpw9e//unfPHkmS/uPR//f2xg1GPtv8
6T/u/uPf793+9l/Nb1vT3fjyP8JH99ZfwA9r7IhqgCDLgXFxbwVuZY927Xj/
m5ul0u3rF87NlO7dK12fOXvuwm366e1bt27fmjt3bgbe3r5+/VaJbCzdun6L
fuycfH/nm6lZl2y95Vw4e8EprZDt9ewfu9//+907TvasQz6FXK/PnLswR5Je
//Ltw3+/OXfhgnMr3JfL6vZ159y5C9dLUWWuOzRZyTl3wblwEna8u1LD7t1D
NUCQ5ayiBn9/f+f7f7/ZEIezf9658+1/+fPbL730vn331uGXu2K733z/zZ0x
6dNvP5V2Hj57917pz6+++tkcGYUn//hq10vSX/7uXPj0zZelw3/+456X3kzd
ucuyhdF/sz5UbzE1mP9y7x+/vHv3+uHurp001z3/8s3dW9nfd70svf/+nq6u
o/+42ZzVrc+OHoXK7Nj9Z5dWpuulPcNj05+93b3nj0f/KL20+/Dk3ZXlANUA
QZYD4+LuCkx8uPvDyULj7Xs7P5wswoux9/YMf+Mc3rl77Ca8u/L27vfs4uSe
lz+8fO3Entc/vUMTu/843P3h5OLd+cMv754oLt69e/Pwzj0TBZbtq5DtYpTt
zckPu9+bWJwfe/vDibt354ekw7PwmTvxavdQoTD25nsnIM2df0Cazw+/FGXV
/fuJwuL8+clPh97seunwtcX5w93dJ64tQqm/7z5coLu//eHY4uLdlUA1QJDl
rKIG5/+y56X3xsIhdefO5Ic736Pj+b++vvvTK7NEDcjA+2bPy+/B+D3x3qsv
7dw5FKnHzYn3qBrcHOrefYIkm33v5df/sRBm+/J70VC9c6dVDV4/PA+fzf7X
V9/8fxZvghqQlDfH3vv90OTQznpW0unzf3l591+ufX+imwx/UINXSWXcyd+/
/N412OH8p9KHE6gGCLIuVlEDGHfDr7/Utfv1t9/cvfP1v8xfObFn5+7XX9+9
+81P52GY7+zq2vPm67t3vv3pN2Qy8M1w1463L9cH4OwYLBUO/9vF2Ymh7p17
3tyz8/WhiUa20ss7omyvTMJcoa4GN4defXn3m2/ueWnn8FfXYN4AKwVIt/Ol
1zPfL5KsullWGUhPPnrz9ZdiOz+1Zode/T2VpjsgSl0v7d5D0ny1shigGiBI
G1ZVA4J7c37+phu9u3PTZa/nP+zaOXbtzh2XrQzufjO8Z/fQN00D8I7rsk/v
uDejZCtk29Cfw2SlcIdPTvZuenOn/ppuv3OnOW+3TbatoBogyHJgXCw+CQvn
M5nLC423Z/7t3y4WniinJopTk1PF357NWqAaIMhynlQNtjaoBgiyHBgX/3zx
QDVAkOWgGqwEqgHyooFqsBKoBsiLBoyL0osHqgGCLAfVYCVQDZAXDVSDlUA1
QF40UqnUzMzMnRcJaO9zGU8BQZ4xP/zwAwyNpxHS6LkF2gutXrNnUA0QBGGg
GiAIwkA1QBCEgWqAIAhjk9VgHEGQZ8RzqAY1BEE2HVQDBEEYqAYIgjBQDRAE
YaAaIAjCQDVAEISBaoAgCAPVAEEQBqoBgiAMVAMEQRioBgiCMFANEARhoBog
CMJANUAQhIFqgCAIYyuqQbXsZO1y+CYoWXap6rlOwVtxB5qmk94IgiotACD/
BH7Af1qyrRJs8PKGqtuVaicZkjy9cqns0Vo4dilYK3UpF1a1WimVKn5TKazh
Tc2vBVZSzxT8DiuDIKuwFdXAt7W4ZodvPEvRrGrZSudWHu80TQed4Rmi4tZq
BUOQ0uVa1ZaVDP+xrSs5r+YYsmFXOsiNUEirgqQaqqRlSp6l67m1dvRpVasl
XRQU3VAkNc/pB2m4arG/9fSSbKIWIBvC86wGfiEtS7IkCEaunE+pSRgYgWOk
HD9vxGIxWRblpA0jHS7UQSGtmQXQBEUEVJtOExpvF0iaWq2cUhVFliC3wM0o
siwryfIveQ3+lTV2rSfjveKl5ZigWV7BVE23YqdIHpKW92u2oVoVV43HRC37
M9QNsjbnc4YqK5Ks56pBXpVkWRJlVdcUUZCSlZqrCFp9/Hu2YVgVPkMnZdg+
tMlM2R7UFjKUxbhoOB7Uw3Sj/RrV9h1d0Gz2N/wwsFW9E6FDkLV5ntUAho8G
F2MYU6LxjS5qZOSQkz8aDgFcw+1FMtJ9m2yxdTnNTRAabz2mBjWv7FppLSam
FnOaoKbLfrVaMru6tEIlvABXcoaeTidTmbRhpFNaKr/IZguBrUvJPFEDMjfQ
LL9GBizNPfBKecsURcPzLTqX8A1JLTFhWchJcro+16dq8ENrhqRNhm5VbI3W
FuYGul3KaIbdWPjUq/3zMjWwdFHNdrQIQpA1ec7VwLCDuhroTrXmZWWdDQcH
Lv6GKDs/WqrhsAFi0Zl8oyb1tx5JA/NsSTRcNyPEddjsl2w5LoHAVD03KcaT
eTrdruSEWAxel7NaLC47fsWQdHJxLySheJvqANMEOrQhm7ImyFYpr8vJSqg5
XlJJwgc0WVkVVDZWg6BKm/NDU4a6aldBAHRQA1Jbn9wGIOLmGKAVZLdqEPzS
qPYiiJ7u+PQva6OTUpS0W0OQjeB5VgMY410xUZEELVsKCqYgSPBaSsJKIRmL
S6osSroF83OpS75yyYDB5eVNmKArspKlN+sab29dhjSFXx1ZkHVdFqTUbEaT
NV2RtNnZtKzosFjIuGx6UFJiAgz5WikV69LhXzej0WLlXLkKY1S3yYSFqkGS
qkHFEEVNV0UpBXMDqgY+UwOHJitbBq22qGZcNsb5DAumEofX8TgsDip2UhBg
zUFWCpCtCYschSSzFi/Vq+2V0nEx9Sv9G85myGTJriHIRvA8q4Fn6VquVIum
2tXwjn9I44Z/ldve8j1A/S1Lw2VR9aOEge+v/v0AX1KwPGnVX/2LAlKH5r24
OjZVNwiCplRRvfhqh+2I3pMJT7Lc6fcbCLIaz7MaBCXHWfMruReeQiaVc7GX
kA3geVYDBEE2E1QDBEEYqAYIgjBQDRAEYaAaIAjCQDVAEISBaoAgCAPVAEEQ
BqoBgiAMVAMEQRioBgiCMFANEARhoBogCMJANUAQhIFqgCAIA9UAQRAGqgGC
IAxUAwRBGKgGCIIwUA0QBGFsDzVYd2TGVbJqt2MYgbEDynZaN46n/9UwrfLK
qQIn5/jhX7qXlbbYg48bcRjb1W1ZM1epiW2mS8uepdxRLMiVqQa+R1njKdMr
UM47az3eGcNKPku2hxqsOzKj7+gpp2Vb3jRgcLbd0dJJUKTlsF14oCJSuuC7
aXm1yI8VQzYq4V8YAXlFSoYC5K8WMnJ5M1cuotYI0ULfmToJ1+hZBh/Fab1A
lqJqGLqeW5+khKXnM5k1nu6MYSWfKVtLDfjIjL5jpsjozauKeX+FyIxwLTRk
SRQldhaWcgaJvmjkbmbUWEzQM24pS7ZISup2KSPEYnHJuHWtTUhHxxC7RFkU
IJ/FlGqUycBM/mX8c7aL+09LJbmodqXq6KIO+4SRVkiVs7oMGfFllWk8pkr4
t1bOamq2zMdhjEqXM66/ejNrgZtUIFPZdGhFPVtRsz4RiiyJAyVqbCYBDSc7
6tmfHaMrJkIHJu2KH4aSLORNjUSGhPxLGTUJnWbLJGBcJamZc1GPsUu6bahh
XFmuIK6voLEkviU0FvqfxLeUBKhqvfTL6SQ0pV4c5FQwFVEiHZsNp0YYVvJZ
srXUgI/MuEBin5EohiQk2QqRGctZFQYa7MhOZhjUiumQWa5vqwYZrVW/UnBy
qiBZnm8Ioh3U2od0NNQsnLteFq74hZScKniWptR3sWHUZWFMKbJZcEi8SK8e
+bHqpsQonjJXVpMakJCMhYCPw0heE8XJiXK6smozy1lF0HOurceVHCsFxheM
d4uGiE9JkhVOBMJ4cGEH+hY0JAwlGTiSmASthHbptqNC4+xkV5eaL2RVw2n0
GOvAJCiRqqpJENd6QfW+qrqmIKXckiXGtQVHj6tRVf1GNLrcfb44UgXoWBKJ
kqoMhpV8tmw5NahHZlyA6XuGDKZomLSJzOimFa1pig8rbxNmFh6LzFgL4OqY
ypfg4gwjVI+LTrXWNqQjnMak2ApRAzJFlxVFy1Rr4S6gBno2X3LdEomi3KQG
fp6EhKN58GVVkkrKq7G/MJpEI+/zcRhBakjpVVsUUz+u2swSZArTdig6Cixb
MGUYpHT9EqTEuhpAWUk/jAzLgtvaYShJMjlPQ4pyBi7LXk6XRCVp5VKSKJkk
NmXUY2E/aE6kDPWC6n0V5JMCiAmtDelGPapqEJZOYlMuNhXH4tL6NHp1DcNK
Pmu2lhrwkRnhzJbigqLC1Sp1f4XIjJBGFkRFkQ1yTy+AeayqazBH9WGpHo/r
WVgxSIquCTHRhhlsSoZp/9x3bUI65pMSCZgoiGmXDLOsHFPp2RvucjkNQ0hT
SbhIulIg53c04y0nJZGEhDfnubL8pChmSr/Qv9UKDP50iY/D6EPpIgn+DvP5
1ZtZqDiqKGuammT3OspZScn6FfibgfUBqFQUL943ZUHSsz+S8JF1NWChJKug
ANBUWM24VSJjMTlXqzrxmFiocj1Gc8knIRfoTiXz7Zf1gri+WkjCeknTtJT9
C13UKAqtalT6tyQ2ZVNxLNBtQGpCa4phJZ8pW0sNWiIzkgCF3KftIzOSiItV
Lo1fT8OiG/KhFZuiIi4L6cgSBl5Bl9RCtXmXKNiircXFpHPfSUncLb5GyMeg
Oahk+BemOnq51hyHkS99jWY2QkrykKjPJn+drbaGg2zKc8VvCRo9tgpcbX2f
LcW0uJqrcofKb+rnFYrDsJLPlK2lBs9BZMbANpOZ/Iq35Sv5nGlmTv/NzOYr
K6VZjpfP5SsbPAby2dw6arDRVCtOzlnlO9YVwbCSz5CtpQYIgjw9UA0QBGGg
GiAIwkA1QBCEgWqAIAgD1QBBEAaqAYIgDFQDBEEYqAYIgjBQDRAEYaAaIAjC
QDVAEISBaoAgCAPVAEEQBqoBgiAMVAMEQRioBgiCMFANEARhoBogCMLY8moQ
PbyUPTKUhgareOEjO6vBys8FXUYjDtpvJio3ehQqDVfmL69S2Up/c+O2Wy67
Je8JYqKVrJzrh383mDCsm2+l9OQqIatW2LmTnix3HMyOp6WxfKetN9be8n6D
A9XmdAkaj3cN2j2NljsDy2nyEN9lacIcVuqWTk+89qW3TdnBueS72SNaqvy4
aeNWVwPPCgNz2Jqg2Z5jSJKe1BVRSeXXjE3WTBQH7Tfj2yywSFg33zEESUvq
sqimA75KNODagmVoqSQJLcDHRIsCw5Vz6ZVPFC8pa6Xw70bD6ulbspJZf8jF
jnqSRFpZdwi41sbynbZarL02gfZIVm7ZkrtixpUH8N7NaKIMJPlHu/p5U1I0
RVLsB56pSLIii0r60SNXl2VVlWJd0vfzafKse1HO3Xvs24ZiFpqHF8mhL8zh
J0NOekvh9nxynyAripJ0gwq/vYVqydyxQ3+4tGTp+yRZko1vl5bKeiIBu+qZ
wgo7sW55sPxT30nuIrsaNx49NvsSmTuPWtJseTWoB+agYU1I+A/SiVZsh+F7
1koP58+n1GQ+AFU2Uk4UgGyGRT4inVZ28wVCvhBdPYK8Rs8FUcvC4Min4Z2k
GNalpGZ5NddUDCcI8maSnpl+GBEprBscmiQJSRIYoupyVWIB1/yCZedtM533
uZhoLgsM9+WUQiK76bOzjShmUBMVVKUWRWwkf0+bJBhcNavIll9z0/qf/8//
xNfqk/HPW+Kp0fHjt+yVKf2S0UiQOCVpV2k9oRpQpcz1y5oEaLPXsyTIm6Q5
Hg2BB4NAJNIrC4KWcbkgdz/SnvQbudW8MA5jiozdvKmKkgQtu/gwOhxpEotN
1nMBH3KukIbRQg6NriuSIOm5qh9G2OTC0hldOwRZFIzcPRprLw+f1qPgVRxT
IgmT02GgvRlTpcEg3KAe75IMHDh/qnlZNMqPmfA14sdBH+rOQ58cwQp96Htg
vCI5j9gZkVRN19LknL9EgnAZ32ZUYYegFR81nWlcDotJ8RWJdJp65cGSre9L
OfdoeX4y0djefJ5WjMQrO8RjDx7a+97NLi1Vk30fuj+BRKfvPSSnADT2w32k
sRd/ahKhRrecvffIzb67jxw1yNyzPno35Tx8DCKTeaWrSzg82SIH20wNHBL+
Q47H4maeBTxqPzegiVmQkSgAWRQHDSg72ZTJCMMDsqskiyPm/OJIguqU3KQo
jn+la9l8RomJSdtOqRkaFLlFDUCQ44IkxuNqOs9XiQVc4xtSj4lWDwzHgo/4
fBQzz8vnSTEVmHhYFfbXMZR03tHiMd0qpFVt5puWWt1siacWdkLzXrPXwiBx
GdCHBaparBo0xgFRRZiL552UIkCfhbUtGHHFrlUdRbe4IHekJxcLXG4kthQf
ec0ISOlqGAeKhn6j+df4kHO/sFZXHRqbyU/Kxg3aWD7NTyRkWxiJb5GFzGtE
wZsxRIWGvaiGDQny0g4pV6zUe69x/vi22CXoSU2Ukvdp/LhiyRJf0W7PQafF
QRLn2LApZRJymg68wJRVuJ7ACbdLUnU5Luj2QzsJYldxcmaakYOS/Hw9hwdJ
WS8vsZggFTebSpopEPiW7fzuZ/+LZFhXSNzPBxbUf2mJdWApZSRNQxY16yJp
7A0W8u8nbscfLpBuWaq57yaMB48f0KO2S7celG3TSJmaKJg3KsauhP1oqaW2
W14NLJ2dhCyiH5yktu+nJYmGTbTqZ/5yNdDheg2SXg9AFsVBI8fcMnXdMEgs
YjNcfoXXdBJ40bpvS4LmuEDJ/8WB65SetjKGIspGOMn0cixAs5cjxxfyTzpe
IUmK4qvEAq7xalCPglRPZtOgZs1RzML0OU0FPWN/gwKJdpSyrKQsSjB78Vtr
tSyeGj2hm/f6NZ9kQeJI3LcFWgGmXaQyRJoKKQUEzc3qBlUDw/areRoJjtaZ
C3JHevI+n5tXMRQSe9HWG5HXnPpKIQr9FiUOQ8797DQyJ2qgJMdoY5vC0nGR
+FiQSi4K3qIhaeWl6PCxbg8qWRjxqQLrN7LBgSEMPegorFaakvm2ET8uoyh5
uCTbumy6S54jC6q7tMR2k0HBogtrBS5CyXw4FXQdy7IBmPN51Vo9h3108gm7
+GTU32fX8ryxz3Tvc9v53e30f9E0XRW64vrYF7ICc4Mg2ae6j9iupXd36VnS
2Lk7NOQfX+7CBeiWR0wNbHLU5orkqD1gc5+qYxzJ/QBqYD1caqntVlcDMnOm
EctEOVWJLqa1ckaU0oHvkJhlCkz5Cq07FUxBIKHUJBioYQAyFg2NXkt8r1xh
eOGiOYy5HCRFCQZBTqcBxvQsnEbJeMxwq+W0GFPr/eCZML4UmEGrMPKi/F05
rrq/NKrEAq7Vq+RxMdFqYWA4t5LTu+LK6dz/1Yhi5ltC3ICpPVzuo78kWpMU
E0DeckpMyZEYcy21ao6nBiehSFY4rXuVScxV6Ekl7Ydh3dgMIVQD11ThMqhA
8Y5HakvUwBD1PGRLEjSC3P1Ae/KfjdxqQRoqryhxEnUuyKiwflBEQXb8WloS
QHCzmkTW7FrmZy7kHEx3aeZsmgRqcGQ/bSwfls7PpwQoRCSR+NiUzM83ouDB
SgcmijDld3+l/XnihCKrugprjmnWb0EpC/tCrbPurxasc8htAVjRlOvx425m
NAkyA7Vyf0kJO2KCrCpqFhYakUJW7KREGknnCfX4cRxuI4efyUpBhQIV52HZ
6JNUEkIv+dMSXSmE29us9VMfpkArLH2fCJ0EQ9pJJaArYXqaKT7Mp/sSrLFN
6xPoFnJ/gHTLHThqfeyoXXmQ0/fJqgoFXXzwMJnos5cVt+XVoFZbKfRYc5JS
OmkkGaYVtP2+YT1fQawSqqzDBI2Aa+0/DQPDwb+/tEYxq2e/diHrxW8fva5e
6ur9HAW5i3rSb4oet0KEu3BL1JLqSoVwjW1KE8Z0K4HKJPPRp1xm0VdOtALs
fft+42PM+VEKLrPV27xyAi4Hvhd8rrhOTr1GXL7mHFeoXyPUHd9Zq58x20IN
tiodBlx74ihmLxDVUkpPFjb8m9YXDFQDBEEYqAYIgjBQDRAEYaAaIAjCQDVA
EISBaoAgCGPLqwHvYVzrC/4OrYW1wCuVyhvyRb7vOoUOvkPccMpW2vrnr532
TOc+0M3qGdtMlzot5reaT/1yqVxZv52yXU0Kdn71msBxOTt9Ju1siD1u49nq
auBZOvMwOpqgWV5k+vOZTYanQ2uhl08JgmwYqqznfkO/hhUgvjp3Q8609RC6
I9v1TBs3X6c+0M3sGTg6Evsp0dr8FvMp/WGkqmuynP4Nh8l3zBTp3MBKZ1bT
SjgufUlvqawltNLSSgbEZ8mWVwPb0LMl4lqEM3naYaa/XNaIxWKynv25kJYl
WRIEI1fuzFoYpCTJinSk2mqpU2VRUNIF/jVveYvSq+PjUQXy6bTjVewU2Sxp
cOVg7j/mVWxpS3132+MMgLx9stlKyVjuuGTuyLY98/UXzM3nFkxFkKAFEjSt
Mx/oaj1Tb1FTzwRukpgeZdPxOukZqJJIq0StYmVN1Jb/4mp182mt1tRvqkSt
gUrqJ852yvfhYy8nKdlG5iaxUkqKCbk1KnPvMf+64ZH86XFkvcz+TRG64tJ4
cTFtpD2uDo9B+pQ+0jeiVnwcHhcoqJDcZzgP3bSW2qgnamwQW10NfCcpiLKm
aWIsZjhe6FOgNjqvbgzkXC21NayFxGxeH6XLLHWQpqSI+iL3ukItb27JEuNa
Vpcj50GjArr1gyEqLgwn4lok3hYt68FlRF727AU72j3gDYCLnH3yZ+51dClb
7rhk7sj2PVN3R1KTF/FtwbyhIx/oij1T4Vrkcz1zI6sIes6FKZmSszvoGVal
wGYTFSo+yx6AsLr5tLXfVDLSLU0yr39HbKd3iO00x/Xn+e+Iey28SFMrZUDM
WdTKxlWm6XXdNnh8TGLGJWKRTNLHLFTq5s2l0LzpMecUs2jR4/KInrTkSQh+
ueB6z2AVuQpbXQ2Yma5Wo04cehCpM44cFz/8NPS4eR1ZCwNTErP03Ar8YJml
LjTTLXCvF/MNy5sVlt5cAeuGIekkywKx9TV5FZup7x602Anr9slF7nV0VVnu
uGTuyPY9U3dHGhrpmApVg458oCv2zI9ci3yuZ67CpVvP0Y4JOukZ21CJfTuU
piAltleDVcynrN+WmvqNjEFz7ltiOy1S22mlqT+l0KFc9X/+Bl4vEccbVRqu
Mk2vqW2QNOqH0yQ9lRL6dBGf6dIiXwfPq1u5LaIGCSNPnulA1CDtPodLha2v
BqFxDBaacIIw059V/tmE6xtMRx29KyYqEvG4dWgtDNysRLx4ElwD/FZLnROp
QeN1hbO8VfLEI6zISrYUVuBHWoqb0ahjUs6Vq01exZa2NHZfaBgAefvkfd5K
Ge613HHJ3JHte+b2ZeaOhBZ0kSqJaVhedOYDXaln+BbxvVTxHJVMTtRkruR1
0DOs3CCsdgmG3fK7ASuaT69/Q6ydS5wNE2reJcCqRSBTGs522mxHtclEiKwb
Ug70kERf6m61xleGf815JH+tWy9/cdO7dojmlR+i8yGsw8NoIuQYxDPKjssS
ffBRMu+7Zt+uZP650oStrgbLqX9z4AdV+gSJEm/+68z1V+WtfJ08js5vY8Gr
NpnLVsqmxVzJFbe2MXMlVnBHVuuuyKBKpgFl/ruGDnygLck66pm26dfuGTLN
Ml2adt3m07BEz1J0izd+rnToq01PPuzg9OB2aKQP2tWhdUdXSej3HrtqQq8s
1cowR80+X2a07acGPEHJcZ7gWZxbnzXdkWXnSR5Sumnks7nf+iVc+KDX5ws4
LpevXshRs6Xvrfu5kE+b7a0GCIJ0DqoBgiAMVAMEQRioBgiCMFANEARhoBog
CMJANViFZjffb86s8a32Ck+5LTtZe5UvoKtONsucfXwAx2YzJsErl8pevc5+
qVTyq5CKJqJJA79UKFVKLvmOcT1uQWSbg2rQjtBn1+Tme+K8mMEtsOOxOP0B
oafHBavZrZI3DYf89lWLa+3DwbCc9JiQ81sDOFIzJq2lDHX204ogaYYmMUdV
SRMlIwXNMC5Zpq7KcUHWDfP6ZUPS04ZCrH/rcQsi25ztpAZP4gH08xqJcajZ
lWrd5nY7F/rsvuXdfJwjjzrvJEkQU3mfd9Vxrr2KlVRl8oPe6xlFiMWlzJwl
xWJarlKrZGIxAWSh7ob79urfBGIwNK5/T8qVpNAASMMaigaJNArNkaDALhKd
pDWAIzFj0tFsxEVrISupzG5c0US97NtCl9r4CU5gh6YD37VdN2dmqSYRt+D0
8+enQzaf7aQGT+ABrJbMri6tUCHDuR5dsW424d185YYjb5wE+CN2QBoDkXPV
cWlOJYV40iae+dDg5tmaYSYNM2saigx6VeMiBl4xBNEOaIQ18gQGagDMqNRk
CINa+6dr0uYEzKzUEsCRehVJGGBJz/5i60JofwidTZV8Whbikk4HfvswtcQt
ePrGc+enQzaf7aQGT+YBrHqgADByc43oitXQZ8e7+UoNR94ic94xGwvvquPS
BKQWGTUuZ0KDm2dpSaeUkWJKxkrpFlWDesRAPS5CHs0GQEUlqwLfkLTroRWo
GqlBawBH+hwD9oaY8uioJlaFSvQz+rQkZr2V1aCdWxB5AdlOarBODyCs36Xv
ZtOyQh59k3F/5aIr+sxn9y3v5uMceXnyqBAFZv667fGuulojzbQhy7quyIYd
uGkhJprnaXDkagnmIXka552PGJhPybBSmPuuyQBIQheSwIB5svwXSAhAuMjD
dL5dAMf6YA5NefTZI+VqJSfFSWxEkT2aoL0aELfgJVMS8O7BC8/WVoNlBrfa
ejyAYaRBzrfGh/prF96u4cirVmnUb+qtabbQ1dNw9r1gpW8RgrbB8risqo3X
jdB7qwZwbA3Nt4Y5kbkFn0M/HbL5bG01eKYEJcd+Rj7ADgM4dgJzCz6Hfjpk
80E1QBCEgWqAIAgD1QBBEAaqAYIgDFQDBEEYqAarwPxAK31BF1SIO+i35E/i
o3UWxwy9RcgmgGrQDs61pBmKKGiZQksK8gMkWTNUUVCzQetHxqo/+Y+iwlHz
0WIYtGutCqG3CHn6bCc1eBquJRKChJgF1BIf1avmKoLOpgXUCuHoSYcN8/ul
TGhBusYHfaNDvppXFfN6lPkCMR/dDj1N1y9qEqBl/rWtB8qrRyJ7DsN1IduG
7aQGG+5aYiFyyC+ZBTFrc3ku5CQ5w/SEBNFyzjL7Aw2u4TMLEh/0bSGKRiTE
QUOizFl8NOZp8m0Sxqs5shjngcrVI5E9h+G6kG3DdlKDp+JaIqIBMwHtNp+n
V1IF5hQmg9RetBSWLbEDeMyCxAd9W7B0NUOiGFE1iDJn8dEiTxMLj7iKBwq9
RcjTZjupwYa7lr5juQii6cBY5qJ61WqlnEGDlQkKCYBOXUWKGBPJRT+yIHFB
3zybxC9TYf9UPfNFaj6KPE0TTA1W8ECV6pHIXLQXIU+Nra0Gm+1aas6zKfRY
0BJMrDXoWzXg9ySZ181HzZ6mth6oeiQytBchT4+trQbPMZ0EfevcfFSPRIb2
IuTpgWqAIAgD1QBBEAaqAYIgDFQDBEEYqAYIgjBQDRAEYaAarMIqHsYgWPcT
ETt3LNbQtIg8C1AN2rGmh7FiyEals7zKubQThUvz6oHY1qwBmhaRTWc7qcEm
ehiJ86jSlJtvKpIky4KoOl7NSRHzQQADf9pRiKVR/zZDwqWBKKzLtIgB0ZDN
ZDupweZ5GGmCis/n5hky+Zkx/UFyhexInIgkNJtNQ7TUw6Wty7SIAdGQzWQ7
qcEmehipGnh8buEuPlMDXYUJBLwmakBrVQ+XhqZF5LllO6nBJnoYw7kBl5sP
kiKpiigoMLUvmEpcUqR43HC8Sk7viisTXx5i4dLWZVrEgGjIZrK11eDZehib
IPcVy9VqfR/e30hsiXy4tI5Ni+hYRDaTra0GzxGBk3NWV591hUvDgGjI5oNq
gCAIA9UAQRAGqgGCIAxUAwRBGKgGCIIwUA0QBGGgGqxC/ZcAzT8JaCXwVgvI
GJQce63HpYb2xmo5TR60zD2IeYV90eGIPA1QDdoRehjt6KfO9RfLKaRVQVIN
VdIypbYJ6E+RV/3ZQN3eaBuKWeBHuWfpeq6NVxIdjsjTYDupwVPwMDLXErMv
VUxVUWQl4wYVx5QlSVKSZWphqA/XUtaQZcgiVa7VIDeogKznfnGMrpgoCULS
rnAuxYqVVKFgPeOWs5G9URW6BO369SxJImmORwM2WffrKaGBKilAtSv/xLCM
yIazndTgKXgYtVANdDV3Py/FpJxbqdY8Q5QyhVJOk/R/jEtyuhFBxa8UnBzM
Faz7DrMo1qpRQEbfkjXepXgqKcSTthvUltkbq56bd1KQ0PKoGiw0UoIEZAt5
U5HNWQzLiGw420kNNt7DqMspEuDIN0TVhTEXVLKaKKVmDFHO5l234Fb8f0YB
GWtB8GtaFlP5ElzqoSBQCZa/F4VkVZe5FPMZNS5nGvZGkrJSSClqOu9mdYOp
AVllRCk1Uc/mye7lCjockQ1nO6nBhnsYfyllxLgIKwvZsKoVS5FVXZX0XNnN
aKKsaqoBl/SyZVAToqhmbmZUCTITYqLtV7OaJMKsXsv8CFf8SA04l+I0LCp0
XZENu0IDMpL6k5QV11QlVVcE4n+k9we+rqf082lokqZq2dItDMuIbDhbWw02
w8PIbSPGxOryl7TQ8A3/5QO/J19sVLHoBW9vjPJeYZewLAzLiDwNtrYabBfW
ZW+sYVhG5OmAaoAgCAPVAEEQBqoBgiAMVAMEQRioBgiCMFANEARhoBqsQTUM
uFiyrVIQ/l1rhyr/79opf3sdPdcprPZVI3okkU5ANWhH6GEkIU7iXVKG/Lwn
CpKyopkx3NPW4yoJlOBZRlv7IZfUEuJ6c2b1cjslbxqOT+xa6Vx7ByUBPZJI
Z2wnNdhwD2NQyamaoanU3Uz9jOxvxU6RciQtX8lraqZaq+jUUZjVdfs7XdCo
GlDTQSlHXI2KkatyMRZJ7JW4mJzKinHD46pUL/fXhlexGia28ynioJSMXBmu
6IYsQfFp6wuBBHk0bl1LazDMw+bLGdf3C2mSATVOokcS6ZDtpAYb7mF0TUXN
2ClJzHm8GniGqLiQCzEfXjZBSQo5MSZkC46umD87TWrgQFLT8as1PsYi1NN0
q3CpJmrQHMwx9E42vIqFMDFkWHattBYTUwtZlY7uWpXar+yATEigUFuT07DZ
z4lymkR/zHq1gBgn0SOJdMh2UoON9jB6SUlOZjIpTVLSpTC4KvlbMSTiGKoV
SCmljCYIStbOwnVZS7s1LwcDED70ciQgI5mwOKYgGHOcezE0ShM10L12wRw5
r6JfTyyJhutmYHHhpBUtrL2nx0UHRIFKEA0QCQXaopj6kTNOokcS6ZDtpAYb
7GE8dOR/VXMk32pelpIWSIDtOfSvCwpAYifKuTKsEjIwu4BJtxaL0VtvnimL
UAlBUPN+kNUVVQc1MX0uxmJjgAtkbsAHc2TeyZ8bXsVIOgJHFmRdh49TvmfL
ggjLBsMq51MyrBTmvjNAl3xovgjzfFhWVDzOOIkeSaRDtrYabGocRvYVQPRF
wDKfIU+z77G+7q6uWaVGudWgtQJNX0FU6yU0VaTarlrokUQ6Y2urAdIZ6JFE
OgHVAEEQBqoBgiAMVAMEQRioBgiCMFANEARhbAM1KFk51w//dkRQsuyVf9X/
fBD4vleprP2FZK1Wtq3Sr4HneT7sAn+rQcHOb8iPiZnXqdr8lNjoZbXpgbGN
rWHitr6n5UeqxbfFu6jWtGKtzm/cfQV8K6UnI0vICj2zcYVBC+rfBFUrjuOu
/rWQ72Y1LVV+vGqioJRb+eTf+mrgJWWtFP7tcI+cQn7wsz58x9yEX+xHpXiG
KGrJpCIKhr2q9YkaKM7csAxdFWKCqhu50i9WOlN+0l8TMxsUgXqdziQVSSG/
soQT0dJlCf4z4HCXk+SlqOfKXt6UREkSNRAg8mB5SZLkVKW972nZkSpnYjFh
7hGXgotSx6xYT9DtHTm5Vsd39JTTbjv5GflDOtzsqGeKjxs9s/SE5bWHtMAN
wh4IXJP9omZFqmZfInPn0WpJaqQJ7x6xlriK0vwfsg1bXg18S9Es9pdZdURR
0pO6LAhaxq1VbE1W4EBl3B9TqlGmv9VPTn0jkygJkqiQ87ZuVmIDqGAqoiSL
gpSFy2LDB1TJKEIsLmVWmH/U46wFzdYhRVEhLyVd4F+zXQI3oxBHU7Jc9bM6
ealnrkelLCSVFKmPmxJUizMTBTlDlRUJCqqS016F0ReLxW1SKT+lpGjlvLSR
9mq+qUhkxMqaoclx8sPIGhcwjnN11TxmnMynjG/nMswGVSLGCuJ1Ype8vKHm
FmxZycIpl5TU69dSchJaUVJBLnQFzlHyi8ncDUPSIR9HV+iPFcqaqE3zpifu
SIWdltJ0QzMgNbFuAdqV7wzQB+glI1cOCmnNnI065H5akaBXs8630QENyOEW
xf/9P/9n1YTKVNOqXoCalDJCV8PJteyUKHLB7zze55VPqck8sasYKcfNqF0x
QR932XGiHjHRyN2B7Tt2iONF0idte8alQlG3qj2qH7ifHkPnk1zk5O1i/bgT
ydXUzOMl6npbWsrqen4xOmOLj/x8Ou3czyi7uuLS+KyVNPNLkL6PedwmYS/z
w31wMsDBvfFoqVrKvNLVJRye/KedSiSIpW7u4RI0f19CVM0bS1Rd9yUSshgX
jStLFfvIPlaKl3mX5l98kDM+3OpqUIGrolVhf8MYZwUjrti1qqPoULGg7OYz
uijodiElpwqepSnWoqWoWVJVTTKvf8eZlUiGtq5kK+T01nMV3gf0C7P8tCVo
xFlr2sXR48Q8VVJEfZF7zXKp5DRBTZf9atU1BSnlliwxri2EpfhJSYCxHIeW
VKq8iSnwSnnLhHPTI4UacEY6YbBI4nii04gKfeEZEjEhQn0y8CaratYP9YBx
fzrxLw1Xl1eJwsypOS+0QdW4eHC1akEWVLdiqQaZUEGy8Qm4gvukkspf/m/I
wSdeacP6geXjaKJOvQ8pSTp9o2F64o8U26AJsuWYopSuEhcG6UCPdDuxiymi
sUitWKHTikyWlDzJqXFAPThU5BfXJU00Kg8dRcnQkpqcXPVT4hXFXqKnBG8f
u8gdrEswIG32W26QLJs1lohaRiUnBNQ2oZUfNraHPbOrqWfYb7YcI6GYzsMq
c4HdoAduBupfIFpRheO+S03fexhG6zD3afaNnNglZG9c0RXz0RJrYAIa+MAm
ffWQ9YBnfahbSw+tfe9mlpYCY5fk3IcprrO0ZO8Lr/W+sSthP3pgJN51IYX9
UV8y/8DW302X2HUfxj95CXODj+ylqJRd+kWW/xIJNV7a6mqQ01Q4huwv9eD4
1TycBg77ib6fT0patgxXYRLnyFJkRdEy1dAoRE54c+5bzqxUY8c0Or0rTT4g
iw2BdviNOGv8LpGfEUZNcoF7XZ/6+yVbjkvfXkwKIFTU0eSFpcDQTnlw8aVh
3Tgz0S0ygkp5XU5WokIdMop5NWAv6qEkVepXSBpEDcKAcYsXP2m4uryKoSRp
OEhiz2Q2KNo5zOtUMSSJjAafXQEDOjcw63ODXDg30Otzg+gREEGL74k/UjX6
o3Ji88qYiiA7i+GAokcwCNWA9ljUIaFk8QeUmrBIAQWTXE6ToVZ7+iui83iJ
ObmWnxJ88Dv+YH2nQ5c8Bt2U6amiGg4bRKW0ouZgIu2DupbImVM/22nP/LTE
egbGF5kbhMoXWtXOkAM3Rw/cIhHnaIJOjvsrkk2n582utyJr4D3awAf0JKQ9
8HCJnrRLRBPsJTrwrQdz8isJVdOtcHXgkY0PfzL69J+goEIyoTsPoi4ix/qj
d0k7AuvDj+yH+WQflFKkpbD8a+Uju+Txv21pNXBVGabH7C915ZBDb4h6HuYG
cIIRa7OkarIgGeTkz8oxFS5MviPFBJi2CzCmalXOrERHAfUq0uFT4X1AgZsW
YqLp/KDHiTNaiBv3I/MyHP16nLWfuV1g7UwHHVODxusKec6JMQuTdU1XJK0Q
kGU4VEFL2b9GpbCT34MLeTLPmYkWyf0EHRYIoBVBRoW5viLCaPJXVAOHaw4X
MK7ccHXVgjSsjRQlTgLG1ZgNyg1qzOuUVWJdMVFV1EzBh9WxKIn0vkElKcFL
ct/A5+4blLj7BvSSrV9qmJ6ajhSQB72jg6cM85ZTE0wNYL4uQL1EAZrKei/g
OqTCvOrRAaUmLOZZtV/ZIbnRWph3ci0/Jbjgd6Wm41swaQQ9QUo65J5JPK5n
i7Q7HdI9sqiY+Vp0HSHnktK1o03PkNrUrWr3OfcZrDJ2SWQ5OPW36LizQVzJ
7NihPVjytK6u9J3H0MBE2MArD2gDoQd27RBNi3TRks/UIEgm+uyfrki7JCNp
JM3cAzo3IBsfLrmZI7uYpe7e40YXQTl2ctcusrCAlcIjKKUvLOURy//KdSOR
2OJzA2YPWiHEGRuoQfhZ4BV0Sa0/+icIuAeCrb5/PWFAboFXV3h8WSOTttah
tnlzLia/YUNq94C0hompyme+7lvZnBeKK7zaHDCufTy4WlOncbu0+06B+Z44
09PaR6qRR0v7mzukfkDrlO2k1HxbeK1uaXFpLW8SfcOF1luz2vzpVOOtapz7
rP5ydffa8ga2PSVALftAH5bKR17ZxeSAL759/k3HjyslzL+6xdWgcwLbTGby
6MFZB+v1OvEw39NmmJ6qJdNIP/F3KFuYaiWT1HXdSG/c1+UvjBogCLIGz6ca
IAjyTHje1GBz5RBBkAbPmxogCPLcgmqAIAgD1QBBEAaqAYIgDFQDBEEYqAYI
gjBQDRAEYaAaIAjCQDVAEISBaoAgCAPVAEEQxsaqAYIgW5qNUoNnLWwIgvxW
NkoNEATZxqAaIAjCWK4Gt2/fftaVQhBks4GB36IGFy5cKBaLz7peCIJsNjDw
YfjzanD58uVr164963ohCLLZwMCH4c+rwY0bN3CxgCAvGjDkp6enYfjzagDb
r1y58t1336EgIMgLAgx2GPKO48DrWjOwBbaDUMDMAZYSKAsIsi2BoQ0DHIY5
LAdgDrCwTArqggBzBlhEXLhwwUIQZJsCAxyGOQz2laQAQRAE+P8BfOBRvQ==

      "], {{0, 277}, {346, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
      Association[
       "XMP" -> Association[
         "BasicSchema" -> 
          Association["CreatorTool" -> "Adobe Photoshop CC (Macintosh)"], 
          "MediaManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:207e84fc-3ad5-4a48-87e8-16b6386bdb6d",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]], 
            "DocumentID" -> "xmp.did:FC1EEBF6F8A711E38E9BE7CFC9E9A75A", 
            "InstanceID" -> "xmp.iid:FC1EEBF5F8A711E38E9BE7CFC9E9A75A", 
            "OriginalDocumentID" -> 
            "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"], 
          "RightsManagementSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:207e84fc-3ad5-4a48-87e8-16b6386bdb6d",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]]], 
          "PagedTextSchema" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DerivedFrom" -> 
              Association[
               "InstanceID" -> "xmp.iid:207e84fc-3ad5-4a48-87e8-16b6386bdb6d",
                 "DocumentID" -> 
                "xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8"]]]], 
        "Comments" -> 
        Association[
         "Software" -> "Adobe ImageReady", "XML:com.adobe.xmp" -> 
          "<?xpacket begin=\:feff id=W5M0MpCehiHzreSzNTczkc9d?> <x:xmpmeta \
xmlns:x=adobe:ns:meta/ x:xmptk=Adobe XMP Core 5.3-c011 66.145661, \
2012/02/06-14:56:27> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#> <rdf:Description \
rdf:about= xmlns:xmpMM=http://ns.adobe.com/xap/1.0/mm/ \
xmlns:stRef=http://ns.adobe.com/xap/1.0/sType/ResourceRef# \
xmlns:xmp=http://ns.adobe.com/xap/1.0/ \
xmpMM:OriginalDocumentID=xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8 \
xmpMM:DocumentID=xmp.did:FC1EEBF6F8A711E38E9BE7CFC9E9A75A \
xmpMM:InstanceID=xmp.iid:FC1EEBF5F8A711E38E9BE7CFC9E9A75A \
xmp:CreatorTool=Adobe Photoshop CC (Macintosh)> <xmpMM:DerivedFrom \
stRef:instanceID=xmp.iid:207e84fc-3ad5-4a48-87e8-16b6386bdb6d \
stRef:documentID=xmp.did:93354278-eca8-4cb2-8e47-ef2010a719e8/> \
</rdf:Description> </rdf:RDF> </x:xmpmeta> <?xpacket end=r?>"]]],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{346, 277},
    PlotRange->{{0, 346}, {0, 277}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7012960964596295`*^9},ExpressionUUID->"d6812737-cf5c-4008-9580-\
67884ae6f96a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.7016901875860085`*^9, 
  3.7016901898521385`*^9}},ExpressionUUID->"e5de5bc6-3358-4f24-b013-\
01f08a732fd4"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`a, StandardForm],
  ImageSizeCache->{7., {0., 6.}}]], "Output",
 CellChangeTimes->{
  3.701690192781306*^9},ExpressionUUID->"d4681219-a478-4863-8f20-\
db05f05a42a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"x", "^", "2"}]}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"x", "^", "1"}]}], "+", "d"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2", ",", "\"\<a\>\""}], "}"}], ",", 
     RowBox[{"-", "100"}], ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701532287713236*^9, 3.701532421272875*^9}, {
  3.70153245371173*^9, 3.7015324557438464`*^9}, {3.701690340205738*^9, 
  3.701690342236854*^9}, {3.701690578580372*^9, 3.7016906292902727`*^9}, {
  3.7016906804591994`*^9, 
  3.701690692313877*^9}},ExpressionUUID->"89918b57-3526-4e98-848e-\
3b3a91501f36"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    2, $CellContext`b$$ = -100, $CellContext`c$$ = -100, $CellContext`d$$ = \
-100, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 2, "a"}, -100, 100}, {
      Hold[$CellContext`b$$], -100, 100}, {
      Hold[$CellContext`c$$], -100, 100}, {
      Hold[$CellContext`d$$], -100, 100}}, Typeset`size$$ = {
    360., {101., 106.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$5549$$ = 
    0, $CellContext`b$5550$$ = 0, $CellContext`c$5551$$ = 
    0, $CellContext`d$5552$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 
        2, $CellContext`b$$ = -100, $CellContext`c$$ = -100, $CellContext`d$$ = \
-100}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$5549$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$5550$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$5551$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$5552$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`a$$ $CellContext`x^3 + $CellContext`b$$ \
$CellContext`x^2 + $CellContext`c$$ $CellContext`x^1 + $CellContext`d$$, \
{$CellContext`x, 0, 10}], 
      "Specifications" :> {{{$CellContext`a$$, 2, "a"}, -100, 100, Appearance -> 
         "Labeled"}, {$CellContext`b$$, -100, 100}, {$CellContext`c$$, -100, 
         100}, {$CellContext`d$$, -100, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {188., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7021616685510406`*^9},ExpressionUUID->"9f9f54e0-7a5e-4d7f-a875-\
3e705881e3d7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7021616471818185`*^9, 
  3.702161647188819*^9}},ExpressionUUID->"d09d36c7-edb0-4597-bdf3-\
02354eda9913"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7016905013579555`*^9, 3.701690501359956*^9}, 
   3.701690567490738*^9, {3.701690641049945*^9, 
   3.7016906423220177`*^9}},ExpressionUUID->"a740a828-856c-4e63-b7f0-\
f0a0a81d07d2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7016906400038853`*^9, 
  3.7016906400118856`*^9}},ExpressionUUID->"0277771b-6d30-4ae3-b270-\
9da6a1d9b60a"]
},
WindowSize->{1104, 835},
WindowMargins->{{307, Automatic}, {Automatic, 62}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 278, 5, 30, "Input", "ExpressionUUID" -> \
"6c4e6ad4-5296-408d-98b9-80878fd88079"],
Cell[861, 29, 130, 3, 30, "Output", "ExpressionUUID" -> \
"2e529fc1-8adf-4bd6-9b42-fdba3527cfe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028, 37, 187, 4, 30, "Input", "ExpressionUUID" -> \
"0a43853a-58ea-42ec-b543-69ebe7b993f3"],
Cell[1218, 43, 265, 7, 30, "Output", "ExpressionUUID" -> \
"1a3e0d75-1616-405d-8f72-ab7ed6fa5283"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1520, 55, 222, 5, 30, "Input", "ExpressionUUID" -> \
"00658160-138f-49f5-bbce-fceec8971111"],
Cell[1745, 62, 673, 21, 30, "Output", "ExpressionUUID" -> \
"d3167b53-2756-4b4b-8bf5-c1d8c7259745"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2455, 88, 210, 5, 30, "Input", "ExpressionUUID" -> \
"0da84099-33c7-4a63-9fe5-71f8e23d672e"],
Cell[2668, 95, 187, 5, 30, "Output", "ExpressionUUID" -> \
"f55ba5d6-e4f3-4a51-a4ec-9ea5e86d909b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2892, 105, 177, 4, 30, "Input", "ExpressionUUID" -> \
"eccccb52-389c-4c04-9a4f-1b8f398b6469"],
Cell[3072, 111, 130, 3, 30, "Output", "ExpressionUUID" -> \
"320e76d9-bd62-4537-b690-2a0657ef56e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3239, 119, 254, 7, 30, "Input", "ExpressionUUID" -> \
"2739d7fb-4fe4-4e94-8472-2c2c699bc342"],
Cell[3496, 128, 132, 3, 30, "Output", "ExpressionUUID" -> \
"098ef718-899a-47a5-a961-b6973653ab28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3665, 136, 218, 5, 30, "Input", "ExpressionUUID" -> \
"a329c4a4-4d62-4cae-b22c-d2e41f236f14"],
Cell[3886, 143, 187, 5, 30, "Output", "ExpressionUUID" -> \
"0ac4ce1e-77b5-44ef-9030-890582f72dd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4110, 153, 204, 4, 30, "Input", "ExpressionUUID" -> \
"fb1f0b48-7473-4467-8aef-7c3037692b0e"],
Cell[4317, 159, 130, 3, 30, "Output", "ExpressionUUID" -> \
"7cc55ad9-c6a1-4f87-b7f5-a449bce52f09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4484, 167, 207, 5, 30, "Input", "ExpressionUUID" -> \
"52d874d5-083b-468d-9f35-5539d94d43ab"],
Cell[4694, 174, 127, 2, 30, "Output", "ExpressionUUID" -> \
"29bacc51-9964-4e5b-9dfe-c0a9bd6f8837"]
}, Open  ]],
Cell[4836, 179, 221, 5, 30, "Input", "ExpressionUUID" -> \
"f5c720ea-7897-4427-b2ad-0d64b3bc7065"],
Cell[5060, 186, 205, 5, 115, "Input", "ExpressionUUID" -> \
"df21e4b5-e50f-4e64-8884-1a8576ea14e0"],
Cell[CellGroupData[{
Cell[5290, 195, 129, 3, 30, "Input", "ExpressionUUID" -> \
"49f87b53-4a07-4e17-970d-bacebf070f60"],
Cell[5422, 200, 130, 3, 30, "Output", "ExpressionUUID" -> \
"2b1d9c73-3611-4a19-9cf7-0a1d56c26333"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5589, 208, 131, 3, 30, "Input", "ExpressionUUID" -> \
"0ba657ab-a26b-4b6a-bcb2-44eeb08b5cb5"],
Cell[5723, 213, 132, 3, 30, "Output", "ExpressionUUID" -> \
"a564112c-129c-4172-83e9-cbcc71a8e3d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5892, 221, 177, 4, 30, "Input", "ExpressionUUID" -> \
"f8acf390-1a5d-4475-9704-bd647f4ecf30"],
Cell[6072, 227, 132, 3, 30, "Output", "ExpressionUUID" -> \
"12dc0e6a-0f2c-430a-bfe1-051b7125b12b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6241, 235, 129, 3, 30, "Input", "ExpressionUUID" -> \
"a71bbd07-f185-4199-b761-d08779a12579"],
Cell[6373, 240, 130, 3, 30, "Output", "ExpressionUUID" -> \
"ae76b686-19b3-4411-8215-b524281599bf"]
}, Open  ]],
Cell[6518, 246, 179, 4, 30, "Input", "ExpressionUUID" -> \
"04549c8b-41c3-468e-b181-c48cccbe7471"],
Cell[CellGroupData[{
Cell[6722, 254, 246, 6, 30, "Input", "ExpressionUUID" -> \
"2ad4a373-59c5-4b76-8546-c711cb4f6522"],
Cell[6971, 262, 187, 5, 30, "Output", "ExpressionUUID" -> \
"05cceafd-2e99-474a-9acc-b2a0a06739ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7195, 272, 184, 4, 30, "Input", "ExpressionUUID" -> \
"65abefba-9ad1-497b-b6bb-d719b300e338"],
Cell[7382, 278, 404, 9, 21, "Message", "ExpressionUUID" -> \
"e2b5bcc5-eef5-4907-8f6c-559efee9d4f6"]
}, Open  ]],
Cell[7801, 290, 296, 7, 30, "Input", "ExpressionUUID" -> \
"6b06187f-10c0-4888-9d42-d949847b3517"],
Cell[CellGroupData[{
Cell[8122, 301, 187, 3, 50, "Input", "ExpressionUUID" -> \
"8e062f0a-5206-44c5-ad62-b2597ca9385b"],
Cell[8312, 306, 132, 3, 30, "Output", "ExpressionUUID" -> \
"6c9fb240-76d6-40e3-aa9d-01cee370286c"],
Cell[8447, 311, 187, 5, 30, "Output", "ExpressionUUID" -> \
"7febd607-2a95-4eff-9065-0ab6f09bf705"]
}, Open  ]],
Cell[8649, 319, 177, 4, 30, "Input", "ExpressionUUID" -> \
"ee45c0a8-2d94-4536-af57-a9ab31fa39e0"],
Cell[8829, 325, 234, 6, 30, "Input", "ExpressionUUID" -> \
"c3610b10-5c42-491a-9601-58f3c2f3154b"],
Cell[9066, 333, 346, 9, 30, "Input", "ExpressionUUID" -> \
"c475c27e-d072-4fc1-b593-06602807ffbf"],
Cell[CellGroupData[{
Cell[9437, 346, 215, 5, 30, "Input", "ExpressionUUID" -> \
"6e20499b-ef84-4ece-a36a-f300aad01e49"],
Cell[9655, 353, 192, 5, 30, "Output", "ExpressionUUID" -> \
"c7a445ce-8da4-4e90-b574-9b6ea5fa9218"]
}, Open  ]],
Cell[9862, 361, 230, 6, 30, "Input", "ExpressionUUID" -> \
"369f8c80-3a91-4ae7-a3f1-01dc04aaae5c"],
Cell[10095, 369, 247, 7, 30, "Input", "ExpressionUUID" -> \
"215ed9fd-fbca-4877-939b-477f19c982bd"],
Cell[CellGroupData[{
Cell[10367, 380, 185, 4, 30, "Input", "ExpressionUUID" -> \
"9b7351aa-862b-483e-8074-fe57f9e01954"],
Cell[10555, 386, 135, 3, 30, "Output", "ExpressionUUID" -> \
"81442709-900c-445a-9be1-7ca6458c6231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10727, 394, 185, 4, 30, "Input", "ExpressionUUID" -> \
"64cc9c41-5918-4b70-93a3-e417c7b6e532"],
Cell[10915, 400, 221, 6, 30, "Output", "ExpressionUUID" -> \
"a0041cb5-51bc-4b37-a62a-ca65ca58f92c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11173, 411, 185, 4, 30, "Input", "ExpressionUUID" -> \
"bdbb063e-3342-493d-b118-9cd9c5394c7f"],
Cell[11361, 417, 130, 3, 30, "Output", "ExpressionUUID" -> \
"5e6d2f1d-21e1-4120-868d-360316478b48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11528, 425, 281, 8, 30, "Input", "ExpressionUUID" -> \
"3068dd19-602d-4672-bac9-2a346f91dcdb"],
Cell[11812, 435, 272, 7, 30, "Output", "ExpressionUUID" -> \
"b0848cf1-aa70-4a85-a281-e1961ce56f84"]
}, Open  ]],
Cell[12099, 445, 449, 10, 30, "Input", "ExpressionUUID" -> \
"b9720a8b-b77d-4a0e-b012-e6e9f593ac43"],
Cell[CellGroupData[{
Cell[12573, 459, 442, 11, 50, "Input", "ExpressionUUID" -> \
"08e4cbce-d488-4970-b8bb-267b51cf5afe"],
Cell[13018, 472, 218, 6, 30, "Output", "ExpressionUUID" -> \
"426e6605-f208-4ada-9ac7-c83c3d330ae9"],
Cell[13239, 480, 512, 14, 30, "Output", "ExpressionUUID" -> \
"04f3e1f7-41fb-4550-adbc-de0e77441586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13788, 499, 351, 10, 30, "Input", "ExpressionUUID" -> \
"ccec01cb-ccae-48b0-b299-7a9c8352d1db"],
Cell[14142, 511, 219, 6, 30, "Output", "ExpressionUUID" -> \
"ee7ea613-21ff-47fd-a0ce-9aa042c876f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14398, 522, 189, 4, 30, "Input", "ExpressionUUID" -> \
"a5c12ea5-5366-4625-b6c2-6cd43db5de0c"],
Cell[14590, 528, 132, 3, 30, "Output", "ExpressionUUID" -> \
"6bec0f33-de83-4f4f-a2f8-f9a244632d40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14759, 536, 189, 4, 30, "Input", "ExpressionUUID" -> \
"c6e92d7a-d17a-420b-b3a8-f78579c90c5b"],
Cell[14951, 542, 624, 17, 41, "Output", "ExpressionUUID" -> \
"aa8b82f8-d46d-4def-bce4-ca2120c90b41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15612, 564, 129, 3, 30, "Input", "ExpressionUUID" -> \
"b3516106-ced9-4624-9d7e-30c8b78e5892"],
Cell[15744, 569, 624, 17, 41, "Output", "ExpressionUUID" -> \
"b8adcf07-1fb1-4128-b91d-bf4403c24cba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16405, 591, 131, 3, 30, "Input", "ExpressionUUID" -> \
"5a776084-accb-428a-aee2-c0c24b6ad748"],
Cell[16539, 596, 624, 17, 41, "Output", "ExpressionUUID" -> \
"3ab049d2-4e93-435c-addd-962e45c95a8f"]
}, Open  ]],
Cell[17178, 616, 185, 4, 30, "Input", "ExpressionUUID" -> \
"69ec8560-47bf-4834-9efa-a3907ddaace2"],
Cell[CellGroupData[{
Cell[17388, 624, 129, 3, 30, "Input", "ExpressionUUID" -> \
"1c9ad3d9-ed39-4fed-8767-cf5a01755442"],
Cell[17520, 629, 623, 17, 41, "Output", "ExpressionUUID" -> \
"24a6714b-ee94-494a-a01a-4ba3489bc004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18180, 651, 131, 3, 30, "Input", "ExpressionUUID" -> \
"5450ecea-a206-474c-8d28-3042173c76ed"],
Cell[18314, 656, 624, 17, 41, "Output", "ExpressionUUID" -> \
"d8e8f109-1b58-41e8-9c60-6910c5904916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18975, 678, 257, 5, 30, "Input", "ExpressionUUID" -> \
"e9ab5703-9557-426a-8e7b-fd3f503ba212"],
Cell[19235, 685, 416, 10, 21, "Message", "ExpressionUUID" -> \
"66b9b0c5-120e-4203-81cb-822ad593806d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19688, 700, 129, 3, 30, "Input", "ExpressionUUID" -> \
"e456fa07-ce44-4dee-81f5-3d1c2a382ba1"],
Cell[19820, 705, 626, 17, 41, "Output", "ExpressionUUID" -> \
"47565110-c559-41e2-af48-54f7c019c1c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20483, 727, 129, 3, 30, "Input", "ExpressionUUID" -> \
"ac923ac2-d67c-4a14-bbf2-c2ff1c25b70e"],
Cell[20615, 732, 624, 17, 41, "Output", "ExpressionUUID" -> \
"092a1658-003f-4d2b-8c24-11d716188682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21276, 754, 129, 3, 30, "Input", "ExpressionUUID" -> \
"d499ee58-09b9-4a96-8133-ce5fe980f9ce"],
Cell[21408, 759, 624, 17, 41, "Output", "ExpressionUUID" -> \
"bd7e0476-2819-4686-abe4-553aa84a4773"]
}, Open  ]],
Cell[22047, 779, 173, 4, 30, "Input", "ExpressionUUID" -> \
"cad648cc-02ce-4849-8c70-e12ee35bec16"],
Cell[CellGroupData[{
Cell[22245, 787, 185, 4, 30, "Input", "ExpressionUUID" -> \
"fdd027f8-0d94-41eb-b9e6-e4aec99c6f23"],
Cell[22433, 793, 132, 3, 30, "Output", "ExpressionUUID" -> \
"f2cc98b6-10c3-4215-9876-82c0192c5f13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22602, 801, 395, 11, 30, "Input", "ExpressionUUID" -> \
"ed8c7389-6331-4410-aeab-90555084bca6"],
Cell[23000, 814, 235, 7, 30, "Output", "ExpressionUUID" -> \
"6e3c335e-6caa-4b26-8dc3-e525f3f69ac2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23272, 826, 379, 10, 30, "Input", "ExpressionUUID" -> \
"3e97aa01-8c75-4d47-99ad-a50ef3410984"],
Cell[23654, 838, 130, 3, 30, "Output", "ExpressionUUID" -> \
"0e92fed4-28ec-49ac-834f-61dfeb910668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23821, 846, 131, 3, 30, "Input", "ExpressionUUID" -> \
"144c33ed-1bbf-4ee5-bfdc-7a63936d2edc"],
Cell[23955, 851, 130, 3, 30, "Output", "ExpressionUUID" -> \
"050b84ff-4eb5-45aa-ab4c-0f612dc5213e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24122, 859, 184, 4, 30, "Input", "ExpressionUUID" -> \
"6a09feb9-a699-4ca7-bfad-dd532d303719"],
Cell[24309, 865, 161, 4, 30, "Output", "ExpressionUUID" -> \
"e5d1c3b6-5c9f-4eb1-b21c-0b05a96c3a42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24507, 874, 446, 13, 30, "Input", "ExpressionUUID" -> \
"82e0cc49-3615-4519-9d0a-cb5b93713d70"],
Cell[24956, 889, 255, 7, 30, "Output", "ExpressionUUID" -> \
"7a6d5b49-1dd3-406a-aaa9-378a91cb2f93"]
}, Open  ]],
Cell[25226, 899, 352, 8, 30, "Input", "ExpressionUUID" -> \
"5851ebb1-72d3-437f-8215-d13f2121a7cb"],
Cell[CellGroupData[{
Cell[25603, 911, 205, 5, 30, "Input", "ExpressionUUID" -> \
"23fff7c0-0f70-4888-a28f-aca8127fe758"],
Cell[25811, 918, 185, 5, 30, "Output", "ExpressionUUID" -> \
"cdceb4b8-3e4f-4132-9cd6-7028225462ed"]
}, Open  ]],
Cell[26011, 926, 184, 4, 30, "Input", "ExpressionUUID" -> \
"ea0f0780-ec29-45bb-b784-d5ccb1b1be34"],
Cell[26198, 932, 131, 3, 30, "Input", "ExpressionUUID" -> \
"bf3c88a5-e0d5-4571-b303-4a4d01706fd8"],
Cell[CellGroupData[{
Cell[26354, 939, 205, 5, 30, "Input", "ExpressionUUID" -> \
"0faa5949-6d1d-4cae-a7c9-ab6f0acc6875"],
Cell[26562, 946, 130, 3, 30, "Output", "ExpressionUUID" -> \
"9625ce57-9958-4b20-9edf-39844142c688"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26729, 954, 207, 5, 30, "Input", "ExpressionUUID" -> \
"0fcf1da5-32ae-44e8-b945-e0d08aa0bcd5"],
Cell[26939, 961, 130, 3, 30, "Output", "ExpressionUUID" -> \
"518dd81f-66d2-430c-95e9-d1d6b13ef730"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27106, 969, 338, 9, 30, "Input", "ExpressionUUID" -> \
"2f67b8cd-3f5c-4766-b074-0c39b41743f1"],
Cell[27447, 980, 253, 7, 30, "Output", "ExpressionUUID" -> \
"9d16b0b1-8655-438b-a0a3-f04b72c31424"]
}, Open  ]],
Cell[27715, 990, 304, 9, 30, "Input", "ExpressionUUID" -> \
"69e688b0-53aa-415b-b706-5c56a5e274b9"],
Cell[28022, 1001, 203, 5, 30, "Input", "ExpressionUUID" -> \
"72210c80-3333-4a99-9a7d-ecada4a29fe7"],
Cell[CellGroupData[{
Cell[28250, 1010, 202, 5, 30, "Input", "ExpressionUUID" -> \
"05340725-6adf-44a3-a51b-232943636965"],
Cell[28455, 1017, 130, 3, 30, "Output", "ExpressionUUID" -> \
"81e34afe-62ff-40bc-8ab6-89cd9ba5a73d"]
}, Open  ]],
Cell[28600, 1023, 436, 13, 30, "Input", "ExpressionUUID" -> \
"c58b6412-32d4-41fe-a8b6-f0c1472d0878"],
Cell[CellGroupData[{
Cell[29061, 1040, 252, 7, 30, "Input", "ExpressionUUID" -> \
"556b2bf2-8a76-433b-ba72-2306c1d1d24b"],
Cell[29316, 1049, 225, 7, 30, "Output", "ExpressionUUID" -> \
"9f0d4bff-33fa-41e4-aeb4-b6877e237c92"]
}, Open  ]],
Cell[29556, 1059, 408, 9, 30, "Input", "ExpressionUUID" -> \
"918ebe61-c8b4-4330-9245-a7f2db9a8cff"],
Cell[29967, 1070, 259, 7, 30, "Input", "ExpressionUUID" -> \
"af4eed14-e2a5-477f-b1fb-7d6d4cec3d41"],
Cell[CellGroupData[{
Cell[30251, 1081, 208, 5, 30, "Input", "ExpressionUUID" -> \
"b3f03341-fd67-4802-84be-412000ac8d19"],
Cell[30462, 1088, 132, 3, 30, "Output", "ExpressionUUID" -> \
"b2c4eeeb-6aad-4089-942b-2484c5461f44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30631, 1096, 212, 5, 30, "Input", "ExpressionUUID" -> \
"526f7e4d-96e8-44fd-94ce-1b75840430a6"],
Cell[30846, 1103, 132, 3, 30, "Output", "ExpressionUUID" -> \
"0aec8b48-26dd-44d2-b784-3bcaa4227734"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31015, 1111, 212, 5, 30, "Input", "ExpressionUUID" -> \
"f0762bad-1e74-4c87-80ed-477648dc8a7c"],
Cell[31230, 1118, 187, 5, 30, "Output", "ExpressionUUID" -> \
"585e2cb6-8ebe-47d5-995c-091df4d9a1ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31454, 1128, 272, 7, 30, "Input", "ExpressionUUID" -> \
"2032eacd-e764-4ea7-9e82-df969b80cdef"],
Cell[31729, 1137, 171, 5, 30, "Output", "ExpressionUUID" -> \
"d3fe1db6-03d6-4ed6-b51c-7206c32b413c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31937, 1147, 249, 7, 30, "Input", "ExpressionUUID" -> \
"fa3b2841-5355-4fca-9f86-c62e48f7faba"],
Cell[32189, 1156, 132, 3, 30, "Output", "ExpressionUUID" -> \
"935f3652-7f1f-4aa3-924d-81b851091a10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32358, 1164, 340, 10, 30, "Input", "ExpressionUUID" -> \
"99e513d9-b5dc-4045-8430-1dffffe7f48d"],
Cell[32701, 1176, 303, 9, 30, "Output", "ExpressionUUID" -> \
"9e24fc16-3baa-423f-9172-d320a68149ac"]
}, Open  ]],
Cell[33019, 1188, 206, 4, 30, "Input", "ExpressionUUID" -> \
"37e6be63-7710-4201-bd31-c7bdd871209f"],
Cell[33228, 1194, 202, 4, 30, "Input", "ExpressionUUID" -> \
"19ee3ccc-ebfd-433c-8534-7ee6eb06b45d"],
Cell[CellGroupData[{
Cell[33455, 1202, 131, 3, 30, "Input", "ExpressionUUID" -> \
"efff9590-b8ee-403e-875c-a0fe4ce94058"],
Cell[33589, 1207, 187, 5, 30, "Output", "ExpressionUUID" -> \
"b00a72ac-52e4-42be-8fa6-42931f35162d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33813, 1217, 129, 3, 30, "Input", "ExpressionUUID" -> \
"0f466301-d6a9-46de-ab53-ec3b61c101c6"],
Cell[33945, 1222, 130, 3, 30, "Output", "ExpressionUUID" -> \
"39bbb438-50b1-4e31-90f7-2e27ce30af5d"]
}, Open  ]],
Cell[34090, 1228, 180, 3, 30, "Input", "ExpressionUUID" -> \
"96819460-d17e-41bc-92aa-5a63040b1e73"],
Cell[34273, 1233, 188, 4, 30, "Input", "ExpressionUUID" -> \
"b7862501-d852-460b-9aab-f54caf8ab5c6"],
Cell[CellGroupData[{
Cell[34486, 1241, 131, 3, 30, "Input", "ExpressionUUID" -> \
"e6fdcab0-f9dc-486a-b105-39f0017b2922"],
Cell[34620, 1246, 132, 3, 30, "Output", "ExpressionUUID" -> \
"b9a279ee-bf1d-479e-aaab-93bbec12a8ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34789, 1254, 129, 3, 30, "Input", "ExpressionUUID" -> \
"30cd7ec3-3c06-4e34-b2c1-5ba373f52ff3"],
Cell[34921, 1259, 132, 3, 30, "Output", "ExpressionUUID" -> \
"8f24c9b7-e2fe-4ca0-b1aa-972ff5cd00d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35090, 1267, 360, 10, 30, "Input", "ExpressionUUID" -> \
"49b1826f-de59-419f-be68-deec4627588f"],
Cell[35453, 1279, 235, 7, 30, "Output", "ExpressionUUID" -> \
"1191782a-952d-42c7-8d50-66f89d1739e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35725, 1291, 428, 13, 30, "Input", "ExpressionUUID" -> \
"9a88f474-aecb-4182-bad4-aced670b8aee"],
Cell[36156, 1306, 235, 7, 30, "Output", "ExpressionUUID" -> \
"c48a9e10-23af-4ed8-89d4-b0cd0607358d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36428, 1318, 270, 6, 30, "Input", "ExpressionUUID" -> \
"d32c8b70-51c5-44d9-8f34-bd0510e4754f"],
Cell[36701, 1326, 256, 7, 171, "Output", "ExpressionUUID" -> \
"3aa6d900-cb6e-4429-b87f-fcaa7aa3fc25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36994, 1338, 276, 7, 30, "Input", "ExpressionUUID" -> \
"ae382e7f-848b-4231-9bbf-d4ad95a4d3a7"],
Cell[37273, 1347, 313, 9, 30, "Output", "ExpressionUUID" -> \
"1fd4373f-6125-4f8c-bb94-135fa87f597c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37623, 1361, 244, 6, 30, "Input", "ExpressionUUID" -> \
"f49f3d08-2c8b-4ac5-9082-a0c280f96d56"],
Cell[37870, 1369, 308, 8, 30, "Output", "ExpressionUUID" -> \
"2248cd6c-93cd-4c6e-aac1-de37d610298b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38215, 1382, 311, 9, 30, "Input", "ExpressionUUID" -> \
"ea5db55f-a716-4efe-ac80-d9e42536f786"],
Cell[38529, 1393, 391, 13, 30, "Output", "ExpressionUUID" -> \
"f67a79d0-2099-4066-b6b2-cb2c2d735aba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38957, 1411, 267, 7, 30, "Input", "ExpressionUUID" -> \
"64b5dfb2-8bdb-4ca2-a8c6-46debf7e76c1"],
Cell[39227, 1420, 192, 5, 30, "Output", "ExpressionUUID" -> \
"09380e2f-8707-4964-8d48-57f09a5f47fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39456, 1430, 304, 8, 30, "Input", "ExpressionUUID" -> \
"46a7d7ee-9526-4ad9-9e9f-0bba7873634e"],
Cell[39763, 1440, 147, 3, 30, "Output", "ExpressionUUID" -> \
"47bb6330-59c5-4529-be98-e87f0c4de69f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39947, 1448, 278, 7, 30, "Input", "ExpressionUUID" -> \
"ecb92e7c-9f74-4179-a181-f70bfbe14a07"],
Cell[40228, 1457, 7964, 160, 72, "Output", "ExpressionUUID" -> \
"e8b02a15-5c49-4ef1-86ff-9722b5ee361e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48229, 1622, 182, 4, 30, "Input", "ExpressionUUID" -> \
"95d483dd-199b-4ead-9872-b987c9f06792"],
Cell[48414, 1628, 149, 3, 30, "Output", "ExpressionUUID" -> \
"ddc38c70-9637-498e-88f8-0d4564d30810"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48600, 1636, 186, 4, 30, "Input", "ExpressionUUID" -> \
"1b97d402-2701-4c24-a889-49ff63935909"],
Cell[48789, 1642, 185, 5, 30, "Output", "ExpressionUUID" -> \
"63d06ab9-bc87-42f7-a1d8-39c29f8b93e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49011, 1652, 332, 8, 30, "Input", "ExpressionUUID" -> \
"f22dfe63-477f-4ca4-b61c-663872374fb0"],
Cell[49346, 1662, 206, 6, 42, "Output", "ExpressionUUID" -> \
"69fd6513-c998-4980-b70f-9457752cea43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49589, 1673, 193, 4, 30, "Input", "ExpressionUUID" -> \
"b04b7fa1-adb5-4315-939d-92cc6423cbfd"],
Cell[49785, 1679, 934, 21, 69, "Output", "ExpressionUUID" -> \
"9b40a5c2-76a5-414b-a281-5f08a4b20c81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50756, 1705, 571, 17, 30, "Input", "ExpressionUUID" -> \
"1c353b83-67eb-43ad-8487-81c61dea5f00"],
Cell[51330, 1724, 845, 23, 243, "Output", "ExpressionUUID" -> \
"a29b4155-a903-4eed-b233-bde8096a75be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52212, 1752, 164, 3, 30, "Input", "ExpressionUUID" -> \
"93db6091-4bcb-4113-b1ea-b5559aab821d"],
Cell[52379, 1757, 139, 3, 30, "Output", "ExpressionUUID" -> \
"99e0d0a3-01de-4c49-a8bd-a5a445356f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52555, 1765, 129, 3, 30, "Input", "ExpressionUUID" -> \
"a1d7c351-730f-4ac2-a424-1e30c8aa80ec"],
Cell[52687, 1770, 132, 3, 30, "Output", "ExpressionUUID" -> \
"f0e22d3d-5592-42d0-8843-0e5a10a66699"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52856, 1778, 129, 3, 30, "Input", "ExpressionUUID" -> \
"e864802d-1de7-45be-aba7-4e7f2eec4658"],
Cell[52988, 1783, 130, 3, 30, "Output", "ExpressionUUID" -> \
"3ee81d87-7f6d-42df-93e9-05a0ec7b5a7c"]
}, Open  ]],
Cell[53133, 1789, 210, 5, 30, "Input", "ExpressionUUID" -> \
"e002920f-d349-4246-90d6-186e177e36ea"],
Cell[CellGroupData[{
Cell[53368, 1798, 129, 3, 30, "Input", "ExpressionUUID" -> \
"ed8f5314-8930-4339-9605-f3e1c6f124a7"],
Cell[53500, 1803, 132, 3, 30, "Output", "ExpressionUUID" -> \
"8c5b02a0-abfe-4e59-b614-148fe2eac220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53669, 1811, 131, 3, 30, "Input", "ExpressionUUID" -> \
"caf6bb3d-ac98-4f5d-abf6-96b4ce450770"],
Cell[53803, 1816, 132, 3, 30, "Output", "ExpressionUUID" -> \
"c7fa9a26-5866-4174-95cc-8fac9f7b1329"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53972, 1824, 129, 3, 30, "Input", "ExpressionUUID" -> \
"f91ac882-8a3a-486f-af6e-409fac2e7f5e"],
Cell[54104, 1829, 132, 3, 30, "Output", "ExpressionUUID" -> \
"dc1a4b6a-3dca-45b5-897b-f904a1e19a53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54273, 1837, 129, 3, 30, "Input", "ExpressionUUID" -> \
"9161b6fb-2cad-4cd5-a0ad-1376121354b1"],
Cell[54405, 1842, 132, 3, 30, "Output", "ExpressionUUID" -> \
"29780db9-7a7d-4e47-aa6a-72c9fb933652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54574, 1850, 496, 14, 30, "Input", "ExpressionUUID" -> \
"106abed2-b054-4e9d-89b4-2fd0c83267d5"],
Cell[55073, 1866, 825, 24, 330, "Output", "ExpressionUUID" -> \
"6373fa5f-0b67-4885-9edc-d64d4898c00b"]
}, Open  ]],
Cell[55913, 1893, 370, 10, 30, "Input", "ExpressionUUID" -> \
"2c01d0b7-1d0f-4de5-825c-9258a64c0ee1"],
Cell[CellGroupData[{
Cell[56308, 1907, 368, 10, 30, "Input", "ExpressionUUID" -> \
"2e0415cd-7b41-442f-966f-360af3503240"],
Cell[56679, 1919, 830, 15, 21, "Message", "ExpressionUUID" -> \
"1e16c472-6779-4b92-9934-292ad2010498"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57546, 1939, 320, 9, 30, "Input", "ExpressionUUID" -> \
"4216ad2f-ebb0-42b0-ab75-c287a567bd3f"],
Cell[57869, 1950, 495, 10, 21, "Message", "ExpressionUUID" -> \
"cd8f8fef-936a-4776-9dd8-3bef201c59a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58401, 1965, 328, 9, 30, "Input", "ExpressionUUID" -> \
"72506f9f-da42-4de2-b7b9-6f4b396875eb"],
Cell[58732, 1976, 495, 10, 21, "Message", "ExpressionUUID" -> \
"6630bda1-78aa-417e-a7b6-d771bfbc24c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59264, 1991, 330, 9, 30, "Input", "ExpressionUUID" -> \
"48a5342f-b087-437e-8a80-6d8813e51058"],
Cell[59597, 2002, 23774, 408, 228, "Output", "ExpressionUUID" -> \
"272ee502-08d7-45df-bf27-278fded77c03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83408, 2415, 407, 12, 30, "Input", "ExpressionUUID" -> \
"062c9d03-7b66-4203-b744-85c9352cc29c"],
Cell[83818, 2429, 10729, 194, 243, "Output", "ExpressionUUID" -> \
"684682bb-ef87-4d89-badf-686686f202f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94584, 2628, 247, 7, 30, "Input", "ExpressionUUID" -> \
"14e23027-7254-4197-90be-236aa0ec2b0d"],
Cell[94834, 2637, 152, 4, 30, "Output", "ExpressionUUID" -> \
"8a8e5fc9-52b6-4583-bbc2-d3cb1cd6ae65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95023, 2646, 308, 9, 30, "Input", "ExpressionUUID" -> \
"ceedbbd6-12b2-40e8-850f-f891600620ed"],
Cell[95334, 2657, 200, 6, 30, "Output", "ExpressionUUID" -> \
"fad7384d-1074-415a-b099-ac08b16b6eb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95571, 2668, 357, 11, 30, "Input", "ExpressionUUID" -> \
"1e984cbc-29b3-4813-8a73-3432f3f576a1"],
Cell[95931, 2681, 254, 8, 35, "Output", "ExpressionUUID" -> \
"528e9e07-f30b-4a63-8f02-89075aaf2c21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96222, 2694, 239, 6, 30, "Input", "ExpressionUUID" -> \
"24ded730-9741-4425-bdbc-6ab6ba581af9"],
Cell[96464, 2702, 251, 6, 49, "Output", "ExpressionUUID" -> \
"b513e91f-c9ee-454b-88d2-f66971cf4388"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96752, 2713, 364, 10, 30, "Input", "ExpressionUUID" -> \
"3d4752b3-7c46-451d-bf04-cc206120decb"],
Cell[97119, 2725, 233, 7, 33, "Output", "ExpressionUUID" -> \
"64b01037-2c39-4564-8d95-b212170542e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97389, 2737, 200, 5, 30, "Input", "ExpressionUUID" -> \
"561e902d-501c-4884-96f8-91c1611a16ab"],
Cell[97592, 2744, 290, 9, 33, "Output", "ExpressionUUID" -> \
"aa80d353-1642-4b9d-b440-69d182b6f4bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97919, 2758, 201, 5, 30, "Input", "ExpressionUUID" -> \
"f6ceaf06-c53d-48c4-9ae3-a7b1ad66e646"],
Cell[98123, 2765, 382, 12, 33, "Output", "ExpressionUUID" -> \
"b54aa0a8-6a69-434e-a141-3fde3da57af3"]
}, Open  ]],
Cell[98520, 2780, 156, 3, 30, "Input", "ExpressionUUID" -> \
"bd872ea3-7a74-41e1-8ad1-5892ea85f11f"],
Cell[CellGroupData[{
Cell[98701, 2787, 249, 6, 30, "Input", "ExpressionUUID" -> \
"98e9f32e-db4a-464f-bbfe-bbf4c7e9e8ba"],
Cell[98953, 2795, 211, 5, 30, "Output", "ExpressionUUID" -> \
"06fee888-b20f-4b1c-b310-c25713c0638b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99201, 2805, 244, 6, 30, "Input", "ExpressionUUID" -> \
"71f07508-87b4-4f1a-9da8-35f3b9ca4c84"],
Cell[99448, 2813, 187, 5, 30, "Output", "ExpressionUUID" -> \
"cdc1823b-d8e3-4b3b-adcd-97506ac9ed5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99672, 2823, 185, 4, 30, "Input", "ExpressionUUID" -> \
"ac1d05f5-d431-4735-b2d7-b4c950daab1a"],
Cell[99860, 2829, 144, 4, 32, "Output", "ExpressionUUID" -> \
"8aae1cde-9129-4a55-a2d2-b01abfc05d2d"]
}, Open  ]],
Cell[100019, 2836, 229, 5, 30, "Input", "ExpressionUUID" -> \
"73f8aecf-e669-40ed-aaf4-8b98fdc8345d"],
Cell[100251, 2843, 297, 11, 53, "Input", "ExpressionUUID" -> \
"d5bc5ed4-a0f2-443f-9b21-1ddffb558884"],
Cell[CellGroupData[{
Cell[100573, 2858, 262, 6, 30, "Input", "ExpressionUUID" -> \
"dfcda216-8ec0-471c-bd54-cb54bfc22a9f"],
Cell[100838, 2866, 213, 5, 52, "Output", "ExpressionUUID" -> \
"090d9c42-0e7e-4895-af36-7f27d7a1d050"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101088, 2876, 317, 10, 30, "Input", "ExpressionUUID" -> \
"a08b0d5e-833e-448f-b485-4322903779b6"],
Cell[101408, 2888, 365, 12, 35, "Output", "ExpressionUUID" -> \
"59345ea4-aca7-4099-af91-e770c7048e2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101810, 2905, 299, 8, 30, "Input", "ExpressionUUID" -> \
"f701928e-bba7-48ff-aa60-ed3a91310ad6"],
Cell[102112, 2915, 1312, 37, 245, "Output", "ExpressionUUID" -> \
"7e475fd6-ec31-4269-a1c3-78c4b18ee4e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103461, 2957, 735, 22, 30, "Input", "ExpressionUUID" -> \
"79bac235-4284-48df-8ff5-30b8101eaa6a"],
Cell[104199, 2981, 2225, 46, 378, "Output", "ExpressionUUID" -> \
"fcf8921f-87fe-4e3e-a09b-00be7e15dfb8"],
Cell[106427, 3029, 309, 8, 21, "Message", "ExpressionUUID" -> \
"b019f765-059c-476c-8240-84d381d236b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106773, 3042, 244, 6, 30, "Input", "ExpressionUUID" -> \
"adc0951f-0287-4cb6-9156-d26d8474e3dd"],
Cell[107020, 3050, 245, 6, 74, "Output", "ExpressionUUID" -> \
"690c308d-ac56-44f3-9abb-bb6535e192d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107302, 3061, 284, 7, 30, "Input", "ExpressionUUID" -> \
"3228228b-b762-4404-9dc4-e1be2b8d714e"],
Cell[107589, 3070, 299, 8, 42, "Output", "ExpressionUUID" -> \
"1028638c-9d00-44a5-8daf-c23e2ccc6fb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107925, 3083, 221, 5, 30, "Input", "ExpressionUUID" -> \
"36d082b1-62d4-40d4-aec3-ef70eeecab9d"],
Cell[108149, 3090, 165, 4, 40, "Output", "ExpressionUUID" -> \
"62644977-9c82-4d76-88f1-f019f9c2196e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108351, 3099, 131, 3, 30, "Input", "ExpressionUUID" -> \
"90364db0-98e3-4379-be61-2fb84c079030"],
Cell[108485, 3104, 161, 3, 30, "Output", "ExpressionUUID" -> \
"5b7461c7-e424-4b16-a379-46dcc9132682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108683, 3112, 190, 4, 30, "Input", "ExpressionUUID" -> \
"b444579a-0646-47c4-b953-ecbe58440c7f"],
Cell[108876, 3118, 213, 5, 30, "Output", "ExpressionUUID" -> \
"ec944ce7-6709-40d8-a725-48ce889afcb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109126, 3128, 223, 6, 30, "Input", "ExpressionUUID" -> \
"2c17c556-7637-46ab-92da-e06b1f401591"],
Cell[109352, 3136, 154, 4, 46, "Output", "ExpressionUUID" -> \
"a1004326-3961-41ab-9625-7feb1d05731e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109543, 3145, 254, 7, 30, "Input", "ExpressionUUID" -> \
"d8e5755b-271e-4a69-9a97-d1de19035a0f"],
Cell[109800, 3154, 150, 3, 30, "Output", "ExpressionUUID" -> \
"0362236f-3ea3-46c3-8b0e-3a236b51ce0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109987, 3162, 207, 5, 30, "Input", "ExpressionUUID" -> \
"34b30583-c116-4441-85c6-f8d759a12d18"],
Cell[110197, 3169, 197, 4, 30, "Output", "ExpressionUUID" -> \
"09f64f0c-ef6e-46af-b027-7366cce3c9a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110431, 3178, 126, 2, 30, "Input", "ExpressionUUID" -> \
"a535813f-6eca-4c68-bfa7-dba5b7fd7743"],
Cell[110560, 3182, 139, 2, 30, "Output", "ExpressionUUID" -> \
"e9f07fdf-dbef-4caa-8b3c-7b6902a1c93a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110736, 3189, 175, 4, 30, "Input", "ExpressionUUID" -> \
"7d82d390-ab1e-4f1b-8788-a38814f77967"],
Cell[110914, 3195, 147, 4, 30, "Output", "ExpressionUUID" -> \
"920b72c3-5b01-4fae-b2ce-4646330fefda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111098, 3204, 16993, 403, 75, "WolframAlphaShortInput", "ExpressionUUID" \
-> "39222e6e-6dc5-49f5-98a6-81b1832fb411"],
Cell[128094, 3609, 358, 8, 43, "Output", "ExpressionUUID" -> \
"44a21332-916e-45d8-b4d5-640cdf6fcbd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128489, 3622, 104252, 1960, 81, "WolframAlphaShortInput", \
"ExpressionUUID" -> "176b6fca-9093-4b88-8829-869e4742604d"],
Cell[232744, 5584, 16033, 281, 238, "Output", "ExpressionUUID" -> \
"c3388d03-85fa-497b-a760-aa4227d68fd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248814, 5870, 290, 4, 43, "Input", "ExpressionUUID" -> \
"3fe19479-a38a-4d00-8fff-ec075ee2bdf1"],
Cell[249107, 5876, 338, 7, 43, "Output", "ExpressionUUID" -> \
"cf6c91fc-38ec-4f6b-a723-8cd090fb01fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249482, 5888, 19191, 364, 89, "WolframAlphaShortInput", "ExpressionUUID" \
-> "908ad9f4-39e8-46ae-ac68-818130138de5"],
Cell[268676, 6254, 405, 9, 41, "Output", "ExpressionUUID" -> \
"26831bac-ab8b-4aa4-acfd-0b52c60cfa27"]
}, Open  ]],
Cell[269096, 6266, 17608, 412, 75, "WolframAlphaShortInput", "ExpressionUUID" \
-> "65ec1af1-5141-4b1b-aabb-fdb3179501b7"],
Cell[CellGroupData[{
Cell[286729, 6682, 337, 7, 61, "Input", "ExpressionUUID" -> \
"27444f3c-98c6-4df8-b2a9-cadfee448fc7"],
Cell[287069, 6691, 201, 5, 41, "Output", "ExpressionUUID" -> \
"4ea7dfdf-850d-4914-bfd0-3528cb7169dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287307, 6701, 20403, 476, 75, "WolframAlphaShortInput", "ExpressionUUID" \
-> "733ae205-7110-4a3c-9b0a-832a82ee01fb"],
Cell[307713, 7179, 204, 5, 41, "Output", "ExpressionUUID" -> \
"59ba838c-d161-404c-a6dc-3a190ea604ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307954, 7189, 16723, 387, 73, "WolframAlphaShortInput", "ExpressionUUID" \
-> "0e81c5c5-8fb2-49f4-9343-970eabca64f5"],
Cell[324680, 7578, 492, 11, 40, "Output", "ExpressionUUID" -> \
"bc26cd0c-1daa-46bb-9ef8-a4545f1b953a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325209, 7594, 505, 14, 30, "Input", "ExpressionUUID" -> \
"e782f15f-758b-4d0b-9687-41876e19c935"],
Cell[325717, 7610, 1095, 30, 33, "Output", "ExpressionUUID" -> \
"713c5d08-e1ea-4b45-9a84-ae400ffc73aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326849, 7645, 325, 7, 30, "Input", "ExpressionUUID" -> \
"fb76c8eb-4140-4995-ac14-eb1fe24bfda6"],
Cell[327177, 7654, 259822, 4421, 417, "Output", "ExpressionUUID" -> \
"d6812737-cf5c-4008-9580-67884ae6f96a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587036, 12080, 190, 4, 30, "Input", "ExpressionUUID" -> \
"e5de5bc6-3358-4f24-b013-01f08a732fd4"],
Cell[587229, 12086, 212, 5, 30, "Output", "ExpressionUUID" -> \
"d4681219-a478-4863-8f20-db05f05a42a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587478, 12096, 1293, 34, 69, "Input", "ExpressionUUID" -> \
"89918b57-3526-4e98-848e-3b3a91501f36"],
Cell[588774, 12132, 2485, 50, 400, "Output", "ExpressionUUID" -> \
"9f9f54e0-7a5e-4d7f-a875-3e705881e3d7"]
}, Open  ]],
Cell[591274, 12185, 154, 3, 30, InheritFromParent, "ExpressionUUID" -> \
"d09d36c7-edb0-4597-bdf3-02354eda9913"],
Cell[591431, 12190, 229, 4, 30, "Input", "ExpressionUUID" -> \
"a740a828-856c-4e63-b7f0-f0a0a81d07d2"],
Cell[591663, 12196, 156, 3, 30, "Input", "ExpressionUUID" -> \
"0277771b-6d30-4ae3-b270-9da6a1d9b60a"]
}
]
*)

